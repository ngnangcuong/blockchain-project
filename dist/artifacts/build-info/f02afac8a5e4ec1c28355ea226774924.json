{ "id": "f02afac8a5e4ec1c28355ea226774924", "_format": "hh-sol-build-info-1", "solcVersion": "0.8.20", "solcLongVersion": "0.8.20+commit.a1b79de6", "input": { "language": "Solidity", "sources": { "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n" }, "@openzeppelin/contracts/interfaces/IERC165.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n" }, "@openzeppelin/contracts/interfaces/IERC4906.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n" }, "@openzeppelin/contracts/interfaces/IERC721.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n" }, "@openzeppelin/contracts/token/ERC721/ERC721.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n" }, "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n" }, "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n" }, "@openzeppelin/contracts/token/ERC721/IERC721.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n" }, "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n" }, "@openzeppelin/contracts/utils/Context.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n" }, "@openzeppelin/contracts/utils/introspection/ERC165.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n" }, "@openzeppelin/contracts/utils/introspection/IERC165.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n" }, "@openzeppelin/contracts/utils/math/Math.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n" }, "@openzeppelin/contracts/utils/math/SignedMath.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n" }, "@openzeppelin/contracts/utils/Strings.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n" }, "contracts/IndividualNFTs.sol": { "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\n\r\ncontract IndividualNFTs is ERC721URIStorage {\r\n  uint256 private _tokenIds;\r\n  address marketplaceContract;\r\n  event NFTMinted(uint256);\r\n\r\n  constructor(address _marketplaceContract) ERC721(\"Bored Pets Yacht Club\", \"BPYC\") {\r\n    marketplaceContract = _marketplaceContract;\r\n  }\r\n\r\n  function mint(string memory _tokenURI) public {\r\n    _tokenIds++;\r\n    uint256 newTokenId = _tokenIds;\r\n    _safeMint(msg.sender, newTokenId);\r\n    _setTokenURI(newTokenId, _tokenURI);\r\n    setApprovalForAll(marketplaceContract, true);\r\n    emit NFTMinted(newTokenId);\r\n  }\r\n}" }, "contracts/NFTMarketplace.sol": { "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"contracts/ReentrancyGuard.sol\";\r\n\r\ncontract NFTMarketplace is ReentrancyGuard {\r\n    uint256 private _nftsSold;\r\n    uint256 private _nftCount;\r\n    uint256 public LISTING_FEE = 0.0001 ether;\r\n    address payable private _marketOwner;\r\n\r\n    mapping(uint256 => NFT) private _idToNFT; \r\n    struct NFT {\r\n        address nftContract;\r\n        uint256 tokenId;\r\n        address payable seller;\r\n        address payable owner;\r\n        uint256 price;\r\n        bool listed;\r\n    }\r\n\r\n    event NFTListed(\r\n        address nftContract,\r\n        uint256 tokenId,\r\n        address seller,\r\n        address owner,\r\n        uint256 price\r\n    );\r\n    event NFTSold(\r\n        address nftContract,\r\n        uint256 tokenId,\r\n        address seller,\r\n        address owner,\r\n        uint256 price\r\n    );\r\n\r\n    constructor() {\r\n        _marketOwner = payable(msg.sender);\r\n    }\r\n\r\n    // List the NFT on the marketplace\r\n    function listNFT(address _nftContract, uint256 _tokenId, uint256 _price) public payable nonReentrant {\r\n        require(_price > 0, \"Price must be at least 1 wei\");\r\n        require(msg.value == LISTING_FEE, \"Not enough ether for listing fee\");\r\n\r\n        IERC721(_nftContract).transferFrom(msg.sender, address(this), _tokenId);\r\n        _marketOwner.transfer(LISTING_FEE);\r\n        _nftCount++;\r\n\r\n        _idToNFT[_tokenId] = NFT(\r\n            _nftContract,\r\n            _tokenId,\r\n            payable(msg.sender),\r\n            payable(address(this)),\r\n            _price,\r\n            true\r\n        );\r\n\r\n        emit NFTListed(_nftContract, _tokenId, msg.sender, address(this), _price);\r\n    }\r\n\r\n    // Buy NFT\r\n    function buyNFT(address _nftContract, uint256 _tokenId) public payable nonReentrant {\r\n        NFT storage nft = _idToNFT[_tokenId];\r\n        require(msg.value >= nft.price, \"Not enough ether to cover asking price\");\r\n\r\n        address payable buyer = payable(msg.sender);\r\n        payable(nft.seller).transfer(msg.value);\r\n        IERC721(_nftContract).transferFrom(address(this), buyer, nft.tokenId);\r\n        nft.owner = buyer;\r\n        nft.listed = false;\r\n\r\n        _nftsSold++;\r\n        emit NFTSold(_nftContract, _tokenId, nft.seller, nft.owner, msg.value);\r\n    }\r\n\r\n    // Resell an NFT purchased from the marketplace\r\n    function resellNft(address _nftContract, uint256 _tokenId, uint256 _price) public payable nonReentrant {\r\n        require(_price > 0, \"Price must be at least 1 wei\");\r\n        require(msg.value == LISTING_FEE, \"Not enough ether for listing fee\");\r\n\r\n        IERC721(_nftContract).transferFrom(msg.sender, address(this), _tokenId);\r\n\r\n        NFT storage nft = _idToNFT[_tokenId];\r\n        nft.seller = payable(msg.sender);\r\n        nft.owner = payable(address(this));\r\n        nft.listed = true;\r\n        nft.price = _price;\r\n\r\n        _nftsSold--;\r\n        emit NFTListed(_nftContract, _tokenId, msg.sender, address(this), _price);\r\n    }\r\n\r\n    function getListedNFTs() public view returns (NFT[] memory) {\r\n        uint256 nftCount = _nftCount;\r\n        uint256 unsoldNFTCount = nftCount - _nftsSold;\r\n        NFT[] memory nfts = new NFT[](unsoldNFTCount);\r\n        uint nftsIndex = 0;\r\n        for (uint i = 0; i < nftCount; i++) {\r\n            if (_idToNFT[i + 1].listed) {\r\n                nfts[nftsIndex] = _idToNFT[i + 1];\r\n                nftsIndex++;\r\n            }\r\n        }\r\n\r\n        return nfts;\r\n    }\r\n\r\n    function getMyNFTs() public view returns(NFT[] memory) {\r\n        uint nftCount = _nftCount;\r\n        uint myNftCount = 0;\r\n        for (uint i = 0; i < nftCount; i++) {\r\n            if (_idToNFT[i + 1].owner == msg.sender) {\r\n                myNftCount++;\r\n            }\r\n        }\r\n\r\n        NFT[] memory nfts = new NFT[](myNftCount);\r\n        uint nftsIndex = 0;\r\n        for (uint i = 0; i < nftCount; i++) {\r\n            if (_idToNFT[i + 1].owner == msg.sender) {\r\n                nfts[nftsIndex] = _idToNFT[i + 1];\r\n                nftsIndex++;\r\n            }\r\n        }\r\n        return nfts;\r\n    }\r\n\r\n    function getMyListNFTs() public view returns(NFT[] memory) {\r\n        uint nftCount = _nftCount;\r\n        uint myNftCount = 0;\r\n        for (uint i = 0; i < nftCount; i++) {\r\n            if (_idToNFT[i + 1].seller == msg.sender && _idToNFT[i + 1].listed) {\r\n                myNftCount++;\r\n            }\r\n        }\r\n\r\n        NFT[] memory nfts = new NFT[](myNftCount);\r\n        uint nftsIndex = 0;\r\n        for (uint i = 0; i < nftCount; i++) {\r\n            if (_idToNFT[i + 1].seller == msg.sender && _idToNFT[i + 1].listed) {\r\n                nfts[nftsIndex] = _idToNFT[i + 1];\r\n                nftsIndex++;\r\n            }\r\n        }\r\n        return nfts;\r\n    }\r\n}" }, "contracts/ReentrancyGuard.sol": { "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title Helps contracts guard against reentrancy attacks.\r\n * @author Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>\r\n * @dev If you mark a function `nonReentrant`, you should also\r\n * mark it `external`.\r\n */\r\ncontract ReentrancyGuard {\r\n    /// @dev counter to allow mutex lock with only one SSTORE operation\r\n    uint256 private _guardCounter;\r\n\r\n    constructor () {\r\n        // The counter starts at one to prevent changing it from zero to a non-zero\r\n        // value, which is a more expensive operation.\r\n        _guardCounter = 1;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and make it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        _guardCounter += 1;\r\n        uint256 localCounter = _guardCounter;\r\n        _;\r\n        require(localCounter == _guardCounter);\r\n    }\r\n}" } }, "settings": { "evmVersion": "paris", "optimizer": { "enabled": false, "runs": 200 }, "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"], "": ["ast"] } } } }, "output": { "sources": { "@openzeppelin/contracts/interfaces/IERC165.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol", "exportedSymbols": { "IERC165": [1779] }, "id": 4, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 1, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "106:24:0" }, { "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol", "file": "../utils/introspection/IERC165.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 4, "sourceUnit": 1780, "src": "132:59:0", "symbolAliases": [{ "foreign": { "id": 2, "name": "IERC165", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1779, "src": "140:7:0", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }], "src": "106:86:0" }, "id": 0 }, "@openzeppelin/contracts/interfaces/IERC4906.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol", "exportedSymbols": { "IERC165": [1779], "IERC4906": [27], "IERC721": [1294] }, "id": 28, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 5, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "107:24:1" }, { "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol", "file": "./IERC165.sol", "id": 7, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 28, "sourceUnit": 4, "src": "133:38:1", "symbolAliases": [{ "foreign": { "id": 6, "name": "IERC165", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1779, "src": "141:7:1", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol", "file": "./IERC721.sol", "id": 9, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 28, "sourceUnit": 32, "src": "172:38:1", "symbolAliases": [{ "foreign": { "id": 8, "name": "IERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1294, "src": "180:7:1", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "abstract": false, "baseContracts": [{ "baseName": { "id": 11, "name": "IERC165", "nameLocations": ["279:7:1"], "nodeType": "IdentifierPath", "referencedDeclaration": 1779, "src": "279:7:1" }, "id": 12, "nodeType": "InheritanceSpecifier", "src": "279:7:1" }, { "baseName": { "id": 13, "name": "IERC721", "nameLocations": ["288:7:1"], "nodeType": "IdentifierPath", "referencedDeclaration": 1294, "src": "288:7:1" }, "id": 14, "nodeType": "InheritanceSpecifier", "src": "288:7:1" }], "canonicalName": "IERC4906", "contractDependencies": [], "contractKind": "interface", "documentation": { "id": 10, "nodeType": "StructuredDocumentation", "src": "212:45:1", "text": "@title EIP-721 Metadata Update Extension" }, "fullyImplemented": false, "id": 27, "linearizedBaseContracts": [27, 1294, 1779], "name": "IERC4906", "nameLocation": "267:8:1", "nodeType": "ContractDefinition", "nodes": [{ "anonymous": false, "documentation": { "id": 15, "nodeType": "StructuredDocumentation", "src": "302:201:1", "text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT." }, "eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7", "id": 19, "name": "MetadataUpdate", "nameLocation": "514:14:1", "nodeType": "EventDefinition", "parameters": { "id": 18, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 17, "indexed": false, "mutability": "mutable", "name": "_tokenId", "nameLocation": "537:8:1", "nodeType": "VariableDeclaration", "scope": 19, "src": "529:16:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 16, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "529:7:1", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "528:18:1" }, "src": "508:39:1" }, { "anonymous": false, "documentation": { "id": 20, "nodeType": "StructuredDocumentation", "src": "553:212:1", "text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs." }, "eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c", "id": 26, "name": "BatchMetadataUpdate", "nameLocation": "776:19:1", "nodeType": "EventDefinition", "parameters": { "id": 25, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 22, "indexed": false, "mutability": "mutable", "name": "_fromTokenId", "nameLocation": "804:12:1", "nodeType": "VariableDeclaration", "scope": 26, "src": "796:20:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 21, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "796:7:1", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 24, "indexed": false, "mutability": "mutable", "name": "_toTokenId", "nameLocation": "826:10:1", "nodeType": "VariableDeclaration", "scope": 26, "src": "818:18:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 23, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "818:7:1", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "795:42:1" }, "src": "770:68:1" }], "scope": 28, "src": "257:583:1", "usedErrors": [], "usedEvents": [19, 26, 1193, 1202, 1211] }], "src": "107:734:1" }, "id": 1 }, "@openzeppelin/contracts/interfaces/IERC721.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol", "exportedSymbols": { "IERC721": [1294] }, "id": 32, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 29, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "106:24:2" }, { "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol", "file": "../token/ERC721/IERC721.sol", "id": 31, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 32, "sourceUnit": 1295, "src": "132:52:2", "symbolAliases": [{ "foreign": { "id": 30, "name": "IERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1294, "src": "140:7:2", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }], "src": "106:79:2" }, "id": 2 }, "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol", "exportedSymbols": { "IERC1155Errors": [168], "IERC20Errors": [73], "IERC721Errors": [121] }, "id": 169, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 33, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "112:24:3" }, { "abstract": false, "baseContracts": [], "canonicalName": "IERC20Errors", "contractDependencies": [], "contractKind": "interface", "documentation": { "id": 34, "nodeType": "StructuredDocumentation", "src": "138:139:3", "text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens." }, "fullyImplemented": true, "id": 73, "linearizedBaseContracts": [73], "name": "IERC20Errors", "nameLocation": "288:12:3", "nodeType": "ContractDefinition", "nodes": [{ "documentation": { "id": 35, "nodeType": "StructuredDocumentation", "src": "307:309:3", "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer." }, "errorSelector": "e450d38c", "id": 43, "name": "ERC20InsufficientBalance", "nameLocation": "627:24:3", "nodeType": "ErrorDefinition", "parameters": { "id": 42, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 37, "mutability": "mutable", "name": "sender", "nameLocation": "660:6:3", "nodeType": "VariableDeclaration", "scope": 43, "src": "652:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 36, "name": "address", "nodeType": "ElementaryTypeName", "src": "652:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 39, "mutability": "mutable", "name": "balance", "nameLocation": "676:7:3", "nodeType": "VariableDeclaration", "scope": 43, "src": "668:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 38, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "668:7:3", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 41, "mutability": "mutable", "name": "needed", "nameLocation": "693:6:3", "nodeType": "VariableDeclaration", "scope": 43, "src": "685:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 40, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "685:7:3", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "651:49:3" }, "src": "621:80:3" }, { "documentation": { "id": 44, "nodeType": "StructuredDocumentation", "src": "707:152:3", "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred." }, "errorSelector": "96c6fd1e", "id": 48, "name": "ERC20InvalidSender", "nameLocation": "870:18:3", "nodeType": "ErrorDefinition", "parameters": { "id": 47, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 46, "mutability": "mutable", "name": "sender", "nameLocation": "897:6:3", "nodeType": "VariableDeclaration", "scope": 48, "src": "889:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 45, "name": "address", "nodeType": "ElementaryTypeName", "src": "889:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "888:16:3" }, "src": "864:41:3" }, { "documentation": { "id": 49, "nodeType": "StructuredDocumentation", "src": "911:159:3", "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred." }, "errorSelector": "ec442f05", "id": 53, "name": "ERC20InvalidReceiver", "nameLocation": "1081:20:3", "nodeType": "ErrorDefinition", "parameters": { "id": 52, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 51, "mutability": "mutable", "name": "receiver", "nameLocation": "1110:8:3", "nodeType": "VariableDeclaration", "scope": 53, "src": "1102:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 50, "name": "address", "nodeType": "ElementaryTypeName", "src": "1102:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "1101:18:3" }, "src": "1075:45:3" }, { "documentation": { "id": 54, "nodeType": "StructuredDocumentation", "src": "1126:345:3", "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer." }, "errorSelector": "fb8f41b2", "id": 62, "name": "ERC20InsufficientAllowance", "nameLocation": "1482:26:3", "nodeType": "ErrorDefinition", "parameters": { "id": 61, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 56, "mutability": "mutable", "name": "spender", "nameLocation": "1517:7:3", "nodeType": "VariableDeclaration", "scope": 62, "src": "1509:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 55, "name": "address", "nodeType": "ElementaryTypeName", "src": "1509:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 58, "mutability": "mutable", "name": "allowance", "nameLocation": "1534:9:3", "nodeType": "VariableDeclaration", "scope": 62, "src": "1526:17:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 57, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1526:7:3", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 60, "mutability": "mutable", "name": "needed", "nameLocation": "1553:6:3", "nodeType": "VariableDeclaration", "scope": 62, "src": "1545:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 59, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1545:7:3", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "1508:52:3" }, "src": "1476:85:3" }, { "documentation": { "id": 63, "nodeType": "StructuredDocumentation", "src": "1567:174:3", "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation." }, "errorSelector": "e602df05", "id": 67, "name": "ERC20InvalidApprover", "nameLocation": "1752:20:3", "nodeType": "ErrorDefinition", "parameters": { "id": 66, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 65, "mutability": "mutable", "name": "approver", "nameLocation": "1781:8:3", "nodeType": "VariableDeclaration", "scope": 67, "src": "1773:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 64, "name": "address", "nodeType": "ElementaryTypeName", "src": "1773:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "1772:18:3" }, "src": "1746:45:3" }, { "documentation": { "id": 68, "nodeType": "StructuredDocumentation", "src": "1797:195:3", "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner." }, "errorSelector": "94280d62", "id": 72, "name": "ERC20InvalidSpender", "nameLocation": "2003:19:3", "nodeType": "ErrorDefinition", "parameters": { "id": 71, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 70, "mutability": "mutable", "name": "spender", "nameLocation": "2031:7:3", "nodeType": "VariableDeclaration", "scope": 72, "src": "2023:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 69, "name": "address", "nodeType": "ElementaryTypeName", "src": "2023:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "2022:17:3" }, "src": "1997:43:3" }], "scope": 169, "src": "278:1764:3", "usedErrors": [43, 48, 53, 62, 67, 72], "usedEvents": [] }, { "abstract": false, "baseContracts": [], "canonicalName": "IERC721Errors", "contractDependencies": [], "contractKind": "interface", "documentation": { "id": 74, "nodeType": "StructuredDocumentation", "src": "2044:141:3", "text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens." }, "fullyImplemented": true, "id": 121, "linearizedBaseContracts": [121], "name": "IERC721Errors", "nameLocation": "2196:13:3", "nodeType": "ContractDefinition", "nodes": [{ "documentation": { "id": 75, "nodeType": "StructuredDocumentation", "src": "2216:219:3", "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token." }, "errorSelector": "89c62b64", "id": 79, "name": "ERC721InvalidOwner", "nameLocation": "2446:18:3", "nodeType": "ErrorDefinition", "parameters": { "id": 78, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 77, "mutability": "mutable", "name": "owner", "nameLocation": "2473:5:3", "nodeType": "VariableDeclaration", "scope": 79, "src": "2465:13:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 76, "name": "address", "nodeType": "ElementaryTypeName", "src": "2465:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "2464:15:3" }, "src": "2440:40:3" }, { "documentation": { "id": 80, "nodeType": "StructuredDocumentation", "src": "2486:132:3", "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token." }, "errorSelector": "7e273289", "id": 84, "name": "ERC721NonexistentToken", "nameLocation": "2629:22:3", "nodeType": "ErrorDefinition", "parameters": { "id": 83, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 82, "mutability": "mutable", "name": "tokenId", "nameLocation": "2660:7:3", "nodeType": "VariableDeclaration", "scope": 84, "src": "2652:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 81, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2652:7:3", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2651:17:3" }, "src": "2623:46:3" }, { "documentation": { "id": 85, "nodeType": "StructuredDocumentation", "src": "2675:289:3", "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token." }, "errorSelector": "64283d7b", "id": 93, "name": "ERC721IncorrectOwner", "nameLocation": "2975:20:3", "nodeType": "ErrorDefinition", "parameters": { "id": 92, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 87, "mutability": "mutable", "name": "sender", "nameLocation": "3004:6:3", "nodeType": "VariableDeclaration", "scope": 93, "src": "2996:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 86, "name": "address", "nodeType": "ElementaryTypeName", "src": "2996:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 89, "mutability": "mutable", "name": "tokenId", "nameLocation": "3020:7:3", "nodeType": "VariableDeclaration", "scope": 93, "src": "3012:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 88, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3012:7:3", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 91, "mutability": "mutable", "name": "owner", "nameLocation": "3037:5:3", "nodeType": "VariableDeclaration", "scope": 93, "src": "3029:13:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 90, "name": "address", "nodeType": "ElementaryTypeName", "src": "3029:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "2995:48:3" }, "src": "2969:75:3" }, { "documentation": { "id": 94, "nodeType": "StructuredDocumentation", "src": "3050:152:3", "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred." }, "errorSelector": "73c6ac6e", "id": 98, "name": "ERC721InvalidSender", "nameLocation": "3213:19:3", "nodeType": "ErrorDefinition", "parameters": { "id": 97, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 96, "mutability": "mutable", "name": "sender", "nameLocation": "3241:6:3", "nodeType": "VariableDeclaration", "scope": 98, "src": "3233:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 95, "name": "address", "nodeType": "ElementaryTypeName", "src": "3233:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "3232:16:3" }, "src": "3207:42:3" }, { "documentation": { "id": 99, "nodeType": "StructuredDocumentation", "src": "3255:159:3", "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred." }, "errorSelector": "64a0ae92", "id": 103, "name": "ERC721InvalidReceiver", "nameLocation": "3425:21:3", "nodeType": "ErrorDefinition", "parameters": { "id": 102, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 101, "mutability": "mutable", "name": "receiver", "nameLocation": "3455:8:3", "nodeType": "VariableDeclaration", "scope": 103, "src": "3447:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 100, "name": "address", "nodeType": "ElementaryTypeName", "src": "3447:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "3446:18:3" }, "src": "3419:46:3" }, { "documentation": { "id": 104, "nodeType": "StructuredDocumentation", "src": "3471:247:3", "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token." }, "errorSelector": "177e802f", "id": 110, "name": "ERC721InsufficientApproval", "nameLocation": "3729:26:3", "nodeType": "ErrorDefinition", "parameters": { "id": 109, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 106, "mutability": "mutable", "name": "operator", "nameLocation": "3764:8:3", "nodeType": "VariableDeclaration", "scope": 110, "src": "3756:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 105, "name": "address", "nodeType": "ElementaryTypeName", "src": "3756:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 108, "mutability": "mutable", "name": "tokenId", "nameLocation": "3782:7:3", "nodeType": "VariableDeclaration", "scope": 110, "src": "3774:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 107, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3774:7:3", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "3755:35:3" }, "src": "3723:68:3" }, { "documentation": { "id": 111, "nodeType": "StructuredDocumentation", "src": "3797:174:3", "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation." }, "errorSelector": "a9fbf51f", "id": 115, "name": "ERC721InvalidApprover", "nameLocation": "3982:21:3", "nodeType": "ErrorDefinition", "parameters": { "id": 114, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 113, "mutability": "mutable", "name": "approver", "nameLocation": "4012:8:3", "nodeType": "VariableDeclaration", "scope": 115, "src": "4004:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 112, "name": "address", "nodeType": "ElementaryTypeName", "src": "4004:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "4003:18:3" }, "src": "3976:46:3" }, { "documentation": { "id": 116, "nodeType": "StructuredDocumentation", "src": "4028:197:3", "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner." }, "errorSelector": "5b08ba18", "id": 120, "name": "ERC721InvalidOperator", "nameLocation": "4236:21:3", "nodeType": "ErrorDefinition", "parameters": { "id": 119, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 118, "mutability": "mutable", "name": "operator", "nameLocation": "4266:8:3", "nodeType": "VariableDeclaration", "scope": 120, "src": "4258:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 117, "name": "address", "nodeType": "ElementaryTypeName", "src": "4258:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "4257:18:3" }, "src": "4230:46:3" }], "scope": 169, "src": "2186:2092:3", "usedErrors": [79, 84, 93, 98, 103, 110, 115, 120], "usedEvents": [] }, { "abstract": false, "baseContracts": [], "canonicalName": "IERC1155Errors", "contractDependencies": [], "contractKind": "interface", "documentation": { "id": 122, "nodeType": "StructuredDocumentation", "src": "4280:143:3", "text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens." }, "fullyImplemented": true, "id": 168, "linearizedBaseContracts": [168], "name": "IERC1155Errors", "nameLocation": "4434:14:3", "nodeType": "ContractDefinition", "nodes": [{ "documentation": { "id": 123, "nodeType": "StructuredDocumentation", "src": "4455:361:3", "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token." }, "errorSelector": "03dee4c5", "id": 133, "name": "ERC1155InsufficientBalance", "nameLocation": "4827:26:3", "nodeType": "ErrorDefinition", "parameters": { "id": 132, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 125, "mutability": "mutable", "name": "sender", "nameLocation": "4862:6:3", "nodeType": "VariableDeclaration", "scope": 133, "src": "4854:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 124, "name": "address", "nodeType": "ElementaryTypeName", "src": "4854:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 127, "mutability": "mutable", "name": "balance", "nameLocation": "4878:7:3", "nodeType": "VariableDeclaration", "scope": 133, "src": "4870:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 126, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4870:7:3", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 129, "mutability": "mutable", "name": "needed", "nameLocation": "4895:6:3", "nodeType": "VariableDeclaration", "scope": 133, "src": "4887:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 128, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4887:7:3", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 131, "mutability": "mutable", "name": "tokenId", "nameLocation": "4911:7:3", "nodeType": "VariableDeclaration", "scope": 133, "src": "4903:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 130, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4903:7:3", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "4853:66:3" }, "src": "4821:99:3" }, { "documentation": { "id": 134, "nodeType": "StructuredDocumentation", "src": "4926:152:3", "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred." }, "errorSelector": "01a83514", "id": 138, "name": "ERC1155InvalidSender", "nameLocation": "5089:20:3", "nodeType": "ErrorDefinition", "parameters": { "id": 137, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 136, "mutability": "mutable", "name": "sender", "nameLocation": "5118:6:3", "nodeType": "VariableDeclaration", "scope": 138, "src": "5110:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 135, "name": "address", "nodeType": "ElementaryTypeName", "src": "5110:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "5109:16:3" }, "src": "5083:43:3" }, { "documentation": { "id": 139, "nodeType": "StructuredDocumentation", "src": "5132:159:3", "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred." }, "errorSelector": "57f447ce", "id": 143, "name": "ERC1155InvalidReceiver", "nameLocation": "5302:22:3", "nodeType": "ErrorDefinition", "parameters": { "id": 142, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 141, "mutability": "mutable", "name": "receiver", "nameLocation": "5333:8:3", "nodeType": "VariableDeclaration", "scope": 143, "src": "5325:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 140, "name": "address", "nodeType": "ElementaryTypeName", "src": "5325:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "5324:18:3" }, "src": "5296:47:3" }, { "documentation": { "id": 144, "nodeType": "StructuredDocumentation", "src": "5349:256:3", "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token." }, "errorSelector": "e237d922", "id": 150, "name": "ERC1155MissingApprovalForAll", "nameLocation": "5616:28:3", "nodeType": "ErrorDefinition", "parameters": { "id": 149, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 146, "mutability": "mutable", "name": "operator", "nameLocation": "5653:8:3", "nodeType": "VariableDeclaration", "scope": 150, "src": "5645:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 145, "name": "address", "nodeType": "ElementaryTypeName", "src": "5645:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 148, "mutability": "mutable", "name": "owner", "nameLocation": "5671:5:3", "nodeType": "VariableDeclaration", "scope": 150, "src": "5663:13:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 147, "name": "address", "nodeType": "ElementaryTypeName", "src": "5663:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "5644:33:3" }, "src": "5610:68:3" }, { "documentation": { "id": 151, "nodeType": "StructuredDocumentation", "src": "5684:174:3", "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation." }, "errorSelector": "3e31884e", "id": 155, "name": "ERC1155InvalidApprover", "nameLocation": "5869:22:3", "nodeType": "ErrorDefinition", "parameters": { "id": 154, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 153, "mutability": "mutable", "name": "approver", "nameLocation": "5900:8:3", "nodeType": "VariableDeclaration", "scope": 155, "src": "5892:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 152, "name": "address", "nodeType": "ElementaryTypeName", "src": "5892:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "5891:18:3" }, "src": "5863:47:3" }, { "documentation": { "id": 156, "nodeType": "StructuredDocumentation", "src": "5916:197:3", "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner." }, "errorSelector": "ced3e100", "id": 160, "name": "ERC1155InvalidOperator", "nameLocation": "6124:22:3", "nodeType": "ErrorDefinition", "parameters": { "id": 159, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 158, "mutability": "mutable", "name": "operator", "nameLocation": "6155:8:3", "nodeType": "VariableDeclaration", "scope": 160, "src": "6147:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 157, "name": "address", "nodeType": "ElementaryTypeName", "src": "6147:7:3", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "6146:18:3" }, "src": "6118:47:3" }, { "documentation": { "id": 161, "nodeType": "StructuredDocumentation", "src": "6171:280:3", "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts" }, "errorSelector": "5b059991", "id": 167, "name": "ERC1155InvalidArrayLength", "nameLocation": "6462:25:3", "nodeType": "ErrorDefinition", "parameters": { "id": 166, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 163, "mutability": "mutable", "name": "idsLength", "nameLocation": "6496:9:3", "nodeType": "VariableDeclaration", "scope": 167, "src": "6488:17:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 162, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6488:7:3", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 165, "mutability": "mutable", "name": "valuesLength", "nameLocation": "6515:12:3", "nodeType": "VariableDeclaration", "scope": 167, "src": "6507:20:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 164, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6507:7:3", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "6487:41:3" }, "src": "6456:73:3" }], "scope": 169, "src": "4424:2107:3", "usedErrors": [133, 138, 143, 150, 155, 160, 167], "usedEvents": [] }], "src": "112:6420:3" }, "id": 3 }, "@openzeppelin/contracts/token/ERC721/ERC721.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol", "exportedSymbols": { "Context": [1488], "ERC165": [1767], "ERC721": [1177], "IERC165": [1779], "IERC721": [1294], "IERC721Errors": [121], "IERC721Metadata": [1466], "IERC721Receiver": [1312], "Strings": [1743] }, "id": 1178, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 170, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "107:24:4" }, { "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol", "file": "./IERC721.sol", "id": 172, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1178, "sourceUnit": 1295, "src": "133:38:4", "symbolAliases": [{ "foreign": { "id": 171, "name": "IERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1294, "src": "141:7:4", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol", "file": "./IERC721Receiver.sol", "id": 174, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1178, "sourceUnit": 1313, "src": "172:54:4", "symbolAliases": [{ "foreign": { "id": 173, "name": "IERC721Receiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1312, "src": "180:15:4", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol", "file": "./extensions/IERC721Metadata.sol", "id": 176, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1178, "sourceUnit": 1467, "src": "227:65:4", "symbolAliases": [{ "foreign": { "id": 175, "name": "IERC721Metadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1466, "src": "235:15:4", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "absolutePath": "@openzeppelin/contracts/utils/Context.sol", "file": "../../utils/Context.sol", "id": 178, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1178, "sourceUnit": 1489, "src": "293:48:4", "symbolAliases": [{ "foreign": { "id": 177, "name": "Context", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1488, "src": "301:7:4", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "absolutePath": "@openzeppelin/contracts/utils/Strings.sol", "file": "../../utils/Strings.sol", "id": 180, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1178, "sourceUnit": 1744, "src": "342:48:4", "symbolAliases": [{ "foreign": { "id": 179, "name": "Strings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1743, "src": "350:7:4", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol", "file": "../../utils/introspection/ERC165.sol", "id": 183, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1178, "sourceUnit": 1768, "src": "391:69:4", "symbolAliases": [{ "foreign": { "id": 181, "name": "IERC165", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1779, "src": "399:7:4", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }, { "foreign": { "id": 182, "name": "ERC165", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1767, "src": "408:6:4", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol", "file": "../../interfaces/draft-IERC6093.sol", "id": 185, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1178, "sourceUnit": 169, "src": "461:66:4", "symbolAliases": [{ "foreign": { "id": 184, "name": "IERC721Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 121, "src": "469:13:4", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "abstract": true, "baseContracts": [{ "baseName": { "id": 187, "name": "Context", "nameLocations": ["804:7:4"], "nodeType": "IdentifierPath", "referencedDeclaration": 1488, "src": "804:7:4" }, "id": 188, "nodeType": "InheritanceSpecifier", "src": "804:7:4" }, { "baseName": { "id": 189, "name": "ERC165", "nameLocations": ["813:6:4"], "nodeType": "IdentifierPath", "referencedDeclaration": 1767, "src": "813:6:4" }, "id": 190, "nodeType": "InheritanceSpecifier", "src": "813:6:4" }, { "baseName": { "id": 191, "name": "IERC721", "nameLocations": ["821:7:4"], "nodeType": "IdentifierPath", "referencedDeclaration": 1294, "src": "821:7:4" }, "id": 192, "nodeType": "InheritanceSpecifier", "src": "821:7:4" }, { "baseName": { "id": 193, "name": "IERC721Metadata", "nameLocations": ["830:15:4"], "nodeType": "IdentifierPath", "referencedDeclaration": 1466, "src": "830:15:4" }, "id": 194, "nodeType": "InheritanceSpecifier", "src": "830:15:4" }, { "baseName": { "id": 195, "name": "IERC721Errors", "nameLocations": ["847:13:4"], "nodeType": "IdentifierPath", "referencedDeclaration": 121, "src": "847:13:4" }, "id": 196, "nodeType": "InheritanceSpecifier", "src": "847:13:4" }], "canonicalName": "ERC721", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 186, "nodeType": "StructuredDocumentation", "src": "529:246:4", "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}." }, "fullyImplemented": true, "id": 1177, "linearizedBaseContracts": [1177, 121, 1466, 1294, 1767, 1779, 1488], "name": "ERC721", "nameLocation": "794:6:4", "nodeType": "ContractDefinition", "nodes": [{ "global": false, "id": 199, "libraryName": { "id": 197, "name": "Strings", "nameLocations": ["873:7:4"], "nodeType": "IdentifierPath", "referencedDeclaration": 1743, "src": "873:7:4" }, "nodeType": "UsingForDirective", "src": "867:26:4", "typeName": { "id": 198, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "885:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } } }, { "constant": false, "id": 201, "mutability": "mutable", "name": "_name", "nameLocation": "932:5:4", "nodeType": "VariableDeclaration", "scope": 1177, "src": "917:20:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string" }, "typeName": { "id": 200, "name": "string", "nodeType": "ElementaryTypeName", "src": "917:6:4", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "private" }, { "constant": false, "id": 203, "mutability": "mutable", "name": "_symbol", "nameLocation": "979:7:4", "nodeType": "VariableDeclaration", "scope": 1177, "src": "964:22:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string" }, "typeName": { "id": 202, "name": "string", "nodeType": "ElementaryTypeName", "src": "964:6:4", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "private" }, { "constant": false, "id": 207, "mutability": "mutable", "name": "_owners", "nameLocation": "1037:7:4", "nodeType": "VariableDeclaration", "scope": 1177, "src": "993:51:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)" }, "typeName": { "id": 206, "keyName": "tokenId", "keyNameLocation": "1009:7:4", "keyType": { "id": 204, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1001:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Mapping", "src": "993:35:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)" }, "valueName": "", "valueNameLocation": "-1:-1:-1", "valueType": { "id": 205, "name": "address", "nodeType": "ElementaryTypeName", "src": "1020:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } } }, "visibility": "private" }, { "constant": false, "id": 211, "mutability": "mutable", "name": "_balances", "nameLocation": "1093:9:4", "nodeType": "VariableDeclaration", "scope": 1177, "src": "1051:51:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)" }, "typeName": { "id": 210, "keyName": "owner", "keyNameLocation": "1067:5:4", "keyType": { "id": 208, "name": "address", "nodeType": "ElementaryTypeName", "src": "1059:7:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "Mapping", "src": "1051:33:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)" }, "valueName": "", "valueNameLocation": "-1:-1:-1", "valueType": { "id": 209, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1076:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } } }, "visibility": "private" }, { "constant": false, "id": 215, "mutability": "mutable", "name": "_tokenApprovals", "nameLocation": "1153:15:4", "nodeType": "VariableDeclaration", "scope": 1177, "src": "1109:59:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)" }, "typeName": { "id": 214, "keyName": "tokenId", "keyNameLocation": "1125:7:4", "keyType": { "id": 212, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1117:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Mapping", "src": "1109:35:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)" }, "valueName": "", "valueNameLocation": "-1:-1:-1", "valueType": { "id": 213, "name": "address", "nodeType": "ElementaryTypeName", "src": "1136:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } } }, "visibility": "private" }, { "constant": false, "id": 221, "mutability": "mutable", "name": "_operatorApprovals", "nameLocation": "1243:18:4", "nodeType": "VariableDeclaration", "scope": 1177, "src": "1175:86:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))" }, "typeName": { "id": 220, "keyName": "owner", "keyNameLocation": "1191:5:4", "keyType": { "id": 216, "name": "address", "nodeType": "ElementaryTypeName", "src": "1183:7:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "Mapping", "src": "1175:59:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))" }, "valueName": "", "valueNameLocation": "-1:-1:-1", "valueType": { "id": 219, "keyName": "operator", "keyNameLocation": "1216:8:4", "keyType": { "id": 217, "name": "address", "nodeType": "ElementaryTypeName", "src": "1208:7:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "Mapping", "src": "1200:33:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)" }, "valueName": "", "valueNameLocation": "-1:-1:-1", "valueType": { "id": 218, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1228:4:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } } } }, "visibility": "private" }, { "body": { "id": 237, "nodeType": "Block", "src": "1437:57:4", "statements": [{ "expression": { "id": 231, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 229, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 201, "src": "1447:5:4", "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 230, "name": "name_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 224, "src": "1455:5:4", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "src": "1447:13:4", "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" } }, "id": 232, "nodeType": "ExpressionStatement", "src": "1447:13:4" }, { "expression": { "id": 235, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 233, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 203, "src": "1470:7:4", "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 234, "name": "symbol_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "1480:7:4", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "src": "1470:17:4", "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" } }, "id": 236, "nodeType": "ExpressionStatement", "src": "1470:17:4" }] }, "documentation": { "id": 222, "nodeType": "StructuredDocumentation", "src": "1268:108:4", "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection." }, "id": 238, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": { "id": 227, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 224, "mutability": "mutable", "name": "name_", "nameLocation": "1407:5:4", "nodeType": "VariableDeclaration", "scope": 238, "src": "1393:19:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 223, "name": "string", "nodeType": "ElementaryTypeName", "src": "1393:6:4", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }, { "constant": false, "id": 226, "mutability": "mutable", "name": "symbol_", "nameLocation": "1428:7:4", "nodeType": "VariableDeclaration", "scope": 238, "src": "1414:21:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 225, "name": "string", "nodeType": "ElementaryTypeName", "src": "1414:6:4", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "1392:44:4" }, "returnParameters": { "id": 228, "nodeType": "ParameterList", "parameters": [], "src": "1437:0:4" }, "scope": 1177, "src": "1381:113:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "baseFunctions": [1766, 1778], "body": { "id": 268, "nodeType": "Block", "src": "1669:192:4", "statements": [{ "expression": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 266, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 261, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }, "id": 254, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 249, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 241, "src": "1698:11:4", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "expression": { "arguments": [{ "id": 251, "name": "IERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1294, "src": "1718:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IERC721_$1294_$", "typeString": "type(contract IERC721)" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_type$_t_contract$_IERC721_$1294_$", "typeString": "type(contract IERC721)" }], "id": 250, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "1713:4:4", "typeDescriptions": { "typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 252, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1713:13:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1294", "typeString": "type(contract IERC721)" } }, "id": 253, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "1727:11:4", "memberName": "interfaceId", "nodeType": "MemberAccess", "src": "1713:25:4", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "src": "1698:40:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": { "commonType": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }, "id": 260, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 255, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 241, "src": "1754:11:4", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "expression": { "arguments": [{ "id": 257, "name": "IERC721Metadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1466, "src": "1774:15:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1466_$", "typeString": "type(contract IERC721Metadata)" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1466_$", "typeString": "type(contract IERC721Metadata)" }], "id": 256, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "1769:4:4", "typeDescriptions": { "typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 258, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1769:21:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1466", "typeString": "type(contract IERC721Metadata)" } }, "id": 259, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "1791:11:4", "memberName": "interfaceId", "nodeType": "MemberAccess", "src": "1769:33:4", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "src": "1754:48:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "1698:104:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": { "arguments": [{ "id": 264, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 241, "src": "1842:11:4", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes4", "typeString": "bytes4" }], "expression": { "id": 262, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -25, "src": "1818:5:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_super$_ERC721_$1177_$", "typeString": "type(contract super ERC721)" } }, "id": 263, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1824:17:4", "memberName": "supportsInterface", "nodeType": "MemberAccess", "referencedDeclaration": 1766, "src": "1818:23:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$", "typeString": "function (bytes4) view returns (bool)" } }, "id": 265, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1818:36:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "1698:156:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "functionReturnParameters": 248, "id": 267, "nodeType": "Return", "src": "1679:175:4" }] }, "documentation": { "id": 239, "nodeType": "StructuredDocumentation", "src": "1500:56:4", "text": " @dev See {IERC165-supportsInterface}." }, "functionSelector": "01ffc9a7", "id": 269, "implemented": true, "kind": "function", "modifiers": [], "name": "supportsInterface", "nameLocation": "1570:17:4", "nodeType": "FunctionDefinition", "overrides": { "id": 245, "nodeType": "OverrideSpecifier", "overrides": [{ "id": 243, "name": "ERC165", "nameLocations": ["1637:6:4"], "nodeType": "IdentifierPath", "referencedDeclaration": 1767, "src": "1637:6:4" }, { "id": 244, "name": "IERC165", "nameLocations": ["1645:7:4"], "nodeType": "IdentifierPath", "referencedDeclaration": 1779, "src": "1645:7:4" }], "src": "1628:25:4" }, "parameters": { "id": 242, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 241, "mutability": "mutable", "name": "interfaceId", "nameLocation": "1595:11:4", "nodeType": "VariableDeclaration", "scope": 269, "src": "1588:18:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }, "typeName": { "id": 240, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "1588:6:4", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "visibility": "internal" }], "src": "1587:20:4" }, "returnParameters": { "id": 248, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 247, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 269, "src": "1663:4:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 246, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1663:4:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "1662:6:4" }, "scope": 1177, "src": "1561:300:4", "stateMutability": "view", "virtual": true, "visibility": "public" }, { "baseFunctions": [1219], "body": { "id": 296, "nodeType": "Block", "src": "1992:136:4", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 282, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 277, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 272, "src": "2006:5:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 280, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2023:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 279, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2015:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 278, "name": "address", "nodeType": "ElementaryTypeName", "src": "2015:7:4", "typeDescriptions": {} } }, "id": 281, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2015:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "2006:19:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 291, "nodeType": "IfStatement", "src": "2002:87:4", "trueBody": { "id": 290, "nodeType": "Block", "src": "2027:62:4", "statements": [{ "errorCall": { "arguments": [{ "arguments": [{ "hexValue": "30", "id": 286, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2075:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 285, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2067:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 284, "name": "address", "nodeType": "ElementaryTypeName", "src": "2067:7:4", "typeDescriptions": {} } }, "id": 287, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2067:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 283, "name": "ERC721InvalidOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 79, "src": "2048:18:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$", "typeString": "function (address) pure" } }, "id": 288, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2048:30:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 289, "nodeType": "RevertStatement", "src": "2041:37:4" }] } }, { "expression": { "baseExpression": { "id": 292, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 211, "src": "2105:9:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)" } }, "id": 294, "indexExpression": { "id": 293, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 272, "src": "2115:5:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2105:16:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 276, "id": 295, "nodeType": "Return", "src": "2098:23:4" }] }, "documentation": { "id": 270, "nodeType": "StructuredDocumentation", "src": "1867:48:4", "text": " @dev See {IERC721-balanceOf}." }, "functionSelector": "70a08231", "id": 297, "implemented": true, "kind": "function", "modifiers": [], "name": "balanceOf", "nameLocation": "1929:9:4", "nodeType": "FunctionDefinition", "parameters": { "id": 273, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 272, "mutability": "mutable", "name": "owner", "nameLocation": "1947:5:4", "nodeType": "VariableDeclaration", "scope": 297, "src": "1939:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 271, "name": "address", "nodeType": "ElementaryTypeName", "src": "1939:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "1938:15:4" }, "returnParameters": { "id": 276, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 275, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 297, "src": "1983:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 274, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1983:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "1982:9:4" }, "scope": 1177, "src": "1920:208:4", "stateMutability": "view", "virtual": true, "visibility": "public" }, { "baseFunctions": [1227], "body": { "id": 309, "nodeType": "Block", "src": "2257:46:4", "statements": [{ "expression": { "arguments": [{ "id": 306, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 300, "src": "2288:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 305, "name": "_requireOwned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1112, "src": "2274:13:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)" } }, "id": 307, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2274:22:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "functionReturnParameters": 304, "id": 308, "nodeType": "Return", "src": "2267:29:4" }] }, "documentation": { "id": 298, "nodeType": "StructuredDocumentation", "src": "2134:46:4", "text": " @dev See {IERC721-ownerOf}." }, "functionSelector": "6352211e", "id": 310, "implemented": true, "kind": "function", "modifiers": [], "name": "ownerOf", "nameLocation": "2194:7:4", "nodeType": "FunctionDefinition", "parameters": { "id": 301, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 300, "mutability": "mutable", "name": "tokenId", "nameLocation": "2210:7:4", "nodeType": "VariableDeclaration", "scope": 310, "src": "2202:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 299, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2202:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2201:17:4" }, "returnParameters": { "id": 304, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 303, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 310, "src": "2248:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 302, "name": "address", "nodeType": "ElementaryTypeName", "src": "2248:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "2247:9:4" }, "scope": 1177, "src": "2185:118:4", "stateMutability": "view", "virtual": true, "visibility": "public" }, { "baseFunctions": [1451], "body": { "id": 318, "nodeType": "Block", "src": "2425:29:4", "statements": [{ "expression": { "id": 316, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 201, "src": "2442:5:4", "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" } }, "functionReturnParameters": 315, "id": 317, "nodeType": "Return", "src": "2435:12:4" }] }, "documentation": { "id": 311, "nodeType": "StructuredDocumentation", "src": "2309:51:4", "text": " @dev See {IERC721Metadata-name}." }, "functionSelector": "06fdde03", "id": 319, "implemented": true, "kind": "function", "modifiers": [], "name": "name", "nameLocation": "2374:4:4", "nodeType": "FunctionDefinition", "parameters": { "id": 312, "nodeType": "ParameterList", "parameters": [], "src": "2378:2:4" }, "returnParameters": { "id": 315, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 314, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 319, "src": "2410:13:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 313, "name": "string", "nodeType": "ElementaryTypeName", "src": "2410:6:4", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "2409:15:4" }, "scope": 1177, "src": "2365:89:4", "stateMutability": "view", "virtual": true, "visibility": "public" }, { "baseFunctions": [1457], "body": { "id": 327, "nodeType": "Block", "src": "2580:31:4", "statements": [{ "expression": { "id": 325, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 203, "src": "2597:7:4", "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" } }, "functionReturnParameters": 324, "id": 326, "nodeType": "Return", "src": "2590:14:4" }] }, "documentation": { "id": 320, "nodeType": "StructuredDocumentation", "src": "2460:53:4", "text": " @dev See {IERC721Metadata-symbol}." }, "functionSelector": "95d89b41", "id": 328, "implemented": true, "kind": "function", "modifiers": [], "name": "symbol", "nameLocation": "2527:6:4", "nodeType": "FunctionDefinition", "parameters": { "id": 321, "nodeType": "ParameterList", "parameters": [], "src": "2533:2:4" }, "returnParameters": { "id": 324, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 323, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 328, "src": "2565:13:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 322, "name": "string", "nodeType": "ElementaryTypeName", "src": "2565:6:4", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "2564:15:4" }, "scope": 1177, "src": "2518:93:4", "stateMutability": "view", "virtual": true, "visibility": "public" }, { "baseFunctions": [1465], "body": { "id": 363, "nodeType": "Block", "src": "2756:176:4", "statements": [{ "expression": { "arguments": [{ "id": 337, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 331, "src": "2780:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 336, "name": "_requireOwned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1112, "src": "2766:13:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)" } }, "id": 338, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2766:22:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 339, "nodeType": "ExpressionStatement", "src": "2766:22:4" }, { "assignments": [341], "declarations": [{ "constant": false, "id": 341, "mutability": "mutable", "name": "baseURI", "nameLocation": "2813:7:4", "nodeType": "VariableDeclaration", "scope": 363, "src": "2799:21:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 340, "name": "string", "nodeType": "ElementaryTypeName", "src": "2799:6:4", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "id": 344, "initialValue": { "arguments": [], "expression": { "argumentTypes": [], "id": 342, "name": "_baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 373, "src": "2823:8:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$", "typeString": "function () view returns (string memory)" } }, "id": 343, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2823:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "nodeType": "VariableDeclarationStatement", "src": "2799:34:4" }, { "expression": { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 351, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "arguments": [{ "id": 347, "name": "baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 341, "src": "2856:7:4", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }], "id": 346, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2850:5:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)" }, "typeName": { "id": 345, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2850:5:4", "typeDescriptions": {} } }, "id": 348, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2850:14:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 349, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2865:6:4", "memberName": "length", "nodeType": "MemberAccess", "src": "2850:21:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 350, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2874:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "2850:25:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseExpression": { "hexValue": "", "id": 360, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2923:2:4", "typeDescriptions": { "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\"" }, "value": "" }, "id": 361, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "2850:75:4", "trueExpression": { "arguments": [{ "id": 355, "name": "baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 341, "src": "2892:7:4", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, { "arguments": [], "expression": { "argumentTypes": [], "expression": { "id": 356, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 331, "src": "2901:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 357, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2909:8:4", "memberName": "toString", "nodeType": "MemberAccess", "referencedDeclaration": 1556, "src": "2901:16:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$", "typeString": "function (uint256) pure returns (string memory)" } }, "id": 358, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2901:18:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }, { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }], "expression": { "id": 353, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2878:6:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)" }, "typeName": { "id": 352, "name": "string", "nodeType": "ElementaryTypeName", "src": "2878:6:4", "typeDescriptions": {} } }, "id": 354, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2885:6:4", "memberName": "concat", "nodeType": "MemberAccess", "src": "2878:13:4", "typeDescriptions": { "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$", "typeString": "function () pure returns (string memory)" } }, "id": 359, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2878:42:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "functionReturnParameters": 335, "id": 362, "nodeType": "Return", "src": "2843:82:4" }] }, "documentation": { "id": 329, "nodeType": "StructuredDocumentation", "src": "2617:55:4", "text": " @dev See {IERC721Metadata-tokenURI}." }, "functionSelector": "c87b56dd", "id": 364, "implemented": true, "kind": "function", "modifiers": [], "name": "tokenURI", "nameLocation": "2686:8:4", "nodeType": "FunctionDefinition", "parameters": { "id": 332, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 331, "mutability": "mutable", "name": "tokenId", "nameLocation": "2703:7:4", "nodeType": "VariableDeclaration", "scope": 364, "src": "2695:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 330, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2695:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2694:17:4" }, "returnParameters": { "id": 335, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 334, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 364, "src": "2741:13:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 333, "name": "string", "nodeType": "ElementaryTypeName", "src": "2741:6:4", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "2740:15:4" }, "scope": 1177, "src": "2677:255:4", "stateMutability": "view", "virtual": true, "visibility": "public" }, { "body": { "id": 372, "nodeType": "Block", "src": "3240:26:4", "statements": [{ "expression": { "hexValue": "", "id": 370, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3257:2:4", "typeDescriptions": { "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\"" }, "value": "" }, "functionReturnParameters": 369, "id": 371, "nodeType": "Return", "src": "3250:9:4" }] }, "documentation": { "id": 365, "nodeType": "StructuredDocumentation", "src": "2938:231:4", "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts." }, "id": 373, "implemented": true, "kind": "function", "modifiers": [], "name": "_baseURI", "nameLocation": "3183:8:4", "nodeType": "FunctionDefinition", "parameters": { "id": 366, "nodeType": "ParameterList", "parameters": [], "src": "3191:2:4" }, "returnParameters": { "id": 369, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 368, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 373, "src": "3225:13:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 367, "name": "string", "nodeType": "ElementaryTypeName", "src": "3225:6:4", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "3224:15:4" }, "scope": 1177, "src": "3174:92:4", "stateMutability": "view", "virtual": true, "visibility": "internal" }, { "baseFunctions": [1267], "body": { "id": 388, "nodeType": "Block", "src": "3384:52:4", "statements": [{ "expression": { "arguments": [{ "id": 382, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 376, "src": "3403:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 383, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 378, "src": "3407:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "arguments": [], "expression": { "argumentTypes": [], "id": 384, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1478, "src": "3416:10:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)" } }, "id": 385, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3416:12:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "id": 381, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [980, 1046], "referencedDeclaration": 980, "src": "3394:8:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$", "typeString": "function (address,uint256,address)" } }, "id": 386, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3394:35:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 387, "nodeType": "ExpressionStatement", "src": "3394:35:4" }] }, "documentation": { "id": 374, "nodeType": "StructuredDocumentation", "src": "3272:46:4", "text": " @dev See {IERC721-approve}." }, "functionSelector": "095ea7b3", "id": 389, "implemented": true, "kind": "function", "modifiers": [], "name": "approve", "nameLocation": "3332:7:4", "nodeType": "FunctionDefinition", "parameters": { "id": 379, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 376, "mutability": "mutable", "name": "to", "nameLocation": "3348:2:4", "nodeType": "VariableDeclaration", "scope": 389, "src": "3340:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 375, "name": "address", "nodeType": "ElementaryTypeName", "src": "3340:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 378, "mutability": "mutable", "name": "tokenId", "nameLocation": "3360:7:4", "nodeType": "VariableDeclaration", "scope": 389, "src": "3352:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 377, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3352:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "3339:29:4" }, "returnParameters": { "id": 380, "nodeType": "ParameterList", "parameters": [], "src": "3384:0:4" }, "scope": 1177, "src": "3323:113:4", "stateMutability": "nonpayable", "virtual": true, "visibility": "public" }, { "baseFunctions": [1283], "body": { "id": 405, "nodeType": "Block", "src": "3573:78:4", "statements": [{ "expression": { "arguments": [{ "id": 398, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 392, "src": "3597:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 397, "name": "_requireOwned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1112, "src": "3583:13:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)" } }, "id": 399, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3583:22:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 400, "nodeType": "ExpressionStatement", "src": "3583:22:4" }, { "expression": { "arguments": [{ "id": 402, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 392, "src": "3636:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 401, "name": "_getApproved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 555, "src": "3623:12:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)" } }, "id": 403, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3623:21:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "functionReturnParameters": 396, "id": 404, "nodeType": "Return", "src": "3616:28:4" }] }, "documentation": { "id": 390, "nodeType": "StructuredDocumentation", "src": "3442:50:4", "text": " @dev See {IERC721-getApproved}." }, "functionSelector": "081812fc", "id": 406, "implemented": true, "kind": "function", "modifiers": [], "name": "getApproved", "nameLocation": "3506:11:4", "nodeType": "FunctionDefinition", "parameters": { "id": 393, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 392, "mutability": "mutable", "name": "tokenId", "nameLocation": "3526:7:4", "nodeType": "VariableDeclaration", "scope": 406, "src": "3518:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 391, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3518:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "3517:17:4" }, "returnParameters": { "id": 396, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 395, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 406, "src": "3564:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 394, "name": "address", "nodeType": "ElementaryTypeName", "src": "3564:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "3563:9:4" }, "scope": 1177, "src": "3497:154:4", "stateMutability": "view", "virtual": true, "visibility": "public" }, { "baseFunctions": [1275], "body": { "id": 421, "nodeType": "Block", "src": "3793:69:4", "statements": [{ "expression": { "arguments": [{ "arguments": [], "expression": { "argumentTypes": [], "id": 415, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1478, "src": "3822:10:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)" } }, "id": 416, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3822:12:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 417, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 409, "src": "3836:8:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 418, "name": "approved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 411, "src": "3846:8:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_bool", "typeString": "bool" }], "id": 414, "name": "_setApprovalForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1083, "src": "3803:18:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$", "typeString": "function (address,address,bool)" } }, "id": 419, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3803:52:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 420, "nodeType": "ExpressionStatement", "src": "3803:52:4" }] }, "documentation": { "id": 407, "nodeType": "StructuredDocumentation", "src": "3657:56:4", "text": " @dev See {IERC721-setApprovalForAll}." }, "functionSelector": "a22cb465", "id": 422, "implemented": true, "kind": "function", "modifiers": [], "name": "setApprovalForAll", "nameLocation": "3727:17:4", "nodeType": "FunctionDefinition", "parameters": { "id": 412, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 409, "mutability": "mutable", "name": "operator", "nameLocation": "3753:8:4", "nodeType": "VariableDeclaration", "scope": 422, "src": "3745:16:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 408, "name": "address", "nodeType": "ElementaryTypeName", "src": "3745:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 411, "mutability": "mutable", "name": "approved", "nameLocation": "3768:8:4", "nodeType": "VariableDeclaration", "scope": 422, "src": "3763:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 410, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3763:4:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "3744:33:4" }, "returnParameters": { "id": 413, "nodeType": "ParameterList", "parameters": [], "src": "3793:0:4" }, "scope": 1177, "src": "3718:144:4", "stateMutability": "nonpayable", "virtual": true, "visibility": "public" }, { "baseFunctions": [1293], "body": { "id": 438, "nodeType": "Block", "src": "4022:59:4", "statements": [{ "expression": { "baseExpression": { "baseExpression": { "id": 432, "name": "_operatorApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 221, "src": "4039:18:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))" } }, "id": 434, "indexExpression": { "id": 433, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 425, "src": "4058:5:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4039:25:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)" } }, "id": 436, "indexExpression": { "id": 435, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 427, "src": "4065:8:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4039:35:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "functionReturnParameters": 431, "id": 437, "nodeType": "Return", "src": "4032:42:4" }] }, "documentation": { "id": 423, "nodeType": "StructuredDocumentation", "src": "3868:55:4", "text": " @dev See {IERC721-isApprovedForAll}." }, "functionSelector": "e985e9c5", "id": 439, "implemented": true, "kind": "function", "modifiers": [], "name": "isApprovedForAll", "nameLocation": "3937:16:4", "nodeType": "FunctionDefinition", "parameters": { "id": 428, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 425, "mutability": "mutable", "name": "owner", "nameLocation": "3962:5:4", "nodeType": "VariableDeclaration", "scope": 439, "src": "3954:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 424, "name": "address", "nodeType": "ElementaryTypeName", "src": "3954:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 427, "mutability": "mutable", "name": "operator", "nameLocation": "3977:8:4", "nodeType": "VariableDeclaration", "scope": 439, "src": "3969:16:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 426, "name": "address", "nodeType": "ElementaryTypeName", "src": "3969:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "3953:33:4" }, "returnParameters": { "id": 431, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 430, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 439, "src": "4016:4:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 429, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4016:4:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "4015:6:4" }, "scope": 1177, "src": "3928:153:4", "stateMutability": "view", "virtual": true, "visibility": "public" }, { "baseFunctions": [1259], "body": { "id": 484, "nodeType": "Block", "src": "4223:498:4", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 454, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 449, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 444, "src": "4237:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 452, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4251:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 451, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4243:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 450, "name": "address", "nodeType": "ElementaryTypeName", "src": "4243:7:4", "typeDescriptions": {} } }, "id": 453, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4243:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "4237:16:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 463, "nodeType": "IfStatement", "src": "4233:87:4", "trueBody": { "id": 462, "nodeType": "Block", "src": "4255:65:4", "statements": [{ "errorCall": { "arguments": [{ "arguments": [{ "hexValue": "30", "id": 458, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4306:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 457, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4298:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 456, "name": "address", "nodeType": "ElementaryTypeName", "src": "4298:7:4", "typeDescriptions": {} } }, "id": 459, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4298:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 455, "name": "ERC721InvalidReceiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 103, "src": "4276:21:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$", "typeString": "function (address) pure" } }, "id": 460, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4276:33:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 461, "nodeType": "RevertStatement", "src": "4269:40:4" }] } }, { "assignments": [465], "declarations": [{ "constant": false, "id": 465, "mutability": "mutable", "name": "previousOwner", "nameLocation": "4546:13:4", "nodeType": "VariableDeclaration", "scope": 484, "src": "4538:21:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 464, "name": "address", "nodeType": "ElementaryTypeName", "src": "4538:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "id": 472, "initialValue": { "arguments": [{ "id": 467, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 444, "src": "4570:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 468, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 446, "src": "4574:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "arguments": [], "expression": { "argumentTypes": [], "id": 469, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1478, "src": "4583:10:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)" } }, "id": 470, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4583:12:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "id": 466, "name": "_update", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 734, "src": "4562:7:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$", "typeString": "function (address,uint256,address) returns (address)" } }, "id": 471, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4562:34:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "VariableDeclarationStatement", "src": "4538:58:4" }, { "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 475, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 473, "name": "previousOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 465, "src": "4610:13:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 474, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 442, "src": "4627:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "4610:21:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 483, "nodeType": "IfStatement", "src": "4606:109:4", "trueBody": { "id": 482, "nodeType": "Block", "src": "4633:82:4", "statements": [{ "errorCall": { "arguments": [{ "id": 477, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 442, "src": "4675:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 478, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 446, "src": "4681:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 479, "name": "previousOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 465, "src": "4690:13:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "id": 476, "name": "ERC721IncorrectOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 93, "src": "4654:20:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$", "typeString": "function (address,uint256,address) pure" } }, "id": 480, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4654:50:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 481, "nodeType": "RevertStatement", "src": "4647:57:4" }] } }] }, "documentation": { "id": 440, "nodeType": "StructuredDocumentation", "src": "4087:51:4", "text": " @dev See {IERC721-transferFrom}." }, "functionSelector": "23b872dd", "id": 485, "implemented": true, "kind": "function", "modifiers": [], "name": "transferFrom", "nameLocation": "4152:12:4", "nodeType": "FunctionDefinition", "parameters": { "id": 447, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 442, "mutability": "mutable", "name": "from", "nameLocation": "4173:4:4", "nodeType": "VariableDeclaration", "scope": 485, "src": "4165:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 441, "name": "address", "nodeType": "ElementaryTypeName", "src": "4165:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 444, "mutability": "mutable", "name": "to", "nameLocation": "4187:2:4", "nodeType": "VariableDeclaration", "scope": 485, "src": "4179:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 443, "name": "address", "nodeType": "ElementaryTypeName", "src": "4179:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 446, "mutability": "mutable", "name": "tokenId", "nameLocation": "4199:7:4", "nodeType": "VariableDeclaration", "scope": 485, "src": "4191:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 445, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4191:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "4164:43:4" }, "returnParameters": { "id": 448, "nodeType": "ParameterList", "parameters": [], "src": "4223:0:4" }, "scope": 1177, "src": "4143:578:4", "stateMutability": "nonpayable", "virtual": true, "visibility": "public" }, { "baseFunctions": [1249], "body": { "id": 502, "nodeType": "Block", "src": "4863:56:4", "statements": [{ "expression": { "arguments": [{ "id": 496, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 488, "src": "4890:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 497, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 490, "src": "4896:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 498, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 492, "src": "4900:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "hexValue": "", "id": 499, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4909:2:4", "typeDescriptions": { "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\"" }, "value": "" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\"" }], "id": 495, "name": "safeTransferFrom", "nodeType": "Identifier", "overloadedDeclarations": [503, 529], "referencedDeclaration": 529, "src": "4873:16:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (address,address,uint256,bytes memory)" } }, "id": 500, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4873:39:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 501, "nodeType": "ExpressionStatement", "src": "4873:39:4" }] }, "documentation": { "id": 486, "nodeType": "StructuredDocumentation", "src": "4727:55:4", "text": " @dev See {IERC721-safeTransferFrom}." }, "functionSelector": "42842e0e", "id": 503, "implemented": true, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nameLocation": "4796:16:4", "nodeType": "FunctionDefinition", "parameters": { "id": 493, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 488, "mutability": "mutable", "name": "from", "nameLocation": "4821:4:4", "nodeType": "VariableDeclaration", "scope": 503, "src": "4813:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 487, "name": "address", "nodeType": "ElementaryTypeName", "src": "4813:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 490, "mutability": "mutable", "name": "to", "nameLocation": "4835:2:4", "nodeType": "VariableDeclaration", "scope": 503, "src": "4827:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 489, "name": "address", "nodeType": "ElementaryTypeName", "src": "4827:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 492, "mutability": "mutable", "name": "tokenId", "nameLocation": "4847:7:4", "nodeType": "VariableDeclaration", "scope": 503, "src": "4839:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 491, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4839:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "4812:43:4" }, "returnParameters": { "id": 494, "nodeType": "ParameterList", "parameters": [], "src": "4863:0:4" }, "scope": 1177, "src": "4787:132:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "public" }, { "baseFunctions": [1239], "body": { "id": 528, "nodeType": "Block", "src": "5088:105:4", "statements": [{ "expression": { "arguments": [{ "id": 516, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 506, "src": "5111:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 517, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 508, "src": "5117:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 518, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 510, "src": "5121:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 515, "name": "transferFrom", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 485, "src": "5098:12:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)" } }, "id": 519, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5098:31:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 520, "nodeType": "ExpressionStatement", "src": "5098:31:4" }, { "expression": { "arguments": [{ "id": 522, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 506, "src": "5162:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 523, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 508, "src": "5168:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 524, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 510, "src": "5172:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 525, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 512, "src": "5181:4:4", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 521, "name": "_checkOnERC721Received", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1176, "src": "5139:22:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (address,address,uint256,bytes memory)" } }, "id": 526, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5139:47:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 527, "nodeType": "ExpressionStatement", "src": "5139:47:4" }] }, "documentation": { "id": 504, "nodeType": "StructuredDocumentation", "src": "4925:55:4", "text": " @dev See {IERC721-safeTransferFrom}." }, "functionSelector": "b88d4fde", "id": 529, "implemented": true, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nameLocation": "4994:16:4", "nodeType": "FunctionDefinition", "parameters": { "id": 513, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 506, "mutability": "mutable", "name": "from", "nameLocation": "5019:4:4", "nodeType": "VariableDeclaration", "scope": 529, "src": "5011:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 505, "name": "address", "nodeType": "ElementaryTypeName", "src": "5011:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 508, "mutability": "mutable", "name": "to", "nameLocation": "5033:2:4", "nodeType": "VariableDeclaration", "scope": 529, "src": "5025:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 507, "name": "address", "nodeType": "ElementaryTypeName", "src": "5025:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 510, "mutability": "mutable", "name": "tokenId", "nameLocation": "5045:7:4", "nodeType": "VariableDeclaration", "scope": 529, "src": "5037:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 509, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5037:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 512, "mutability": "mutable", "name": "data", "nameLocation": "5067:4:4", "nodeType": "VariableDeclaration", "scope": 529, "src": "5054:17:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" }, "typeName": { "id": 511, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5054:5:4", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "src": "5010:62:4" }, "returnParameters": { "id": 514, "nodeType": "ParameterList", "parameters": [], "src": "5088:0:4" }, "scope": 1177, "src": "4985:208:4", "stateMutability": "nonpayable", "virtual": true, "visibility": "public" }, { "body": { "id": 541, "nodeType": "Block", "src": "5782:40:4", "statements": [{ "expression": { "baseExpression": { "id": 537, "name": "_owners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 207, "src": "5799:7:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)" } }, "id": 539, "indexExpression": { "id": 538, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 532, "src": "5807:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5799:16:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "functionReturnParameters": 536, "id": 540, "nodeType": "Return", "src": "5792:23:4" }] }, "documentation": { "id": 530, "nodeType": "StructuredDocumentation", "src": "5199:503:4", "text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`." }, "id": 542, "implemented": true, "kind": "function", "modifiers": [], "name": "_ownerOf", "nameLocation": "5716:8:4", "nodeType": "FunctionDefinition", "parameters": { "id": 533, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 532, "mutability": "mutable", "name": "tokenId", "nameLocation": "5733:7:4", "nodeType": "VariableDeclaration", "scope": 542, "src": "5725:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 531, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5725:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "5724:17:4" }, "returnParameters": { "id": 536, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 535, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 542, "src": "5773:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 534, "name": "address", "nodeType": "ElementaryTypeName", "src": "5773:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "5772:9:4" }, "scope": 1177, "src": "5707:115:4", "stateMutability": "view", "virtual": true, "visibility": "internal" }, { "body": { "id": 554, "nodeType": "Block", "src": "6017:48:4", "statements": [{ "expression": { "baseExpression": { "id": 550, "name": "_tokenApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 215, "src": "6034:15:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)" } }, "id": 552, "indexExpression": { "id": 551, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 545, "src": "6050:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6034:24:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "functionReturnParameters": 549, "id": 553, "nodeType": "Return", "src": "6027:31:4" }] }, "documentation": { "id": 543, "nodeType": "StructuredDocumentation", "src": "5828:105:4", "text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted." }, "id": 555, "implemented": true, "kind": "function", "modifiers": [], "name": "_getApproved", "nameLocation": "5947:12:4", "nodeType": "FunctionDefinition", "parameters": { "id": 546, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 545, "mutability": "mutable", "name": "tokenId", "nameLocation": "5968:7:4", "nodeType": "VariableDeclaration", "scope": 555, "src": "5960:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 544, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5960:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "5959:17:4" }, "returnParameters": { "id": 549, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 548, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 555, "src": "6008:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 547, "name": "address", "nodeType": "ElementaryTypeName", "src": "6008:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "6007:9:4" }, "scope": 1177, "src": "5938:127:4", "stateMutability": "view", "virtual": true, "visibility": "internal" }, { "body": { "id": 590, "nodeType": "Block", "src": "6485:163:4", "statements": [{ "expression": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 588, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 572, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 567, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 560, "src": "6514:7:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 570, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6533:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 569, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6525:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 568, "name": "address", "nodeType": "ElementaryTypeName", "src": "6525:7:4", "typeDescriptions": {} } }, "id": 571, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6525:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "6514:21:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "components": [{ "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 586, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 580, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 575, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 573, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 558, "src": "6552:5:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "id": 574, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 560, "src": "6561:7:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "6552:16:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": { "arguments": [{ "id": 577, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 558, "src": "6589:5:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 578, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 560, "src": "6596:7:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }], "id": 576, "name": "isApprovedForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 439, "src": "6572:16:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$", "typeString": "function (address,address) view returns (bool)" } }, "id": 579, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6572:32:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "6552:52:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 585, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [{ "id": 582, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 562, "src": "6621:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 581, "name": "_getApproved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 555, "src": "6608:12:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)" } }, "id": 583, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6608:21:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "id": 584, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 560, "src": "6633:7:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "6608:32:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "6552:88:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }], "id": 587, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6551:90:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "6514:127:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "functionReturnParameters": 566, "id": 589, "nodeType": "Return", "src": "6495:146:4" }] }, "documentation": { "id": 556, "nodeType": "StructuredDocumentation", "src": "6071:300:4", "text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption." }, "id": 591, "implemented": true, "kind": "function", "modifiers": [], "name": "_isAuthorized", "nameLocation": "6385:13:4", "nodeType": "FunctionDefinition", "parameters": { "id": 563, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 558, "mutability": "mutable", "name": "owner", "nameLocation": "6407:5:4", "nodeType": "VariableDeclaration", "scope": 591, "src": "6399:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 557, "name": "address", "nodeType": "ElementaryTypeName", "src": "6399:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 560, "mutability": "mutable", "name": "spender", "nameLocation": "6422:7:4", "nodeType": "VariableDeclaration", "scope": 591, "src": "6414:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 559, "name": "address", "nodeType": "ElementaryTypeName", "src": "6414:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 562, "mutability": "mutable", "name": "tokenId", "nameLocation": "6439:7:4", "nodeType": "VariableDeclaration", "scope": 591, "src": "6431:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 561, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6431:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "6398:49:4" }, "returnParameters": { "id": 566, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 565, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 591, "src": "6479:4:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 564, "name": "bool", "nodeType": "ElementaryTypeName", "src": "6479:4:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "6478:6:4" }, "scope": 1177, "src": "6376:272:4", "stateMutability": "view", "virtual": true, "visibility": "internal" }, { "body": { "id": 627, "nodeType": "Block", "src": "7179:271:4", "statements": [{ "condition": { "id": 606, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "7193:39:4", "subExpression": { "arguments": [{ "id": 602, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 594, "src": "7208:5:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 603, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 596, "src": "7215:7:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 604, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 598, "src": "7224:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 601, "name": "_isAuthorized", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 591, "src": "7194:13:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) view returns (bool)" } }, "id": 605, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "7194:38:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 626, "nodeType": "IfStatement", "src": "7189:255:4", "trueBody": { "id": 625, "nodeType": "Block", "src": "7234:210:4", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 612, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 607, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 594, "src": "7252:5:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 610, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7269:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 609, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7261:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 608, "name": "address", "nodeType": "ElementaryTypeName", "src": "7261:7:4", "typeDescriptions": {} } }, "id": 611, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "7261:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "7252:19:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseBody": { "id": 623, "nodeType": "Block", "src": "7350:84:4", "statements": [{ "errorCall": { "arguments": [{ "id": 619, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 596, "src": "7402:7:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 620, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 598, "src": "7411:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 618, "name": "ERC721InsufficientApproval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 110, "src": "7375:26:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256) pure" } }, "id": 621, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "7375:44:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 622, "nodeType": "RevertStatement", "src": "7368:51:4" }] }, "id": 624, "nodeType": "IfStatement", "src": "7248:186:4", "trueBody": { "id": 617, "nodeType": "Block", "src": "7273:71:4", "statements": [{ "errorCall": { "arguments": [{ "id": 614, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 598, "src": "7321:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 613, "name": "ERC721NonexistentToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 84, "src": "7298:22:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure" } }, "id": 615, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "7298:31:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 616, "nodeType": "RevertStatement", "src": "7291:38:4" }] } }] } }] }, "documentation": { "id": 592, "nodeType": "StructuredDocumentation", "src": "6654:423:4", "text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption." }, "id": 628, "implemented": true, "kind": "function", "modifiers": [], "name": "_checkAuthorized", "nameLocation": "7091:16:4", "nodeType": "FunctionDefinition", "parameters": { "id": 599, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 594, "mutability": "mutable", "name": "owner", "nameLocation": "7116:5:4", "nodeType": "VariableDeclaration", "scope": 628, "src": "7108:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 593, "name": "address", "nodeType": "ElementaryTypeName", "src": "7108:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 596, "mutability": "mutable", "name": "spender", "nameLocation": "7131:7:4", "nodeType": "VariableDeclaration", "scope": 628, "src": "7123:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 595, "name": "address", "nodeType": "ElementaryTypeName", "src": "7123:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 598, "mutability": "mutable", "name": "tokenId", "nameLocation": "7148:7:4", "nodeType": "VariableDeclaration", "scope": 628, "src": "7140:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 597, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7140:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "7107:49:4" }, "returnParameters": { "id": 600, "nodeType": "ParameterList", "parameters": [], "src": "7179:0:4" }, "scope": 1177, "src": "7082:368:4", "stateMutability": "view", "virtual": true, "visibility": "internal" }, { "body": { "id": 643, "nodeType": "Block", "src": "8167:78:4", "statements": [{ "id": 642, "nodeType": "UncheckedBlock", "src": "8177:62:4", "statements": [{ "expression": { "id": 640, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 636, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 211, "src": "8201:9:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)" } }, "id": 638, "indexExpression": { "id": 637, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 631, "src": "8211:7:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8201:18:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "id": 639, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 633, "src": "8223:5:4", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" } }, "src": "8201:27:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 641, "nodeType": "ExpressionStatement", "src": "8201:27:4" }] }] }, "documentation": { "id": 629, "nodeType": "StructuredDocumentation", "src": "7456:631:4", "text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another." }, "id": 644, "implemented": true, "kind": "function", "modifiers": [], "name": "_increaseBalance", "nameLocation": "8101:16:4", "nodeType": "FunctionDefinition", "parameters": { "id": 634, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 631, "mutability": "mutable", "name": "account", "nameLocation": "8126:7:4", "nodeType": "VariableDeclaration", "scope": 644, "src": "8118:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 630, "name": "address", "nodeType": "ElementaryTypeName", "src": "8118:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 633, "mutability": "mutable", "name": "value", "nameLocation": "8143:5:4", "nodeType": "VariableDeclaration", "scope": 644, "src": "8135:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" }, "typeName": { "id": 632, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "8135:7:4", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" } }, "visibility": "internal" }], "src": "8117:32:4" }, "returnParameters": { "id": 635, "nodeType": "ParameterList", "parameters": [], "src": "8167:0:4" }, "scope": 1177, "src": "8092:153:4", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal" }, { "body": { "id": 733, "nodeType": "Block", "src": "8933:700:4", "statements": [{ "assignments": [657], "declarations": [{ "constant": false, "id": 657, "mutability": "mutable", "name": "from", "nameLocation": "8951:4:4", "nodeType": "VariableDeclaration", "scope": 733, "src": "8943:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 656, "name": "address", "nodeType": "ElementaryTypeName", "src": "8943:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "id": 661, "initialValue": { "arguments": [{ "id": 659, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 649, "src": "8967:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 658, "name": "_ownerOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 542, "src": "8958:8:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)" } }, "id": 660, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "8958:17:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "VariableDeclarationStatement", "src": "8943:32:4" }, { "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 667, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 662, "name": "auth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 651, "src": "9035:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 665, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9051:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 664, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9043:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 663, "name": "address", "nodeType": "ElementaryTypeName", "src": "9043:7:4", "typeDescriptions": {} } }, "id": 666, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9043:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "9035:18:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 675, "nodeType": "IfStatement", "src": "9031:86:4", "trueBody": { "id": 674, "nodeType": "Block", "src": "9055:62:4", "statements": [{ "expression": { "arguments": [{ "id": 669, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 657, "src": "9086:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 670, "name": "auth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 651, "src": "9092:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 671, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 649, "src": "9098:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 668, "name": "_checkAuthorized", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 628, "src": "9069:16:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256) view" } }, "id": 672, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9069:37:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 673, "nodeType": "ExpressionStatement", "src": "9069:37:4" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 681, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 676, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 657, "src": "9161:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 679, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9177:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 678, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9169:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 677, "name": "address", "nodeType": "ElementaryTypeName", "src": "9169:7:4", "typeDescriptions": {} } }, "id": 680, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9169:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "9161:18:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 703, "nodeType": "IfStatement", "src": "9157:256:4", "trueBody": { "id": 702, "nodeType": "Block", "src": "9181:232:4", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "hexValue": "30", "id": 685, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9294:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 684, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9286:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 683, "name": "address", "nodeType": "ElementaryTypeName", "src": "9286:7:4", "typeDescriptions": {} } }, "id": 686, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9286:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 687, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 649, "src": "9298:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "arguments": [{ "hexValue": "30", "id": 690, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9315:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 689, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9307:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 688, "name": "address", "nodeType": "ElementaryTypeName", "src": "9307:7:4", "typeDescriptions": {} } }, "id": 691, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9307:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "hexValue": "66616c7365", "id": 692, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "9319:5:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "false" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_bool", "typeString": "bool" }], "id": 682, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [980, 1046], "referencedDeclaration": 1046, "src": "9277:8:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$", "typeString": "function (address,uint256,address,bool)" } }, "id": 693, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9277:48:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 694, "nodeType": "ExpressionStatement", "src": "9277:48:4" }, { "id": 701, "nodeType": "UncheckedBlock", "src": "9340:63:4", "statements": [{ "expression": { "id": 699, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 695, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 211, "src": "9368:9:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)" } }, "id": 697, "indexExpression": { "id": 696, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 657, "src": "9378:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9368:15:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "-=", "rightHandSide": { "hexValue": "31", "id": 698, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9387:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "9368:20:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 700, "nodeType": "ExpressionStatement", "src": "9368:20:4" }] }] } }, { "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 709, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 704, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 647, "src": "9427:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 707, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9441:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 706, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9433:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 705, "name": "address", "nodeType": "ElementaryTypeName", "src": "9433:7:4", "typeDescriptions": {} } }, "id": 708, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9433:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "9427:16:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 718, "nodeType": "IfStatement", "src": "9423:107:4", "trueBody": { "id": 717, "nodeType": "Block", "src": "9445:85:4", "statements": [{ "id": 716, "nodeType": "UncheckedBlock", "src": "9459:61:4", "statements": [{ "expression": { "id": 714, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 710, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 211, "src": "9487:9:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)" } }, "id": 712, "indexExpression": { "id": 711, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 647, "src": "9497:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9487:13:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "31", "id": 713, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9504:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "9487:18:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 715, "nodeType": "ExpressionStatement", "src": "9487:18:4" }] }] } }, { "expression": { "id": 723, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 719, "name": "_owners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 207, "src": "9540:7:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)" } }, "id": 721, "indexExpression": { "id": 720, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 649, "src": "9548:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9540:16:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 722, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 647, "src": "9559:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "9540:21:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 724, "nodeType": "ExpressionStatement", "src": "9540:21:4" }, { "eventCall": { "arguments": [{ "id": 726, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 657, "src": "9586:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 727, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 647, "src": "9592:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 728, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 649, "src": "9596:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 725, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1193, "src": "9577:8:4", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)" } }, "id": 729, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9577:27:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 730, "nodeType": "EmitStatement", "src": "9572:32:4" }, { "expression": { "id": 731, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 657, "src": "9622:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "functionReturnParameters": 655, "id": 732, "nodeType": "Return", "src": "9615:11:4" }] }, "documentation": { "id": 645, "nodeType": "StructuredDocumentation", "src": "8251:582:4", "text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}." }, "id": 734, "implemented": true, "kind": "function", "modifiers": [], "name": "_update", "nameLocation": "8847:7:4", "nodeType": "FunctionDefinition", "parameters": { "id": 652, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 647, "mutability": "mutable", "name": "to", "nameLocation": "8863:2:4", "nodeType": "VariableDeclaration", "scope": 734, "src": "8855:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 646, "name": "address", "nodeType": "ElementaryTypeName", "src": "8855:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 649, "mutability": "mutable", "name": "tokenId", "nameLocation": "8875:7:4", "nodeType": "VariableDeclaration", "scope": 734, "src": "8867:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 648, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8867:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 651, "mutability": "mutable", "name": "auth", "nameLocation": "8892:4:4", "nodeType": "VariableDeclaration", "scope": 734, "src": "8884:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 650, "name": "address", "nodeType": "ElementaryTypeName", "src": "8884:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "8854:43:4" }, "returnParameters": { "id": 655, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 654, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 734, "src": "8924:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 653, "name": "address", "nodeType": "ElementaryTypeName", "src": "8924:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "8923:9:4" }, "scope": 1177, "src": "8838:795:4", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal" }, { "body": { "id": 783, "nodeType": "Block", "src": "10008:274:4", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 747, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 742, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 737, "src": "10022:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 745, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10036:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 744, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10028:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 743, "name": "address", "nodeType": "ElementaryTypeName", "src": "10028:7:4", "typeDescriptions": {} } }, "id": 746, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10028:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "10022:16:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 756, "nodeType": "IfStatement", "src": "10018:87:4", "trueBody": { "id": 755, "nodeType": "Block", "src": "10040:65:4", "statements": [{ "errorCall": { "arguments": [{ "arguments": [{ "hexValue": "30", "id": 751, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10091:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 750, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10083:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 749, "name": "address", "nodeType": "ElementaryTypeName", "src": "10083:7:4", "typeDescriptions": {} } }, "id": 752, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10083:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 748, "name": "ERC721InvalidReceiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 103, "src": "10061:21:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$", "typeString": "function (address) pure" } }, "id": 753, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10061:33:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 754, "nodeType": "RevertStatement", "src": "10054:40:4" }] } }, { "assignments": [758], "declarations": [{ "constant": false, "id": 758, "mutability": "mutable", "name": "previousOwner", "nameLocation": "10122:13:4", "nodeType": "VariableDeclaration", "scope": 783, "src": "10114:21:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 757, "name": "address", "nodeType": "ElementaryTypeName", "src": "10114:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "id": 767, "initialValue": { "arguments": [{ "id": 760, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 737, "src": "10146:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 761, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 739, "src": "10150:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "arguments": [{ "hexValue": "30", "id": 764, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10167:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 763, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10159:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 762, "name": "address", "nodeType": "ElementaryTypeName", "src": "10159:7:4", "typeDescriptions": {} } }, "id": 765, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10159:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "id": 759, "name": "_update", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 734, "src": "10138:7:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$", "typeString": "function (address,uint256,address) returns (address)" } }, "id": 766, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10138:32:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "VariableDeclarationStatement", "src": "10114:56:4" }, { "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 773, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 768, "name": "previousOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 758, "src": "10184:13:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 771, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10209:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 770, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10201:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 769, "name": "address", "nodeType": "ElementaryTypeName", "src": "10201:7:4", "typeDescriptions": {} } }, "id": 772, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10201:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "10184:27:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 782, "nodeType": "IfStatement", "src": "10180:96:4", "trueBody": { "id": 781, "nodeType": "Block", "src": "10213:63:4", "statements": [{ "errorCall": { "arguments": [{ "arguments": [{ "hexValue": "30", "id": 777, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10262:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 776, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10254:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 775, "name": "address", "nodeType": "ElementaryTypeName", "src": "10254:7:4", "typeDescriptions": {} } }, "id": 778, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10254:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 774, "name": "ERC721InvalidSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "10234:19:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$", "typeString": "function (address) pure" } }, "id": 779, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10234:31:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 780, "nodeType": "RevertStatement", "src": "10227:38:4" }] } }] }, "documentation": { "id": 735, "nodeType": "StructuredDocumentation", "src": "9639:311:4", "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event." }, "id": 784, "implemented": true, "kind": "function", "modifiers": [], "name": "_mint", "nameLocation": "9964:5:4", "nodeType": "FunctionDefinition", "parameters": { "id": 740, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 737, "mutability": "mutable", "name": "to", "nameLocation": "9978:2:4", "nodeType": "VariableDeclaration", "scope": 784, "src": "9970:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 736, "name": "address", "nodeType": "ElementaryTypeName", "src": "9970:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 739, "mutability": "mutable", "name": "tokenId", "nameLocation": "9990:7:4", "nodeType": "VariableDeclaration", "scope": 784, "src": "9982:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 738, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9982:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "9969:29:4" }, "returnParameters": { "id": 741, "nodeType": "ParameterList", "parameters": [], "src": "10008:0:4" }, "scope": 1177, "src": "9955:327:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "body": { "id": 798, "nodeType": "Block", "src": "10690:43:4", "statements": [{ "expression": { "arguments": [{ "id": 793, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 787, "src": "10710:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 794, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 789, "src": "10714:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "hexValue": "", "id": 795, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "10723:2:4", "typeDescriptions": { "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\"" }, "value": "" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\"" }], "id": 792, "name": "_safeMint", "nodeType": "Identifier", "overloadedDeclarations": [799, 825], "referencedDeclaration": 825, "src": "10700:9:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (address,uint256,bytes memory)" } }, "id": 796, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10700:26:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 797, "nodeType": "ExpressionStatement", "src": "10700:26:4" }] }, "documentation": { "id": 785, "nodeType": "StructuredDocumentation", "src": "10288:340:4", "text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event." }, "id": 799, "implemented": true, "kind": "function", "modifiers": [], "name": "_safeMint", "nameLocation": "10642:9:4", "nodeType": "FunctionDefinition", "parameters": { "id": 790, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 787, "mutability": "mutable", "name": "to", "nameLocation": "10660:2:4", "nodeType": "VariableDeclaration", "scope": 799, "src": "10652:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 786, "name": "address", "nodeType": "ElementaryTypeName", "src": "10652:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 789, "mutability": "mutable", "name": "tokenId", "nameLocation": "10672:7:4", "nodeType": "VariableDeclaration", "scope": 799, "src": "10664:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 788, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10664:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "10651:29:4" }, "returnParameters": { "id": 791, "nodeType": "ParameterList", "parameters": [], "src": "10690:0:4" }, "scope": 1177, "src": "10633:100:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "body": { "id": 824, "nodeType": "Block", "src": "11038:98:4", "statements": [{ "expression": { "arguments": [{ "id": 810, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 802, "src": "11054:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 811, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 804, "src": "11058:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 809, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 784, "src": "11048:5:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)" } }, "id": 812, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "11048:18:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 813, "nodeType": "ExpressionStatement", "src": "11048:18:4" }, { "expression": { "arguments": [{ "arguments": [{ "hexValue": "30", "id": 817, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11107:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 816, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11099:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 815, "name": "address", "nodeType": "ElementaryTypeName", "src": "11099:7:4", "typeDescriptions": {} } }, "id": 818, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "11099:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 819, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 802, "src": "11111:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 820, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 804, "src": "11115:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 821, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 806, "src": "11124:4:4", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 814, "name": "_checkOnERC721Received", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1176, "src": "11076:22:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (address,address,uint256,bytes memory)" } }, "id": 822, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "11076:53:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 823, "nodeType": "ExpressionStatement", "src": "11076:53:4" }] }, "documentation": { "id": 800, "nodeType": "StructuredDocumentation", "src": "10739:210:4", "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients." }, "id": 825, "implemented": true, "kind": "function", "modifiers": [], "name": "_safeMint", "nameLocation": "10963:9:4", "nodeType": "FunctionDefinition", "parameters": { "id": 807, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 802, "mutability": "mutable", "name": "to", "nameLocation": "10981:2:4", "nodeType": "VariableDeclaration", "scope": 825, "src": "10973:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 801, "name": "address", "nodeType": "ElementaryTypeName", "src": "10973:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 804, "mutability": "mutable", "name": "tokenId", "nameLocation": "10993:7:4", "nodeType": "VariableDeclaration", "scope": 825, "src": "10985:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 803, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10985:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 806, "mutability": "mutable", "name": "data", "nameLocation": "11015:4:4", "nodeType": "VariableDeclaration", "scope": 825, "src": "11002:17:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" }, "typeName": { "id": 805, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "11002:5:4", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "src": "10972:48:4" }, "returnParameters": { "id": 808, "nodeType": "ParameterList", "parameters": [], "src": "11038:0:4" }, "scope": 1177, "src": "10954:182:4", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal" }, { "body": { "id": 857, "nodeType": "Block", "src": "11503:186:4", "statements": [{ "assignments": [832], "declarations": [{ "constant": false, "id": 832, "mutability": "mutable", "name": "previousOwner", "nameLocation": "11521:13:4", "nodeType": "VariableDeclaration", "scope": 857, "src": "11513:21:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 831, "name": "address", "nodeType": "ElementaryTypeName", "src": "11513:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "id": 844, "initialValue": { "arguments": [{ "arguments": [{ "hexValue": "30", "id": 836, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11553:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 835, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11545:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 834, "name": "address", "nodeType": "ElementaryTypeName", "src": "11545:7:4", "typeDescriptions": {} } }, "id": 837, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "11545:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 838, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 828, "src": "11557:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "arguments": [{ "hexValue": "30", "id": 841, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11574:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 840, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11566:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 839, "name": "address", "nodeType": "ElementaryTypeName", "src": "11566:7:4", "typeDescriptions": {} } }, "id": 842, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "11566:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "id": 833, "name": "_update", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 734, "src": "11537:7:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$", "typeString": "function (address,uint256,address) returns (address)" } }, "id": 843, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "11537:40:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "VariableDeclarationStatement", "src": "11513:64:4" }, { "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 850, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 845, "name": "previousOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 832, "src": "11591:13:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 848, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11616:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 847, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11608:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 846, "name": "address", "nodeType": "ElementaryTypeName", "src": "11608:7:4", "typeDescriptions": {} } }, "id": 849, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "11608:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "11591:27:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 856, "nodeType": "IfStatement", "src": "11587:96:4", "trueBody": { "id": 855, "nodeType": "Block", "src": "11620:63:4", "statements": [{ "errorCall": { "arguments": [{ "id": 852, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 828, "src": "11664:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 851, "name": "ERC721NonexistentToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 84, "src": "11641:22:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure" } }, "id": 853, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "11641:31:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 854, "nodeType": "RevertStatement", "src": "11634:38:4" }] } }] }, "documentation": { "id": 826, "nodeType": "StructuredDocumentation", "src": "11142:315:4", "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event." }, "id": 858, "implemented": true, "kind": "function", "modifiers": [], "name": "_burn", "nameLocation": "11471:5:4", "nodeType": "FunctionDefinition", "parameters": { "id": 829, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 828, "mutability": "mutable", "name": "tokenId", "nameLocation": "11485:7:4", "nodeType": "VariableDeclaration", "scope": 858, "src": "11477:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 827, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11477:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "11476:17:4" }, "returnParameters": { "id": 830, "nodeType": "ParameterList", "parameters": [], "src": "11503:0:4" }, "scope": 1177, "src": "11462:227:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "body": { "id": 917, "nodeType": "Block", "src": "12084:389:4", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 873, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 868, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 863, "src": "12098:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 871, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12112:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 870, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12104:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 869, "name": "address", "nodeType": "ElementaryTypeName", "src": "12104:7:4", "typeDescriptions": {} } }, "id": 872, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "12104:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "12098:16:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 882, "nodeType": "IfStatement", "src": "12094:87:4", "trueBody": { "id": 881, "nodeType": "Block", "src": "12116:65:4", "statements": [{ "errorCall": { "arguments": [{ "arguments": [{ "hexValue": "30", "id": 877, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12167:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 876, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12159:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 875, "name": "address", "nodeType": "ElementaryTypeName", "src": "12159:7:4", "typeDescriptions": {} } }, "id": 878, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "12159:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 874, "name": "ERC721InvalidReceiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 103, "src": "12137:21:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$", "typeString": "function (address) pure" } }, "id": 879, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "12137:33:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 880, "nodeType": "RevertStatement", "src": "12130:40:4" }] } }, { "assignments": [884], "declarations": [{ "constant": false, "id": 884, "mutability": "mutable", "name": "previousOwner", "nameLocation": "12198:13:4", "nodeType": "VariableDeclaration", "scope": 917, "src": "12190:21:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 883, "name": "address", "nodeType": "ElementaryTypeName", "src": "12190:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "id": 893, "initialValue": { "arguments": [{ "id": 886, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 863, "src": "12222:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 887, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 865, "src": "12226:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "arguments": [{ "hexValue": "30", "id": 890, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12243:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 889, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12235:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 888, "name": "address", "nodeType": "ElementaryTypeName", "src": "12235:7:4", "typeDescriptions": {} } }, "id": 891, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "12235:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "id": 885, "name": "_update", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 734, "src": "12214:7:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$", "typeString": "function (address,uint256,address) returns (address)" } }, "id": 892, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "12214:32:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "VariableDeclarationStatement", "src": "12190:56:4" }, { "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 899, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 894, "name": "previousOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 884, "src": "12260:13:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 897, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12285:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 896, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12277:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 895, "name": "address", "nodeType": "ElementaryTypeName", "src": "12277:7:4", "typeDescriptions": {} } }, "id": 898, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "12277:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "12260:27:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseBody": { "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 907, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 905, "name": "previousOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 884, "src": "12362:13:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 906, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 861, "src": "12379:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "12362:21:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 915, "nodeType": "IfStatement", "src": "12358:109:4", "trueBody": { "id": 914, "nodeType": "Block", "src": "12385:82:4", "statements": [{ "errorCall": { "arguments": [{ "id": 909, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 861, "src": "12427:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 910, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 865, "src": "12433:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 911, "name": "previousOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 884, "src": "12442:13:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "id": 908, "name": "ERC721IncorrectOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 93, "src": "12406:20:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$", "typeString": "function (address,uint256,address) pure" } }, "id": 912, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "12406:50:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 913, "nodeType": "RevertStatement", "src": "12399:57:4" }] } }, "id": 916, "nodeType": "IfStatement", "src": "12256:211:4", "trueBody": { "id": 904, "nodeType": "Block", "src": "12289:63:4", "statements": [{ "errorCall": { "arguments": [{ "id": 901, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 865, "src": "12333:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 900, "name": "ERC721NonexistentToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 84, "src": "12310:22:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure" } }, "id": 902, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "12310:31:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 903, "nodeType": "RevertStatement", "src": "12303:38:4" }] } }] }, "documentation": { "id": 859, "nodeType": "StructuredDocumentation", "src": "11695:313:4", "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event." }, "id": 918, "implemented": true, "kind": "function", "modifiers": [], "name": "_transfer", "nameLocation": "12022:9:4", "nodeType": "FunctionDefinition", "parameters": { "id": 866, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 861, "mutability": "mutable", "name": "from", "nameLocation": "12040:4:4", "nodeType": "VariableDeclaration", "scope": 918, "src": "12032:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 860, "name": "address", "nodeType": "ElementaryTypeName", "src": "12032:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 863, "mutability": "mutable", "name": "to", "nameLocation": "12054:2:4", "nodeType": "VariableDeclaration", "scope": 918, "src": "12046:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 862, "name": "address", "nodeType": "ElementaryTypeName", "src": "12046:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 865, "mutability": "mutable", "name": "tokenId", "nameLocation": "12066:7:4", "nodeType": "VariableDeclaration", "scope": 918, "src": "12058:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 864, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12058:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "12031:43:4" }, "returnParameters": { "id": 867, "nodeType": "ParameterList", "parameters": [], "src": "12084:0:4" }, "scope": 1177, "src": "12013:460:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "body": { "id": 935, "nodeType": "Block", "src": "13481:53:4", "statements": [{ "expression": { "arguments": [{ "id": 929, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 921, "src": "13505:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 930, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 923, "src": "13511:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 931, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 925, "src": "13515:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "hexValue": "", "id": 932, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "13524:2:4", "typeDescriptions": { "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\"" }, "value": "" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\"" }], "id": 928, "name": "_safeTransfer", "nodeType": "Identifier", "overloadedDeclarations": [936, 962], "referencedDeclaration": 962, "src": "13491:13:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (address,address,uint256,bytes memory)" } }, "id": 933, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13491:36:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 934, "nodeType": "ExpressionStatement", "src": "13491:36:4" }] }, "documentation": { "id": 919, "nodeType": "StructuredDocumentation", "src": "12479:922:4", "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event." }, "id": 936, "implemented": true, "kind": "function", "modifiers": [], "name": "_safeTransfer", "nameLocation": "13415:13:4", "nodeType": "FunctionDefinition", "parameters": { "id": 926, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 921, "mutability": "mutable", "name": "from", "nameLocation": "13437:4:4", "nodeType": "VariableDeclaration", "scope": 936, "src": "13429:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 920, "name": "address", "nodeType": "ElementaryTypeName", "src": "13429:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 923, "mutability": "mutable", "name": "to", "nameLocation": "13451:2:4", "nodeType": "VariableDeclaration", "scope": 936, "src": "13443:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 922, "name": "address", "nodeType": "ElementaryTypeName", "src": "13443:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 925, "mutability": "mutable", "name": "tokenId", "nameLocation": "13463:7:4", "nodeType": "VariableDeclaration", "scope": 936, "src": "13455:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 924, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13455:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "13428:43:4" }, "returnParameters": { "id": 927, "nodeType": "ParameterList", "parameters": [], "src": "13481:0:4" }, "scope": 1177, "src": "13406:128:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "body": { "id": 961, "nodeType": "Block", "src": "13873:102:4", "statements": [{ "expression": { "arguments": [{ "id": 949, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 939, "src": "13893:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 950, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 941, "src": "13899:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 951, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 943, "src": "13903:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 948, "name": "_transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 918, "src": "13883:9:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)" } }, "id": 952, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13883:28:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 953, "nodeType": "ExpressionStatement", "src": "13883:28:4" }, { "expression": { "arguments": [{ "id": 955, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 939, "src": "13944:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 956, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 941, "src": "13950:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 957, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 943, "src": "13954:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 958, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 945, "src": "13963:4:4", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 954, "name": "_checkOnERC721Received", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1176, "src": "13921:22:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (address,address,uint256,bytes memory)" } }, "id": 959, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13921:47:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 960, "nodeType": "ExpressionStatement", "src": "13921:47:4" }] }, "documentation": { "id": 937, "nodeType": "StructuredDocumentation", "src": "13540:226:4", "text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients." }, "id": 962, "implemented": true, "kind": "function", "modifiers": [], "name": "_safeTransfer", "nameLocation": "13780:13:4", "nodeType": "FunctionDefinition", "parameters": { "id": 946, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 939, "mutability": "mutable", "name": "from", "nameLocation": "13802:4:4", "nodeType": "VariableDeclaration", "scope": 962, "src": "13794:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 938, "name": "address", "nodeType": "ElementaryTypeName", "src": "13794:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 941, "mutability": "mutable", "name": "to", "nameLocation": "13816:2:4", "nodeType": "VariableDeclaration", "scope": 962, "src": "13808:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 940, "name": "address", "nodeType": "ElementaryTypeName", "src": "13808:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 943, "mutability": "mutable", "name": "tokenId", "nameLocation": "13828:7:4", "nodeType": "VariableDeclaration", "scope": 962, "src": "13820:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 942, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13820:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 945, "mutability": "mutable", "name": "data", "nameLocation": "13850:4:4", "nodeType": "VariableDeclaration", "scope": 962, "src": "13837:17:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" }, "typeName": { "id": 944, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "13837:5:4", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "src": "13793:62:4" }, "returnParameters": { "id": 947, "nodeType": "ParameterList", "parameters": [], "src": "13873:0:4" }, "scope": 1177, "src": "13771:204:4", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal" }, { "body": { "id": 979, "nodeType": "Block", "src": "14488:50:4", "statements": [{ "expression": { "arguments": [{ "id": 973, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 965, "src": "14507:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 974, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 967, "src": "14511:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 975, "name": "auth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 969, "src": "14520:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "hexValue": "74727565", "id": 976, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "14526:4:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "true" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_bool", "typeString": "bool" }], "id": 972, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [980, 1046], "referencedDeclaration": 1046, "src": "14498:8:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$", "typeString": "function (address,uint256,address,bool)" } }, "id": 977, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "14498:33:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 978, "nodeType": "ExpressionStatement", "src": "14498:33:4" }] }, "documentation": { "id": 963, "nodeType": "StructuredDocumentation", "src": "13981:432:4", "text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument." }, "id": 980, "implemented": true, "kind": "function", "modifiers": [], "name": "_approve", "nameLocation": "14427:8:4", "nodeType": "FunctionDefinition", "parameters": { "id": 970, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 965, "mutability": "mutable", "name": "to", "nameLocation": "14444:2:4", "nodeType": "VariableDeclaration", "scope": 980, "src": "14436:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 964, "name": "address", "nodeType": "ElementaryTypeName", "src": "14436:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 967, "mutability": "mutable", "name": "tokenId", "nameLocation": "14456:7:4", "nodeType": "VariableDeclaration", "scope": 980, "src": "14448:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 966, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14448:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 969, "mutability": "mutable", "name": "auth", "nameLocation": "14473:4:4", "nodeType": "VariableDeclaration", "scope": 980, "src": "14465:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 968, "name": "address", "nodeType": "ElementaryTypeName", "src": "14465:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "14435:43:4" }, "returnParameters": { "id": 971, "nodeType": "ParameterList", "parameters": [], "src": "14488:0:4" }, "scope": 1177, "src": "14418:120:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "body": { "id": 1045, "nodeType": "Block", "src": "14814:568:4", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 999, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 992, "name": "emitEvent", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 989, "src": "14880:9:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 998, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 993, "name": "auth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 987, "src": "14893:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 996, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14909:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 995, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "14901:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 994, "name": "address", "nodeType": "ElementaryTypeName", "src": "14901:7:4", "typeDescriptions": {} } }, "id": 997, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "14901:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "14893:18:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "14880:31:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1038, "nodeType": "IfStatement", "src": "14876:460:4", "trueBody": { "id": 1037, "nodeType": "Block", "src": "14913:423:4", "statements": [{ "assignments": [1001], "declarations": [{ "constant": false, "id": 1001, "mutability": "mutable", "name": "owner", "nameLocation": "14935:5:4", "nodeType": "VariableDeclaration", "scope": 1037, "src": "14927:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1000, "name": "address", "nodeType": "ElementaryTypeName", "src": "14927:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "id": 1005, "initialValue": { "arguments": [{ "id": 1003, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 985, "src": "14957:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 1002, "name": "_requireOwned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1112, "src": "14943:13:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)" } }, "id": 1004, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "14943:22:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "VariableDeclarationStatement", "src": "14927:38:4" }, { "condition": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 1021, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 1015, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 1011, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1006, "name": "auth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 987, "src": "15093:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 1009, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15109:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 1008, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15101:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 1007, "name": "address", "nodeType": "ElementaryTypeName", "src": "15101:7:4", "typeDescriptions": {} } }, "id": 1010, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "15101:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "15093:18:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 1014, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1012, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1001, "src": "15115:5:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 1013, "name": "auth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 987, "src": "15124:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "15115:13:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "15093:35:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "id": 1020, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "15132:30:4", "subExpression": { "arguments": [{ "id": 1017, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1001, "src": "15150:5:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 1018, "name": "auth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 987, "src": "15157:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }], "id": 1016, "name": "isApprovedForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 439, "src": "15133:16:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$", "typeString": "function (address,address) view returns (bool)" } }, "id": 1019, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "15133:29:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "15093:69:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1027, "nodeType": "IfStatement", "src": "15089:142:4", "trueBody": { "id": 1026, "nodeType": "Block", "src": "15164:67:4", "statements": [{ "errorCall": { "arguments": [{ "id": 1023, "name": "auth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 987, "src": "15211:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 1022, "name": "ERC721InvalidApprover", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "15189:21:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$", "typeString": "function (address) pure" } }, "id": 1024, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "15189:27:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 1025, "nodeType": "RevertStatement", "src": "15182:34:4" }] } }, { "condition": { "id": 1028, "name": "emitEvent", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 989, "src": "15249:9:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1036, "nodeType": "IfStatement", "src": "15245:81:4", "trueBody": { "id": 1035, "nodeType": "Block", "src": "15260:66:4", "statements": [{ "eventCall": { "arguments": [{ "id": 1030, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1001, "src": "15292:5:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 1031, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 983, "src": "15299:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 1032, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 985, "src": "15303:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 1029, "name": "Approval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1202, "src": "15283:8:4", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)" } }, "id": 1033, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "15283:28:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 1034, "nodeType": "EmitStatement", "src": "15278:33:4" }] } }] } }, { "expression": { "id": 1043, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 1039, "name": "_tokenApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 215, "src": "15346:15:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)" } }, "id": 1041, "indexExpression": { "id": 1040, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 985, "src": "15362:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "15346:24:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 1042, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 983, "src": "15373:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "15346:29:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 1044, "nodeType": "ExpressionStatement", "src": "15346:29:4" }] }, "documentation": { "id": 981, "nodeType": "StructuredDocumentation", "src": "14544:171:4", "text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers." }, "id": 1046, "implemented": true, "kind": "function", "modifiers": [], "name": "_approve", "nameLocation": "14729:8:4", "nodeType": "FunctionDefinition", "parameters": { "id": 990, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 983, "mutability": "mutable", "name": "to", "nameLocation": "14746:2:4", "nodeType": "VariableDeclaration", "scope": 1046, "src": "14738:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 982, "name": "address", "nodeType": "ElementaryTypeName", "src": "14738:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 985, "mutability": "mutable", "name": "tokenId", "nameLocation": "14758:7:4", "nodeType": "VariableDeclaration", "scope": 1046, "src": "14750:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 984, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14750:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 987, "mutability": "mutable", "name": "auth", "nameLocation": "14775:4:4", "nodeType": "VariableDeclaration", "scope": 1046, "src": "14767:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 986, "name": "address", "nodeType": "ElementaryTypeName", "src": "14767:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 989, "mutability": "mutable", "name": "emitEvent", "nameLocation": "14786:9:4", "nodeType": "VariableDeclaration", "scope": 1046, "src": "14781:14:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 988, "name": "bool", "nodeType": "ElementaryTypeName", "src": "14781:4:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "14737:59:4" }, "returnParameters": { "id": 991, "nodeType": "ParameterList", "parameters": [], "src": "14814:0:4" }, "scope": 1177, "src": "14720:662:4", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal" }, { "body": { "id": 1082, "nodeType": "Block", "src": "15684:219:4", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 1061, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1056, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1051, "src": "15698:8:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 1059, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15718:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 1058, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15710:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 1057, "name": "address", "nodeType": "ElementaryTypeName", "src": "15710:7:4", "typeDescriptions": {} } }, "id": 1060, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "15710:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "15698:22:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1067, "nodeType": "IfStatement", "src": "15694:91:4", "trueBody": { "id": 1066, "nodeType": "Block", "src": "15722:63:4", "statements": [{ "errorCall": { "arguments": [{ "id": 1063, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1051, "src": "15765:8:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 1062, "name": "ERC721InvalidOperator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 120, "src": "15743:21:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$", "typeString": "function (address) pure" } }, "id": 1064, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "15743:31:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 1065, "nodeType": "RevertStatement", "src": "15736:38:4" }] } }, { "expression": { "id": 1074, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "baseExpression": { "id": 1068, "name": "_operatorApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 221, "src": "15794:18:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))" } }, "id": 1071, "indexExpression": { "id": 1069, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1049, "src": "15813:5:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "15794:25:4", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)" } }, "id": 1072, "indexExpression": { "id": 1070, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1051, "src": "15820:8:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "15794:35:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 1073, "name": "approved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1053, "src": "15832:8:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "15794:46:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1075, "nodeType": "ExpressionStatement", "src": "15794:46:4" }, { "eventCall": { "arguments": [{ "id": 1077, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1049, "src": "15870:5:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 1078, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1051, "src": "15877:8:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 1079, "name": "approved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1053, "src": "15887:8:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_bool", "typeString": "bool" }], "id": 1076, "name": "ApprovalForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1211, "src": "15855:14:4", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$", "typeString": "function (address,address,bool)" } }, "id": 1080, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "15855:41:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 1081, "nodeType": "EmitStatement", "src": "15850:46:4" }] }, "documentation": { "id": 1047, "nodeType": "StructuredDocumentation", "src": "15388:198:4", "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event." }, "id": 1083, "implemented": true, "kind": "function", "modifiers": [], "name": "_setApprovalForAll", "nameLocation": "15600:18:4", "nodeType": "FunctionDefinition", "parameters": { "id": 1054, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1049, "mutability": "mutable", "name": "owner", "nameLocation": "15627:5:4", "nodeType": "VariableDeclaration", "scope": 1083, "src": "15619:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1048, "name": "address", "nodeType": "ElementaryTypeName", "src": "15619:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1051, "mutability": "mutable", "name": "operator", "nameLocation": "15642:8:4", "nodeType": "VariableDeclaration", "scope": 1083, "src": "15634:16:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1050, "name": "address", "nodeType": "ElementaryTypeName", "src": "15634:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1053, "mutability": "mutable", "name": "approved", "nameLocation": "15657:8:4", "nodeType": "VariableDeclaration", "scope": 1083, "src": "15652:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 1052, "name": "bool", "nodeType": "ElementaryTypeName", "src": "15652:4:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "15618:48:4" }, "returnParameters": { "id": 1055, "nodeType": "ParameterList", "parameters": [], "src": "15684:0:4" }, "scope": 1177, "src": "15591:312:4", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal" }, { "body": { "id": 1111, "nodeType": "Block", "src": "16210:169:4", "statements": [{ "assignments": [1092], "declarations": [{ "constant": false, "id": 1092, "mutability": "mutable", "name": "owner", "nameLocation": "16228:5:4", "nodeType": "VariableDeclaration", "scope": 1111, "src": "16220:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1091, "name": "address", "nodeType": "ElementaryTypeName", "src": "16220:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "id": 1096, "initialValue": { "arguments": [{ "id": 1094, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1086, "src": "16245:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 1093, "name": "_ownerOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 542, "src": "16236:8:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)" } }, "id": 1095, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "16236:17:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "VariableDeclarationStatement", "src": "16220:33:4" }, { "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 1102, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1097, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1092, "src": "16267:5:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 1100, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16284:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 1099, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "16276:7:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 1098, "name": "address", "nodeType": "ElementaryTypeName", "src": "16276:7:4", "typeDescriptions": {} } }, "id": 1101, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "16276:10:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "16267:19:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1108, "nodeType": "IfStatement", "src": "16263:88:4", "trueBody": { "id": 1107, "nodeType": "Block", "src": "16288:63:4", "statements": [{ "errorCall": { "arguments": [{ "id": 1104, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1086, "src": "16332:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 1103, "name": "ERC721NonexistentToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 84, "src": "16309:22:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure" } }, "id": 1105, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "16309:31:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 1106, "nodeType": "RevertStatement", "src": "16302:38:4" }] } }, { "expression": { "id": 1109, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1092, "src": "16367:5:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "functionReturnParameters": 1090, "id": 1110, "nodeType": "Return", "src": "16360:12:4" }] }, "documentation": { "id": 1084, "nodeType": "StructuredDocumentation", "src": "15909:224:4", "text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}." }, "id": 1112, "implemented": true, "kind": "function", "modifiers": [], "name": "_requireOwned", "nameLocation": "16147:13:4", "nodeType": "FunctionDefinition", "parameters": { "id": 1087, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1086, "mutability": "mutable", "name": "tokenId", "nameLocation": "16169:7:4", "nodeType": "VariableDeclaration", "scope": 1112, "src": "16161:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1085, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16161:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "16160:17:4" }, "returnParameters": { "id": 1090, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1089, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1112, "src": "16201:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1088, "name": "address", "nodeType": "ElementaryTypeName", "src": "16201:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "16200:9:4" }, "scope": 1177, "src": "16138:241:4", "stateMutability": "view", "virtual": false, "visibility": "internal" }, { "body": { "id": 1175, "nodeType": "Block", "src": "17020:680:4", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1128, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "expression": { "id": 1124, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1117, "src": "17034:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 1125, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "17037:4:4", "memberName": "code", "nodeType": "MemberAccess", "src": "17034:7:4", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 1126, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "17042:6:4", "memberName": "length", "nodeType": "MemberAccess", "src": "17034:14:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 1127, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17051:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "17034:18:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1174, "nodeType": "IfStatement", "src": "17030:664:4", "trueBody": { "id": 1173, "nodeType": "Block", "src": "17054:640:4", "statements": [{ "clauses": [{ "block": { "id": 1153, "nodeType": "Block", "src": "17168:162:4", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }, "id": 1146, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1142, "name": "retval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1140, "src": "17190:6:4", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "expression": { "expression": { "id": 1143, "name": "IERC721Receiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1312, "src": "17200:15:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1312_$", "typeString": "type(contract IERC721Receiver)" } }, "id": 1144, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "17216:16:4", "memberName": "onERC721Received", "nodeType": "MemberAccess", "referencedDeclaration": 1311, "src": "17200:32:4", "typeDescriptions": { "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$", "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)" } }, "id": 1145, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "17233:8:4", "memberName": "selector", "nodeType": "MemberAccess", "src": "17200:41:4", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "src": "17190:51:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1152, "nodeType": "IfStatement", "src": "17186:130:4", "trueBody": { "id": 1151, "nodeType": "Block", "src": "17243:73:4", "statements": [{ "errorCall": { "arguments": [{ "id": 1148, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1117, "src": "17294:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 1147, "name": "ERC721InvalidReceiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 103, "src": "17272:21:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$", "typeString": "function (address) pure" } }, "id": 1149, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "17272:25:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 1150, "nodeType": "RevertStatement", "src": "17265:32:4" }] } }] }, "errorName": "", "id": 1154, "nodeType": "TryCatchClause", "parameters": { "id": 1141, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1140, "mutability": "mutable", "name": "retval", "nameLocation": "17160:6:4", "nodeType": "VariableDeclaration", "scope": 1154, "src": "17153:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }, "typeName": { "id": 1139, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "17153:6:4", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "visibility": "internal" }], "src": "17152:15:4" }, "src": "17144:186:4" }, { "block": { "id": 1170, "nodeType": "Block", "src": "17359:325:4", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1161, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 1158, "name": "reason", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1156, "src": "17381:6:4", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 1159, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "17388:6:4", "memberName": "length", "nodeType": "MemberAccess", "src": "17381:13:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "hexValue": "30", "id": 1160, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17398:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "17381:18:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseBody": { "id": 1168, "nodeType": "Block", "src": "17480:190:4", "statements": [{ "AST": { "nodeType": "YulBlock", "src": "17566:86:4", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "17603:2:4", "type": "", "value": "32" }, { "name": "reason", "nodeType": "YulIdentifier", "src": "17607:6:4" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "17599:3:4" }, "nodeType": "YulFunctionCall", "src": "17599:15:4" }, { "arguments": [{ "name": "reason", "nodeType": "YulIdentifier", "src": "17622:6:4" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "17616:5:4" }, "nodeType": "YulFunctionCall", "src": "17616:13:4" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "17592:6:4" }, "nodeType": "YulFunctionCall", "src": "17592:38:4" }, "nodeType": "YulExpressionStatement", "src": "17592:38:4" }] }, "documentation": "@solidity memory-safe-assembly", "evmVersion": "paris", "externalReferences": [{ "declaration": 1156, "isOffset": false, "isSlot": false, "src": "17607:6:4", "valueSize": 1 }, { "declaration": 1156, "isOffset": false, "isSlot": false, "src": "17622:6:4", "valueSize": 1 }], "id": 1167, "nodeType": "InlineAssembly", "src": "17557:95:4" }] }, "id": 1169, "nodeType": "IfStatement", "src": "17377:293:4", "trueBody": { "id": 1166, "nodeType": "Block", "src": "17401:73:4", "statements": [{ "errorCall": { "arguments": [{ "id": 1163, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1117, "src": "17452:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 1162, "name": "ERC721InvalidReceiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 103, "src": "17430:21:4", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$", "typeString": "function (address) pure" } }, "id": 1164, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "17430:25:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 1165, "nodeType": "RevertStatement", "src": "17423:32:4" }] } }] }, "errorName": "", "id": 1171, "nodeType": "TryCatchClause", "parameters": { "id": 1157, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1156, "mutability": "mutable", "name": "reason", "nameLocation": "17351:6:4", "nodeType": "VariableDeclaration", "scope": 1171, "src": "17338:19:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" }, "typeName": { "id": 1155, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "17338:5:4", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "src": "17337:21:4" }, "src": "17331:353:4" }], "externalCall": { "arguments": [{ "arguments": [], "expression": { "argumentTypes": [], "id": 1133, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1478, "src": "17109:10:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)" } }, "id": 1134, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "17109:12:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 1135, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1115, "src": "17123:4:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 1136, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1119, "src": "17129:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 1137, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1121, "src": "17138:4:4", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "expression": { "arguments": [{ "id": 1130, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1117, "src": "17088:2:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 1129, "name": "IERC721Receiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1312, "src": "17072:15:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1312_$", "typeString": "type(contract IERC721Receiver)" } }, "id": 1131, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "17072:19:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_contract$_IERC721Receiver_$1312", "typeString": "contract IERC721Receiver" } }, "id": 1132, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "17092:16:4", "memberName": "onERC721Received", "nodeType": "MemberAccess", "referencedDeclaration": 1311, "src": "17072:36:4", "typeDescriptions": { "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$", "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)" } }, "id": 1138, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "17072:71:4", "tryCall": true, "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "id": 1172, "nodeType": "TryStatement", "src": "17068:616:4" }] } }] }, "documentation": { "id": 1113, "nodeType": "StructuredDocumentation", "src": "16385:528:4", "text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call" }, "id": 1176, "implemented": true, "kind": "function", "modifiers": [], "name": "_checkOnERC721Received", "nameLocation": "16927:22:4", "nodeType": "FunctionDefinition", "parameters": { "id": 1122, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1115, "mutability": "mutable", "name": "from", "nameLocation": "16958:4:4", "nodeType": "VariableDeclaration", "scope": 1176, "src": "16950:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1114, "name": "address", "nodeType": "ElementaryTypeName", "src": "16950:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1117, "mutability": "mutable", "name": "to", "nameLocation": "16972:2:4", "nodeType": "VariableDeclaration", "scope": 1176, "src": "16964:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1116, "name": "address", "nodeType": "ElementaryTypeName", "src": "16964:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1119, "mutability": "mutable", "name": "tokenId", "nameLocation": "16984:7:4", "nodeType": "VariableDeclaration", "scope": 1176, "src": "16976:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1118, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16976:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 1121, "mutability": "mutable", "name": "data", "nameLocation": "17006:4:4", "nodeType": "VariableDeclaration", "scope": 1176, "src": "16993:17:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" }, "typeName": { "id": 1120, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "16993:5:4", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "src": "16949:62:4" }, "returnParameters": { "id": 1123, "nodeType": "ParameterList", "parameters": [], "src": "17020:0:4" }, "scope": 1177, "src": "16918:782:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "private" }], "scope": 1178, "src": "776:16926:4", "usedErrors": [79, 84, 93, 98, 103, 110, 115, 120], "usedEvents": [1193, 1202, 1211] }], "src": "107:17596:4" }, "id": 4 }, "@openzeppelin/contracts/token/ERC721/IERC721.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol", "exportedSymbols": { "IERC165": [1779], "IERC721": [1294] }, "id": 1295, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 1179, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "108:24:5" }, { "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol", "file": "../../utils/introspection/IERC165.sol", "id": 1181, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1295, "sourceUnit": 1780, "src": "134:62:5", "symbolAliases": [{ "foreign": { "id": 1180, "name": "IERC165", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1779, "src": "142:7:5", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "abstract": false, "baseContracts": [{ "baseName": { "id": 1183, "name": "IERC165", "nameLocations": ["287:7:5"], "nodeType": "IdentifierPath", "referencedDeclaration": 1779, "src": "287:7:5" }, "id": 1184, "nodeType": "InheritanceSpecifier", "src": "287:7:5" }], "canonicalName": "IERC721", "contractDependencies": [], "contractKind": "interface", "documentation": { "id": 1182, "nodeType": "StructuredDocumentation", "src": "198:67:5", "text": " @dev Required interface of an ERC721 compliant contract." }, "fullyImplemented": false, "id": 1294, "linearizedBaseContracts": [1294, 1779], "name": "IERC721", "nameLocation": "276:7:5", "nodeType": "ContractDefinition", "nodes": [{ "anonymous": false, "documentation": { "id": 1185, "nodeType": "StructuredDocumentation", "src": "301:88:5", "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`." }, "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef", "id": 1193, "name": "Transfer", "nameLocation": "400:8:5", "nodeType": "EventDefinition", "parameters": { "id": 1192, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1187, "indexed": true, "mutability": "mutable", "name": "from", "nameLocation": "425:4:5", "nodeType": "VariableDeclaration", "scope": 1193, "src": "409:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1186, "name": "address", "nodeType": "ElementaryTypeName", "src": "409:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1189, "indexed": true, "mutability": "mutable", "name": "to", "nameLocation": "447:2:5", "nodeType": "VariableDeclaration", "scope": 1193, "src": "431:18:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1188, "name": "address", "nodeType": "ElementaryTypeName", "src": "431:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1191, "indexed": true, "mutability": "mutable", "name": "tokenId", "nameLocation": "467:7:5", "nodeType": "VariableDeclaration", "scope": 1193, "src": "451:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1190, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "451:7:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "408:67:5" }, "src": "394:82:5" }, { "anonymous": false, "documentation": { "id": 1194, "nodeType": "StructuredDocumentation", "src": "482:94:5", "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token." }, "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925", "id": 1202, "name": "Approval", "nameLocation": "587:8:5", "nodeType": "EventDefinition", "parameters": { "id": 1201, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1196, "indexed": true, "mutability": "mutable", "name": "owner", "nameLocation": "612:5:5", "nodeType": "VariableDeclaration", "scope": 1202, "src": "596:21:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1195, "name": "address", "nodeType": "ElementaryTypeName", "src": "596:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1198, "indexed": true, "mutability": "mutable", "name": "approved", "nameLocation": "635:8:5", "nodeType": "VariableDeclaration", "scope": 1202, "src": "619:24:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1197, "name": "address", "nodeType": "ElementaryTypeName", "src": "619:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1200, "indexed": true, "mutability": "mutable", "name": "tokenId", "nameLocation": "661:7:5", "nodeType": "VariableDeclaration", "scope": 1202, "src": "645:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1199, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "645:7:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "595:74:5" }, "src": "581:89:5" }, { "anonymous": false, "documentation": { "id": 1203, "nodeType": "StructuredDocumentation", "src": "676:117:5", "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets." }, "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31", "id": 1211, "name": "ApprovalForAll", "nameLocation": "804:14:5", "nodeType": "EventDefinition", "parameters": { "id": 1210, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1205, "indexed": true, "mutability": "mutable", "name": "owner", "nameLocation": "835:5:5", "nodeType": "VariableDeclaration", "scope": 1211, "src": "819:21:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1204, "name": "address", "nodeType": "ElementaryTypeName", "src": "819:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1207, "indexed": true, "mutability": "mutable", "name": "operator", "nameLocation": "858:8:5", "nodeType": "VariableDeclaration", "scope": 1211, "src": "842:24:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1206, "name": "address", "nodeType": "ElementaryTypeName", "src": "842:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1209, "indexed": false, "mutability": "mutable", "name": "approved", "nameLocation": "873:8:5", "nodeType": "VariableDeclaration", "scope": 1211, "src": "868:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 1208, "name": "bool", "nodeType": "ElementaryTypeName", "src": "868:4:5", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "818:64:5" }, "src": "798:85:5" }, { "documentation": { "id": 1212, "nodeType": "StructuredDocumentation", "src": "889:76:5", "text": " @dev Returns the number of tokens in ``owner``'s account." }, "functionSelector": "70a08231", "id": 1219, "implemented": false, "kind": "function", "modifiers": [], "name": "balanceOf", "nameLocation": "979:9:5", "nodeType": "FunctionDefinition", "parameters": { "id": 1215, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1214, "mutability": "mutable", "name": "owner", "nameLocation": "997:5:5", "nodeType": "VariableDeclaration", "scope": 1219, "src": "989:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1213, "name": "address", "nodeType": "ElementaryTypeName", "src": "989:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "988:15:5" }, "returnParameters": { "id": 1218, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1217, "mutability": "mutable", "name": "balance", "nameLocation": "1035:7:5", "nodeType": "VariableDeclaration", "scope": 1219, "src": "1027:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1216, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1027:7:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "1026:17:5" }, "scope": 1294, "src": "970:74:5", "stateMutability": "view", "virtual": false, "visibility": "external" }, { "documentation": { "id": 1220, "nodeType": "StructuredDocumentation", "src": "1050:131:5", "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist." }, "functionSelector": "6352211e", "id": 1227, "implemented": false, "kind": "function", "modifiers": [], "name": "ownerOf", "nameLocation": "1195:7:5", "nodeType": "FunctionDefinition", "parameters": { "id": 1223, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1222, "mutability": "mutable", "name": "tokenId", "nameLocation": "1211:7:5", "nodeType": "VariableDeclaration", "scope": 1227, "src": "1203:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1221, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1203:7:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "1202:17:5" }, "returnParameters": { "id": 1226, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1225, "mutability": "mutable", "name": "owner", "nameLocation": "1251:5:5", "nodeType": "VariableDeclaration", "scope": 1227, "src": "1243:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1224, "name": "address", "nodeType": "ElementaryTypeName", "src": "1243:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "1242:15:5" }, "scope": 1294, "src": "1186:72:5", "stateMutability": "view", "virtual": false, "visibility": "external" }, { "documentation": { "id": 1228, "nodeType": "StructuredDocumentation", "src": "1264:565:5", "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event." }, "functionSelector": "b88d4fde", "id": 1239, "implemented": false, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nameLocation": "1843:16:5", "nodeType": "FunctionDefinition", "parameters": { "id": 1237, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1230, "mutability": "mutable", "name": "from", "nameLocation": "1868:4:5", "nodeType": "VariableDeclaration", "scope": 1239, "src": "1860:12:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1229, "name": "address", "nodeType": "ElementaryTypeName", "src": "1860:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1232, "mutability": "mutable", "name": "to", "nameLocation": "1882:2:5", "nodeType": "VariableDeclaration", "scope": 1239, "src": "1874:10:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1231, "name": "address", "nodeType": "ElementaryTypeName", "src": "1874:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1234, "mutability": "mutable", "name": "tokenId", "nameLocation": "1894:7:5", "nodeType": "VariableDeclaration", "scope": 1239, "src": "1886:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1233, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1886:7:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 1236, "mutability": "mutable", "name": "data", "nameLocation": "1918:4:5", "nodeType": "VariableDeclaration", "scope": 1239, "src": "1903:19:5", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes" }, "typeName": { "id": 1235, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1903:5:5", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "src": "1859:64:5" }, "returnParameters": { "id": 1238, "nodeType": "ParameterList", "parameters": [], "src": "1932:0:5" }, "scope": 1294, "src": "1834:99:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "documentation": { "id": 1240, "nodeType": "StructuredDocumentation", "src": "1939:705:5", "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event." }, "functionSelector": "42842e0e", "id": 1249, "implemented": false, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nameLocation": "2658:16:5", "nodeType": "FunctionDefinition", "parameters": { "id": 1247, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1242, "mutability": "mutable", "name": "from", "nameLocation": "2683:4:5", "nodeType": "VariableDeclaration", "scope": 1249, "src": "2675:12:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1241, "name": "address", "nodeType": "ElementaryTypeName", "src": "2675:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1244, "mutability": "mutable", "name": "to", "nameLocation": "2697:2:5", "nodeType": "VariableDeclaration", "scope": 1249, "src": "2689:10:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1243, "name": "address", "nodeType": "ElementaryTypeName", "src": "2689:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1246, "mutability": "mutable", "name": "tokenId", "nameLocation": "2709:7:5", "nodeType": "VariableDeclaration", "scope": 1249, "src": "2701:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1245, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2701:7:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2674:43:5" }, "returnParameters": { "id": 1248, "nodeType": "ParameterList", "parameters": [], "src": "2726:0:5" }, "scope": 1294, "src": "2649:78:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "documentation": { "id": 1250, "nodeType": "StructuredDocumentation", "src": "2733:732:5", "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event." }, "functionSelector": "23b872dd", "id": 1259, "implemented": false, "kind": "function", "modifiers": [], "name": "transferFrom", "nameLocation": "3479:12:5", "nodeType": "FunctionDefinition", "parameters": { "id": 1257, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1252, "mutability": "mutable", "name": "from", "nameLocation": "3500:4:5", "nodeType": "VariableDeclaration", "scope": 1259, "src": "3492:12:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1251, "name": "address", "nodeType": "ElementaryTypeName", "src": "3492:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1254, "mutability": "mutable", "name": "to", "nameLocation": "3514:2:5", "nodeType": "VariableDeclaration", "scope": 1259, "src": "3506:10:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1253, "name": "address", "nodeType": "ElementaryTypeName", "src": "3506:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1256, "mutability": "mutable", "name": "tokenId", "nameLocation": "3526:7:5", "nodeType": "VariableDeclaration", "scope": 1259, "src": "3518:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1255, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3518:7:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "3491:43:5" }, "returnParameters": { "id": 1258, "nodeType": "ParameterList", "parameters": [], "src": "3543:0:5" }, "scope": 1294, "src": "3470:74:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "documentation": { "id": 1260, "nodeType": "StructuredDocumentation", "src": "3550:452:5", "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event." }, "functionSelector": "095ea7b3", "id": 1267, "implemented": false, "kind": "function", "modifiers": [], "name": "approve", "nameLocation": "4016:7:5", "nodeType": "FunctionDefinition", "parameters": { "id": 1265, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1262, "mutability": "mutable", "name": "to", "nameLocation": "4032:2:5", "nodeType": "VariableDeclaration", "scope": 1267, "src": "4024:10:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1261, "name": "address", "nodeType": "ElementaryTypeName", "src": "4024:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1264, "mutability": "mutable", "name": "tokenId", "nameLocation": "4044:7:5", "nodeType": "VariableDeclaration", "scope": 1267, "src": "4036:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1263, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4036:7:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "4023:29:5" }, "returnParameters": { "id": 1266, "nodeType": "ParameterList", "parameters": [], "src": "4061:0:5" }, "scope": 1294, "src": "4007:55:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "documentation": { "id": 1268, "nodeType": "StructuredDocumentation", "src": "4068:315:5", "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event." }, "functionSelector": "a22cb465", "id": 1275, "implemented": false, "kind": "function", "modifiers": [], "name": "setApprovalForAll", "nameLocation": "4397:17:5", "nodeType": "FunctionDefinition", "parameters": { "id": 1273, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1270, "mutability": "mutable", "name": "operator", "nameLocation": "4423:8:5", "nodeType": "VariableDeclaration", "scope": 1275, "src": "4415:16:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1269, "name": "address", "nodeType": "ElementaryTypeName", "src": "4415:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1272, "mutability": "mutable", "name": "approved", "nameLocation": "4438:8:5", "nodeType": "VariableDeclaration", "scope": 1275, "src": "4433:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 1271, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4433:4:5", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "4414:33:5" }, "returnParameters": { "id": 1274, "nodeType": "ParameterList", "parameters": [], "src": "4456:0:5" }, "scope": 1294, "src": "4388:69:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "documentation": { "id": 1276, "nodeType": "StructuredDocumentation", "src": "4463:139:5", "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist." }, "functionSelector": "081812fc", "id": 1283, "implemented": false, "kind": "function", "modifiers": [], "name": "getApproved", "nameLocation": "4616:11:5", "nodeType": "FunctionDefinition", "parameters": { "id": 1279, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1278, "mutability": "mutable", "name": "tokenId", "nameLocation": "4636:7:5", "nodeType": "VariableDeclaration", "scope": 1283, "src": "4628:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1277, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4628:7:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "4627:17:5" }, "returnParameters": { "id": 1282, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1281, "mutability": "mutable", "name": "operator", "nameLocation": "4676:8:5", "nodeType": "VariableDeclaration", "scope": 1283, "src": "4668:16:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1280, "name": "address", "nodeType": "ElementaryTypeName", "src": "4668:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "4667:18:5" }, "scope": 1294, "src": "4607:79:5", "stateMutability": "view", "virtual": false, "visibility": "external" }, { "documentation": { "id": 1284, "nodeType": "StructuredDocumentation", "src": "4692:138:5", "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}" }, "functionSelector": "e985e9c5", "id": 1293, "implemented": false, "kind": "function", "modifiers": [], "name": "isApprovedForAll", "nameLocation": "4844:16:5", "nodeType": "FunctionDefinition", "parameters": { "id": 1289, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1286, "mutability": "mutable", "name": "owner", "nameLocation": "4869:5:5", "nodeType": "VariableDeclaration", "scope": 1293, "src": "4861:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1285, "name": "address", "nodeType": "ElementaryTypeName", "src": "4861:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1288, "mutability": "mutable", "name": "operator", "nameLocation": "4884:8:5", "nodeType": "VariableDeclaration", "scope": 1293, "src": "4876:16:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1287, "name": "address", "nodeType": "ElementaryTypeName", "src": "4876:7:5", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "4860:33:5" }, "returnParameters": { "id": 1292, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1291, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1293, "src": "4917:4:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 1290, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4917:4:5", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "4916:6:5" }, "scope": 1294, "src": "4835:88:5", "stateMutability": "view", "virtual": false, "visibility": "external" }], "scope": 1295, "src": "266:4659:5", "usedErrors": [], "usedEvents": [1193, 1202, 1211] }], "src": "108:4818:5" }, "id": 5 }, "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol", "exportedSymbols": { "IERC721Receiver": [1312] }, "id": 1313, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 1296, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "116:24:6" }, { "abstract": false, "baseContracts": [], "canonicalName": "IERC721Receiver", "contractDependencies": [], "contractKind": "interface", "documentation": { "id": 1297, "nodeType": "StructuredDocumentation", "src": "142:152:6", "text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts." }, "fullyImplemented": false, "id": 1312, "linearizedBaseContracts": [1312], "name": "IERC721Receiver", "nameLocation": "305:15:6", "nodeType": "ContractDefinition", "nodes": [{ "documentation": { "id": 1298, "nodeType": "StructuredDocumentation", "src": "327:500:6", "text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`." }, "functionSelector": "150b7a02", "id": 1311, "implemented": false, "kind": "function", "modifiers": [], "name": "onERC721Received", "nameLocation": "841:16:6", "nodeType": "FunctionDefinition", "parameters": { "id": 1307, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1300, "mutability": "mutable", "name": "operator", "nameLocation": "875:8:6", "nodeType": "VariableDeclaration", "scope": 1311, "src": "867:16:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1299, "name": "address", "nodeType": "ElementaryTypeName", "src": "867:7:6", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1302, "mutability": "mutable", "name": "from", "nameLocation": "901:4:6", "nodeType": "VariableDeclaration", "scope": 1311, "src": "893:12:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1301, "name": "address", "nodeType": "ElementaryTypeName", "src": "893:7:6", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 1304, "mutability": "mutable", "name": "tokenId", "nameLocation": "923:7:6", "nodeType": "VariableDeclaration", "scope": 1311, "src": "915:15:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1303, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "915:7:6", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 1306, "mutability": "mutable", "name": "data", "nameLocation": "955:4:6", "nodeType": "VariableDeclaration", "scope": 1311, "src": "940:19:6", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes" }, "typeName": { "id": 1305, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "940:5:6", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "src": "857:108:6" }, "returnParameters": { "id": 1310, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1309, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1311, "src": "984:6:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }, "typeName": { "id": 1308, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "984:6:6", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "visibility": "internal" }], "src": "983:8:6" }, "scope": 1312, "src": "832:160:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }], "scope": 1313, "src": "295:699:6", "usedErrors": [], "usedEvents": [] }], "src": "116:879:6" }, "id": 6 }, "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol", "exportedSymbols": { "ERC721": [1177], "ERC721URIStorage": [1438], "IERC165": [1779], "IERC4906": [27], "Strings": [1743] }, "id": 1439, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 1314, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "128:24:7" }, { "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol", "file": "../ERC721.sol", "id": 1316, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1439, "sourceUnit": 1178, "src": "154:37:7", "symbolAliases": [{ "foreign": { "id": 1315, "name": "ERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1177, "src": "162:6:7", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "absolutePath": "@openzeppelin/contracts/utils/Strings.sol", "file": "../../../utils/Strings.sol", "id": 1318, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1439, "sourceUnit": 1744, "src": "192:51:7", "symbolAliases": [{ "foreign": { "id": 1317, "name": "Strings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1743, "src": "200:7:7", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol", "file": "../../../interfaces/IERC4906.sol", "id": 1320, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1439, "sourceUnit": 28, "src": "244:58:7", "symbolAliases": [{ "foreign": { "id": 1319, "name": "IERC4906", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27, "src": "252:8:7", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol", "file": "../../../interfaces/IERC165.sol", "id": 1322, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1439, "sourceUnit": 4, "src": "303:56:7", "symbolAliases": [{ "foreign": { "id": 1321, "name": "IERC165", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1779, "src": "311:7:7", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "abstract": true, "baseContracts": [{ "baseName": { "id": 1324, "name": "IERC4906", "nameLocations": ["469:8:7"], "nodeType": "IdentifierPath", "referencedDeclaration": 27, "src": "469:8:7" }, "id": 1325, "nodeType": "InheritanceSpecifier", "src": "469:8:7" }, { "baseName": { "id": 1326, "name": "ERC721", "nameLocations": ["479:6:7"], "nodeType": "IdentifierPath", "referencedDeclaration": 1177, "src": "479:6:7" }, "id": 1327, "nodeType": "InheritanceSpecifier", "src": "479:6:7" }], "canonicalName": "ERC721URIStorage", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 1323, "nodeType": "StructuredDocumentation", "src": "361:69:7", "text": " @dev ERC721 token with storage based token URI management." }, "fullyImplemented": true, "id": 1438, "linearizedBaseContracts": [1438, 1177, 121, 1466, 27, 1294, 1767, 1779, 1488], "name": "ERC721URIStorage", "nameLocation": "449:16:7", "nodeType": "ContractDefinition", "nodes": [{ "global": false, "id": 1330, "libraryName": { "id": 1328, "name": "Strings", "nameLocations": ["498:7:7"], "nodeType": "IdentifierPath", "referencedDeclaration": 1743, "src": "498:7:7" }, "nodeType": "UsingForDirective", "src": "492:26:7", "typeName": { "id": 1329, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "510:7:7", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } } }, { "constant": true, "id": 1336, "mutability": "constant", "name": "ERC4906_INTERFACE_ID", "nameLocation": "730:20:7", "nodeType": "VariableDeclaration", "scope": 1438, "src": "706:65:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }, "typeName": { "id": 1331, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "706:6:7", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "value": { "arguments": [{ "hexValue": "30783439303634393036", "id": 1334, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "760:10:7", "typeDescriptions": { "typeIdentifier": "t_rational_1225148678_by_1", "typeString": "int_const 1225148678" }, "value": "0x49064906" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_1225148678_by_1", "typeString": "int_const 1225148678" }], "id": 1333, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "753:6:7", "typeDescriptions": { "typeIdentifier": "t_type$_t_bytes4_$", "typeString": "type(bytes4)" }, "typeName": { "id": 1332, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "753:6:7", "typeDescriptions": {} } }, "id": 1335, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "753:18:7", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "visibility": "private" }, { "constant": false, "id": 1340, "mutability": "mutable", "name": "_tokenURIs", "nameLocation": "860:10:7", "nodeType": "VariableDeclaration", "scope": 1438, "src": "817:53:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$", "typeString": "mapping(uint256 => string)" }, "typeName": { "id": 1339, "keyName": "tokenId", "keyNameLocation": "833:7:7", "keyType": { "id": 1337, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "825:7:7", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Mapping", "src": "817:34:7", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$", "typeString": "mapping(uint256 => string)" }, "valueName": "", "valueNameLocation": "-1:-1:-1", "valueType": { "id": 1338, "name": "string", "nodeType": "ElementaryTypeName", "src": "844:6:7", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } } }, "visibility": "private" }, { "baseFunctions": [269, 1778], "body": { "id": 1360, "nodeType": "Block", "src": "1045:99:7", "statements": [{ "expression": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 1358, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }, "id": 1353, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1351, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1343, "src": "1062:11:7", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "id": 1352, "name": "ERC4906_INTERFACE_ID", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1336, "src": "1077:20:7", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "src": "1062:35:7", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": { "arguments": [{ "id": 1356, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1343, "src": "1125:11:7", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes4", "typeString": "bytes4" }], "expression": { "id": 1354, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -25, "src": "1101:5:7", "typeDescriptions": { "typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1438_$", "typeString": "type(contract super ERC721URIStorage)" } }, "id": 1355, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1107:17:7", "memberName": "supportsInterface", "nodeType": "MemberAccess", "referencedDeclaration": 269, "src": "1101:23:7", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$", "typeString": "function (bytes4) view returns (bool)" } }, "id": 1357, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1101:36:7", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "1062:75:7", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "functionReturnParameters": 1350, "id": 1359, "nodeType": "Return", "src": "1055:82:7" }] }, "documentation": { "id": 1341, "nodeType": "StructuredDocumentation", "src": "877:55:7", "text": " @dev See {IERC165-supportsInterface}" }, "functionSelector": "01ffc9a7", "id": 1361, "implemented": true, "kind": "function", "modifiers": [], "name": "supportsInterface", "nameLocation": "946:17:7", "nodeType": "FunctionDefinition", "overrides": { "id": 1347, "nodeType": "OverrideSpecifier", "overrides": [{ "id": 1345, "name": "ERC721", "nameLocations": ["1013:6:7"], "nodeType": "IdentifierPath", "referencedDeclaration": 1177, "src": "1013:6:7" }, { "id": 1346, "name": "IERC165", "nameLocations": ["1021:7:7"], "nodeType": "IdentifierPath", "referencedDeclaration": 1779, "src": "1021:7:7" }], "src": "1004:25:7" }, "parameters": { "id": 1344, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1343, "mutability": "mutable", "name": "interfaceId", "nameLocation": "971:11:7", "nodeType": "VariableDeclaration", "scope": 1361, "src": "964:18:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }, "typeName": { "id": 1342, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "964:6:7", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "visibility": "internal" }], "src": "963:20:7" }, "returnParameters": { "id": 1350, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1349, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1361, "src": "1039:4:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 1348, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1039:4:7", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "1038:6:7" }, "scope": 1438, "src": "937:207:7", "stateMutability": "view", "virtual": true, "visibility": "public" }, { "baseFunctions": [364], "body": { "id": 1417, "nodeType": "Block", "src": "1298:505:7", "statements": [{ "expression": { "arguments": [{ "id": 1371, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1364, "src": "1322:7:7", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 1370, "name": "_requireOwned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1112, "src": "1308:13:7", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)" } }, "id": 1372, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1308:22:7", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 1373, "nodeType": "ExpressionStatement", "src": "1308:22:7" }, { "assignments": [1375], "declarations": [{ "constant": false, "id": 1375, "mutability": "mutable", "name": "_tokenURI", "nameLocation": "1355:9:7", "nodeType": "VariableDeclaration", "scope": 1417, "src": "1341:23:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 1374, "name": "string", "nodeType": "ElementaryTypeName", "src": "1341:6:7", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "id": 1379, "initialValue": { "baseExpression": { "id": 1376, "name": "_tokenURIs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1340, "src": "1367:10:7", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$", "typeString": "mapping(uint256 => string storage ref)" } }, "id": 1378, "indexExpression": { "id": 1377, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1364, "src": "1378:7:7", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1367:19:7", "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" } }, "nodeType": "VariableDeclarationStatement", "src": "1341:45:7" }, { "assignments": [1381], "declarations": [{ "constant": false, "id": 1381, "mutability": "mutable", "name": "base", "nameLocation": "1410:4:7", "nodeType": "VariableDeclaration", "scope": 1417, "src": "1396:18:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 1380, "name": "string", "nodeType": "ElementaryTypeName", "src": "1396:6:7", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "id": 1384, "initialValue": { "arguments": [], "expression": { "argumentTypes": [], "id": 1382, "name": "_baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 373, "src": "1417:8:7", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$", "typeString": "function () view returns (string memory)" } }, "id": 1383, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1417:10:7", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "nodeType": "VariableDeclarationStatement", "src": "1396:31:7" }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1391, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "arguments": [{ "id": 1387, "name": "base", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1381, "src": "1506:4:7", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }], "id": 1386, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1500:5:7", "typeDescriptions": { "typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)" }, "typeName": { "id": 1385, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1500:5:7", "typeDescriptions": {} } }, "id": 1388, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1500:11:7", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 1389, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1512:6:7", "memberName": "length", "nodeType": "MemberAccess", "src": "1500:18:7", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "hexValue": "30", "id": 1390, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1522:1:7", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "1500:23:7", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1395, "nodeType": "IfStatement", "src": "1496:70:7", "trueBody": { "id": 1394, "nodeType": "Block", "src": "1525:41:7", "statements": [{ "expression": { "id": 1392, "name": "_tokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1375, "src": "1546:9:7", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "functionReturnParameters": 1369, "id": 1393, "nodeType": "Return", "src": "1539:16:7" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1402, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "arguments": [{ "id": 1398, "name": "_tokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1375, "src": "1671:9:7", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }], "id": 1397, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1665:5:7", "typeDescriptions": { "typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)" }, "typeName": { "id": 1396, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1665:5:7", "typeDescriptions": {} } }, "id": 1399, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1665:16:7", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 1400, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1682:6:7", "memberName": "length", "nodeType": "MemberAccess", "src": "1665:23:7", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 1401, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1691:1:7", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "1665:27:7", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1411, "nodeType": "IfStatement", "src": "1661:95:7", "trueBody": { "id": 1410, "nodeType": "Block", "src": "1694:62:7", "statements": [{ "expression": { "arguments": [{ "id": 1406, "name": "base", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1381, "src": "1729:4:7", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, { "id": 1407, "name": "_tokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1375, "src": "1735:9:7", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }, { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }], "expression": { "id": 1404, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1715:6:7", "typeDescriptions": { "typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)" }, "typeName": { "id": 1403, "name": "string", "nodeType": "ElementaryTypeName", "src": "1715:6:7", "typeDescriptions": {} } }, "id": 1405, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1722:6:7", "memberName": "concat", "nodeType": "MemberAccess", "src": "1715:13:7", "typeDescriptions": { "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$", "typeString": "function () pure returns (string memory)" } }, "id": 1408, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1715:30:7", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "functionReturnParameters": 1369, "id": 1409, "nodeType": "Return", "src": "1708:37:7" }] } }, { "expression": { "arguments": [{ "id": 1414, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1364, "src": "1788:7:7", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 1412, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -25, "src": "1773:5:7", "typeDescriptions": { "typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1438_$", "typeString": "type(contract super ERC721URIStorage)" } }, "id": 1413, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1779:8:7", "memberName": "tokenURI", "nodeType": "MemberAccess", "referencedDeclaration": 364, "src": "1773:14:7", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$", "typeString": "function (uint256) view returns (string memory)" } }, "id": 1415, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1773:23:7", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "functionReturnParameters": 1369, "id": 1416, "nodeType": "Return", "src": "1766:30:7" }] }, "documentation": { "id": 1362, "nodeType": "StructuredDocumentation", "src": "1150:55:7", "text": " @dev See {IERC721Metadata-tokenURI}." }, "functionSelector": "c87b56dd", "id": 1418, "implemented": true, "kind": "function", "modifiers": [], "name": "tokenURI", "nameLocation": "1219:8:7", "nodeType": "FunctionDefinition", "overrides": { "id": 1366, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1265:8:7" }, "parameters": { "id": 1365, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1364, "mutability": "mutable", "name": "tokenId", "nameLocation": "1236:7:7", "nodeType": "VariableDeclaration", "scope": 1418, "src": "1228:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1363, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1228:7:7", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "1227:17:7" }, "returnParameters": { "id": 1369, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1368, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1418, "src": "1283:13:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 1367, "name": "string", "nodeType": "ElementaryTypeName", "src": "1283:6:7", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "1282:15:7" }, "scope": 1438, "src": "1210:593:7", "stateMutability": "view", "virtual": true, "visibility": "public" }, { "body": { "id": 1436, "nodeType": "Block", "src": "2003:86:7", "statements": [{ "expression": { "id": 1430, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 1426, "name": "_tokenURIs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1340, "src": "2013:10:7", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$", "typeString": "mapping(uint256 => string storage ref)" } }, "id": 1428, "indexExpression": { "id": 1427, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1421, "src": "2024:7:7", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2013:19:7", "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 1429, "name": "_tokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1423, "src": "2035:9:7", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "src": "2013:31:7", "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" } }, "id": 1431, "nodeType": "ExpressionStatement", "src": "2013:31:7" }, { "eventCall": { "arguments": [{ "id": 1433, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1421, "src": "2074:7:7", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 1432, "name": "MetadataUpdate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "2059:14:7", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)" } }, "id": 1434, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2059:23:7", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 1435, "nodeType": "EmitStatement", "src": "2054:28:7" }] }, "documentation": { "id": 1419, "nodeType": "StructuredDocumentation", "src": "1809:108:7", "text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}." }, "id": 1437, "implemented": true, "kind": "function", "modifiers": [], "name": "_setTokenURI", "nameLocation": "1931:12:7", "nodeType": "FunctionDefinition", "parameters": { "id": 1424, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1421, "mutability": "mutable", "name": "tokenId", "nameLocation": "1952:7:7", "nodeType": "VariableDeclaration", "scope": 1437, "src": "1944:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1420, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1944:7:7", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 1423, "mutability": "mutable", "name": "_tokenURI", "nameLocation": "1975:9:7", "nodeType": "VariableDeclaration", "scope": 1437, "src": "1961:23:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 1422, "name": "string", "nodeType": "ElementaryTypeName", "src": "1961:6:7", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "1943:42:7" }, "returnParameters": { "id": 1425, "nodeType": "ParameterList", "parameters": [], "src": "2003:0:7" }, "scope": 1438, "src": "1922:167:7", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal" }], "scope": 1439, "src": "431:1660:7", "usedErrors": [79, 84, 93, 98, 103, 110, 115, 120], "usedEvents": [19, 26, 1193, 1202, 1211] }], "src": "128:1964:7" }, "id": 7 }, "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol", "exportedSymbols": { "IERC721": [1294], "IERC721Metadata": [1466] }, "id": 1467, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 1440, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "127:24:8" }, { "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol", "file": "../IERC721.sol", "id": 1442, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1467, "sourceUnit": 1295, "src": "153:39:8", "symbolAliases": [{ "foreign": { "id": 1441, "name": "IERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1294, "src": "161:7:8", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "abstract": false, "baseContracts": [{ "baseName": { "id": 1444, "name": "IERC721", "nameLocations": ["357:7:8"], "nodeType": "IdentifierPath", "referencedDeclaration": 1294, "src": "357:7:8" }, "id": 1445, "nodeType": "InheritanceSpecifier", "src": "357:7:8" }], "canonicalName": "IERC721Metadata", "contractDependencies": [], "contractKind": "interface", "documentation": { "id": 1443, "nodeType": "StructuredDocumentation", "src": "194:133:8", "text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721" }, "fullyImplemented": false, "id": 1466, "linearizedBaseContracts": [1466, 1294, 1779], "name": "IERC721Metadata", "nameLocation": "338:15:8", "nodeType": "ContractDefinition", "nodes": [{ "documentation": { "id": 1446, "nodeType": "StructuredDocumentation", "src": "371:58:8", "text": " @dev Returns the token collection name." }, "functionSelector": "06fdde03", "id": 1451, "implemented": false, "kind": "function", "modifiers": [], "name": "name", "nameLocation": "443:4:8", "nodeType": "FunctionDefinition", "parameters": { "id": 1447, "nodeType": "ParameterList", "parameters": [], "src": "447:2:8" }, "returnParameters": { "id": 1450, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1449, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1451, "src": "473:13:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 1448, "name": "string", "nodeType": "ElementaryTypeName", "src": "473:6:8", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "472:15:8" }, "scope": 1466, "src": "434:54:8", "stateMutability": "view", "virtual": false, "visibility": "external" }, { "documentation": { "id": 1452, "nodeType": "StructuredDocumentation", "src": "494:60:8", "text": " @dev Returns the token collection symbol." }, "functionSelector": "95d89b41", "id": 1457, "implemented": false, "kind": "function", "modifiers": [], "name": "symbol", "nameLocation": "568:6:8", "nodeType": "FunctionDefinition", "parameters": { "id": 1453, "nodeType": "ParameterList", "parameters": [], "src": "574:2:8" }, "returnParameters": { "id": 1456, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1455, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1457, "src": "600:13:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 1454, "name": "string", "nodeType": "ElementaryTypeName", "src": "600:6:8", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "599:15:8" }, "scope": 1466, "src": "559:56:8", "stateMutability": "view", "virtual": false, "visibility": "external" }, { "documentation": { "id": 1458, "nodeType": "StructuredDocumentation", "src": "621:90:8", "text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token." }, "functionSelector": "c87b56dd", "id": 1465, "implemented": false, "kind": "function", "modifiers": [], "name": "tokenURI", "nameLocation": "725:8:8", "nodeType": "FunctionDefinition", "parameters": { "id": 1461, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1460, "mutability": "mutable", "name": "tokenId", "nameLocation": "742:7:8", "nodeType": "VariableDeclaration", "scope": 1465, "src": "734:15:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1459, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "734:7:8", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "733:17:8" }, "returnParameters": { "id": 1464, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1463, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1465, "src": "774:13:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 1462, "name": "string", "nodeType": "ElementaryTypeName", "src": "774:6:8", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "773:15:8" }, "scope": 1466, "src": "716:73:8", "stateMutability": "view", "virtual": false, "visibility": "external" }], "scope": 1467, "src": "328:463:8", "usedErrors": [], "usedEvents": [1193, 1202, 1211] }], "src": "127:665:8" }, "id": 8 }, "@openzeppelin/contracts/utils/Context.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/utils/Context.sol", "exportedSymbols": { "Context": [1488] }, "id": 1489, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 1468, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "101:24:9" }, { "abstract": true, "baseContracts": [], "canonicalName": "Context", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 1469, "nodeType": "StructuredDocumentation", "src": "127:496:9", "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts." }, "fullyImplemented": true, "id": 1488, "linearizedBaseContracts": [1488], "name": "Context", "nameLocation": "642:7:9", "nodeType": "ContractDefinition", "nodes": [{ "body": { "id": 1477, "nodeType": "Block", "src": "718:34:9", "statements": [{ "expression": { "expression": { "id": 1474, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "735:3:9", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 1475, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "739:6:9", "memberName": "sender", "nodeType": "MemberAccess", "src": "735:10:9", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "functionReturnParameters": 1473, "id": 1476, "nodeType": "Return", "src": "728:17:9" }] }, "id": 1478, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgSender", "nameLocation": "665:10:9", "nodeType": "FunctionDefinition", "parameters": { "id": 1470, "nodeType": "ParameterList", "parameters": [], "src": "675:2:9" }, "returnParameters": { "id": 1473, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1472, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1478, "src": "709:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1471, "name": "address", "nodeType": "ElementaryTypeName", "src": "709:7:9", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "708:9:9" }, "scope": 1488, "src": "656:96:9", "stateMutability": "view", "virtual": true, "visibility": "internal" }, { "body": { "id": 1486, "nodeType": "Block", "src": "825:32:9", "statements": [{ "expression": { "expression": { "id": 1483, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "842:3:9", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 1484, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "846:4:9", "memberName": "data", "nodeType": "MemberAccess", "src": "842:8:9", "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata" } }, "functionReturnParameters": 1482, "id": 1485, "nodeType": "Return", "src": "835:15:9" }] }, "id": 1487, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgData", "nameLocation": "767:8:9", "nodeType": "FunctionDefinition", "parameters": { "id": 1479, "nodeType": "ParameterList", "parameters": [], "src": "775:2:9" }, "returnParameters": { "id": 1482, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1481, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1487, "src": "809:14:9", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes" }, "typeName": { "id": 1480, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "809:5:9", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "src": "808:16:9" }, "scope": 1488, "src": "758:99:9", "stateMutability": "view", "virtual": true, "visibility": "internal" }], "scope": 1489, "src": "624:235:9", "usedErrors": [], "usedEvents": [] }], "src": "101:759:9" }, "id": 9 }, "@openzeppelin/contracts/utils/Strings.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/utils/Strings.sol", "exportedSymbols": { "Math": [2833], "SignedMath": [2938], "Strings": [1743] }, "id": 1744, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 1490, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "101:24:10" }, { "absolutePath": "@openzeppelin/contracts/utils/math/Math.sol", "file": "./math/Math.sol", "id": 1492, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1744, "sourceUnit": 2834, "src": "127:37:10", "symbolAliases": [{ "foreign": { "id": 1491, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2833, "src": "135:4:10", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol", "file": "./math/SignedMath.sol", "id": 1494, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1744, "sourceUnit": 2939, "src": "165:49:10", "symbolAliases": [{ "foreign": { "id": 1493, "name": "SignedMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2938, "src": "173:10:10", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "abstract": false, "baseContracts": [], "canonicalName": "Strings", "contractDependencies": [], "contractKind": "library", "documentation": { "id": 1495, "nodeType": "StructuredDocumentation", "src": "216:34:10", "text": " @dev String operations." }, "fullyImplemented": true, "id": 1743, "linearizedBaseContracts": [1743], "name": "Strings", "nameLocation": "259:7:10", "nodeType": "ContractDefinition", "nodes": [{ "constant": true, "id": 1498, "mutability": "constant", "name": "HEX_DIGITS", "nameLocation": "298:10:10", "nodeType": "VariableDeclaration", "scope": 1743, "src": "273:56:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes16", "typeString": "bytes16" }, "typeName": { "id": 1496, "name": "bytes16", "nodeType": "ElementaryTypeName", "src": "273:7:10", "typeDescriptions": { "typeIdentifier": "t_bytes16", "typeString": "bytes16" } }, "value": { "hexValue": "30313233343536373839616263646566", "id": 1497, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "311:18:10", "typeDescriptions": { "typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f", "typeString": "literal_string \"0123456789abcdef\"" }, "value": "0123456789abcdef" }, "visibility": "private" }, { "constant": true, "id": 1501, "mutability": "constant", "name": "ADDRESS_LENGTH", "nameLocation": "358:14:10", "nodeType": "VariableDeclaration", "scope": 1743, "src": "335:42:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }, "typeName": { "id": 1499, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "335:5:10", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }, "value": { "hexValue": "3230", "id": 1500, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "375:2:10", "typeDescriptions": { "typeIdentifier": "t_rational_20_by_1", "typeString": "int_const 20" }, "value": "20" }, "visibility": "private" }, { "documentation": { "id": 1502, "nodeType": "StructuredDocumentation", "src": "384:81:10", "text": " @dev The `value` string doesn't fit in the specified `length`." }, "errorSelector": "e22e27eb", "id": 1508, "name": "StringsInsufficientHexLength", "nameLocation": "476:28:10", "nodeType": "ErrorDefinition", "parameters": { "id": 1507, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1504, "mutability": "mutable", "name": "value", "nameLocation": "513:5:10", "nodeType": "VariableDeclaration", "scope": 1508, "src": "505:13:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1503, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "505:7:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 1506, "mutability": "mutable", "name": "length", "nameLocation": "528:6:10", "nodeType": "VariableDeclaration", "scope": 1508, "src": "520:14:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1505, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "520:7:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "504:31:10" }, "src": "470:66:10" }, { "body": { "id": 1555, "nodeType": "Block", "src": "708:627:10", "statements": [{ "id": 1554, "nodeType": "UncheckedBlock", "src": "718:611:10", "statements": [{ "assignments": [1517], "declarations": [{ "constant": false, "id": 1517, "mutability": "mutable", "name": "length", "nameLocation": "750:6:10", "nodeType": "VariableDeclaration", "scope": 1554, "src": "742:14:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1516, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "742:7:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 1524, "initialValue": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1523, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [{ "id": 1520, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1511, "src": "770:5:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 1518, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2833, "src": "759:4:10", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_Math_$2833_$", "typeString": "type(library Math)" } }, "id": 1519, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "764:5:10", "memberName": "log10", "nodeType": "MemberAccess", "referencedDeclaration": 2653, "src": "759:10:10", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)" } }, "id": 1521, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "759:17:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "31", "id": 1522, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "779:1:10", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "759:21:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "742:38:10" }, { "assignments": [1526], "declarations": [{ "constant": false, "id": 1526, "mutability": "mutable", "name": "buffer", "nameLocation": "808:6:10", "nodeType": "VariableDeclaration", "scope": 1554, "src": "794:20:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 1525, "name": "string", "nodeType": "ElementaryTypeName", "src": "794:6:10", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "id": 1531, "initialValue": { "arguments": [{ "id": 1529, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1517, "src": "828:6:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 1528, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "817:10:10", "typeDescriptions": { "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$", "typeString": "function (uint256) pure returns (string memory)" }, "typeName": { "id": 1527, "name": "string", "nodeType": "ElementaryTypeName", "src": "821:6:10", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } } }, "id": 1530, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "817:18:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "nodeType": "VariableDeclarationStatement", "src": "794:41:10" }, { "assignments": [1533], "declarations": [{ "constant": false, "id": 1533, "mutability": "mutable", "name": "ptr", "nameLocation": "857:3:10", "nodeType": "VariableDeclaration", "scope": 1554, "src": "849:11:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1532, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "849:7:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 1534, "nodeType": "VariableDeclarationStatement", "src": "849:11:10" }, { "AST": { "nodeType": "YulBlock", "src": "930:67:10", "statements": [{ "nodeType": "YulAssignment", "src": "948:35:10", "value": { "arguments": [{ "name": "buffer", "nodeType": "YulIdentifier", "src": "959:6:10" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "971:2:10", "type": "", "value": "32" }, { "name": "length", "nodeType": "YulIdentifier", "src": "975:6:10" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "967:3:10" }, "nodeType": "YulFunctionCall", "src": "967:15:10" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "955:3:10" }, "nodeType": "YulFunctionCall", "src": "955:28:10" }, "variableNames": [{ "name": "ptr", "nodeType": "YulIdentifier", "src": "948:3:10" }] }] }, "documentation": "@solidity memory-safe-assembly", "evmVersion": "paris", "externalReferences": [{ "declaration": 1526, "isOffset": false, "isSlot": false, "src": "959:6:10", "valueSize": 1 }, { "declaration": 1517, "isOffset": false, "isSlot": false, "src": "975:6:10", "valueSize": 1 }, { "declaration": 1533, "isOffset": false, "isSlot": false, "src": "948:3:10", "valueSize": 1 }], "id": 1535, "nodeType": "InlineAssembly", "src": "921:76:10" }, { "body": { "id": 1550, "nodeType": "Block", "src": "1023:269:10", "statements": [{ "expression": { "id": 1538, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "--", "prefix": false, "src": "1041:5:10", "subExpression": { "id": 1537, "name": "ptr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1533, "src": "1041:3:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 1539, "nodeType": "ExpressionStatement", "src": "1041:5:10" }, { "AST": { "nodeType": "YulBlock", "src": "1124:86:10", "statements": [{ "expression": { "arguments": [{ "name": "ptr", "nodeType": "YulIdentifier", "src": "1154:3:10" }, { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1168:5:10" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1175:2:10", "type": "", "value": "10" }], "functionName": { "name": "mod", "nodeType": "YulIdentifier", "src": "1164:3:10" }, "nodeType": "YulFunctionCall", "src": "1164:14:10" }, { "name": "HEX_DIGITS", "nodeType": "YulIdentifier", "src": "1180:10:10" }], "functionName": { "name": "byte", "nodeType": "YulIdentifier", "src": "1159:4:10" }, "nodeType": "YulFunctionCall", "src": "1159:32:10" }], "functionName": { "name": "mstore8", "nodeType": "YulIdentifier", "src": "1146:7:10" }, "nodeType": "YulFunctionCall", "src": "1146:46:10" }, "nodeType": "YulExpressionStatement", "src": "1146:46:10" }] }, "documentation": "@solidity memory-safe-assembly", "evmVersion": "paris", "externalReferences": [{ "declaration": 1498, "isOffset": false, "isSlot": false, "src": "1180:10:10", "valueSize": 1 }, { "declaration": 1533, "isOffset": false, "isSlot": false, "src": "1154:3:10", "valueSize": 1 }, { "declaration": 1511, "isOffset": false, "isSlot": false, "src": "1168:5:10", "valueSize": 1 }], "id": 1540, "nodeType": "InlineAssembly", "src": "1115:95:10" }, { "expression": { "id": 1543, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 1541, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1511, "src": "1227:5:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "/=", "rightHandSide": { "hexValue": "3130", "id": 1542, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1236:2:10", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "value": "10" }, "src": "1227:11:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 1544, "nodeType": "ExpressionStatement", "src": "1227:11:10" }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1547, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1545, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1511, "src": "1260:5:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "hexValue": "30", "id": 1546, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1269:1:10", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "1260:10:10", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1549, "nodeType": "IfStatement", "src": "1256:21:10", "trueBody": { "id": 1548, "nodeType": "Break", "src": "1272:5:10" } }] }, "condition": { "hexValue": "74727565", "id": 1536, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1017:4:10", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "true" }, "id": 1551, "nodeType": "WhileStatement", "src": "1010:282:10" }, { "expression": { "id": 1552, "name": "buffer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1526, "src": "1312:6:10", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "functionReturnParameters": 1515, "id": 1553, "nodeType": "Return", "src": "1305:13:10" }] }] }, "documentation": { "id": 1509, "nodeType": "StructuredDocumentation", "src": "542:90:10", "text": " @dev Converts a `uint256` to its ASCII `string` decimal representation." }, "id": 1556, "implemented": true, "kind": "function", "modifiers": [], "name": "toString", "nameLocation": "646:8:10", "nodeType": "FunctionDefinition", "parameters": { "id": 1512, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1511, "mutability": "mutable", "name": "value", "nameLocation": "663:5:10", "nodeType": "VariableDeclaration", "scope": 1556, "src": "655:13:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1510, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "655:7:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "654:15:10" }, "returnParameters": { "id": 1515, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1514, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1556, "src": "693:13:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 1513, "name": "string", "nodeType": "ElementaryTypeName", "src": "693:6:10", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "692:15:10" }, "scope": 1743, "src": "637:698:10", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 1581, "nodeType": "Block", "src": "1511:92:10", "statements": [{ "expression": { "arguments": [{ "condition": { "commonType": { "typeIdentifier": "t_int256", "typeString": "int256" }, "id": 1569, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1567, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1559, "src": "1542:5:10", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "hexValue": "30", "id": 1568, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1550:1:10", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "1542:9:10", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseExpression": { "hexValue": "", "id": 1571, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1560:2:10", "typeDescriptions": { "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\"" }, "value": "" }, "id": 1572, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "1542:20:10", "trueExpression": { "hexValue": "2d", "id": 1570, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1554:3:10", "typeDescriptions": { "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561", "typeString": "literal_string \"-\"" }, "value": "-" }, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, { "arguments": [{ "arguments": [{ "id": 1576, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1559, "src": "1588:5:10", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_int256", "typeString": "int256" }], "expression": { "id": 1574, "name": "SignedMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2938, "src": "1573:10:10", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_SignedMath_$2938_$", "typeString": "type(library SignedMath)" } }, "id": 1575, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1584:3:10", "memberName": "abs", "nodeType": "MemberAccess", "referencedDeclaration": 2937, "src": "1573:14:10", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$", "typeString": "function (int256) pure returns (uint256)" } }, "id": 1577, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1573:21:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 1573, "name": "toString", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1556, "src": "1564:8:10", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$", "typeString": "function (uint256) pure returns (string memory)" } }, "id": 1578, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1564:31:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }, { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }], "expression": { "id": 1565, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1528:6:10", "typeDescriptions": { "typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)" }, "typeName": { "id": 1564, "name": "string", "nodeType": "ElementaryTypeName", "src": "1528:6:10", "typeDescriptions": {} } }, "id": 1566, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1535:6:10", "memberName": "concat", "nodeType": "MemberAccess", "src": "1528:13:10", "typeDescriptions": { "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$", "typeString": "function () pure returns (string memory)" } }, "id": 1579, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1528:68:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "functionReturnParameters": 1563, "id": 1580, "nodeType": "Return", "src": "1521:75:10" }] }, "documentation": { "id": 1557, "nodeType": "StructuredDocumentation", "src": "1341:89:10", "text": " @dev Converts a `int256` to its ASCII `string` decimal representation." }, "id": 1582, "implemented": true, "kind": "function", "modifiers": [], "name": "toStringSigned", "nameLocation": "1444:14:10", "nodeType": "FunctionDefinition", "parameters": { "id": 1560, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1559, "mutability": "mutable", "name": "value", "nameLocation": "1466:5:10", "nodeType": "VariableDeclaration", "scope": 1582, "src": "1459:12:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" }, "typeName": { "id": 1558, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1459:6:10", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "visibility": "internal" }], "src": "1458:14:10" }, "returnParameters": { "id": 1563, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1562, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1582, "src": "1496:13:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 1561, "name": "string", "nodeType": "ElementaryTypeName", "src": "1496:6:10", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "1495:15:10" }, "scope": 1743, "src": "1435:168:10", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 1601, "nodeType": "Block", "src": "1782:100:10", "statements": [{ "id": 1600, "nodeType": "UncheckedBlock", "src": "1792:84:10", "statements": [{ "expression": { "arguments": [{ "id": 1591, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1585, "src": "1835:5:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1597, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [{ "id": 1594, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1585, "src": "1854:5:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 1592, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2833, "src": "1842:4:10", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_Math_$2833_$", "typeString": "type(library Math)" } }, "id": 1593, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1847:6:10", "memberName": "log256", "nodeType": "MemberAccess", "referencedDeclaration": 2775, "src": "1842:11:10", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)" } }, "id": 1595, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1842:18:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "31", "id": 1596, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1863:1:10", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "1842:22:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 1590, "name": "toHexString", "nodeType": "Identifier", "overloadedDeclarations": [1602, 1685, 1705], "referencedDeclaration": 1685, "src": "1823:11:10", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$", "typeString": "function (uint256,uint256) pure returns (string memory)" } }, "id": 1598, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1823:42:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "functionReturnParameters": 1589, "id": 1599, "nodeType": "Return", "src": "1816:49:10" }] }] }, "documentation": { "id": 1583, "nodeType": "StructuredDocumentation", "src": "1609:94:10", "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation." }, "id": 1602, "implemented": true, "kind": "function", "modifiers": [], "name": "toHexString", "nameLocation": "1717:11:10", "nodeType": "FunctionDefinition", "parameters": { "id": 1586, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1585, "mutability": "mutable", "name": "value", "nameLocation": "1737:5:10", "nodeType": "VariableDeclaration", "scope": 1602, "src": "1729:13:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1584, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1729:7:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "1728:15:10" }, "returnParameters": { "id": 1589, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1588, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1602, "src": "1767:13:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 1587, "name": "string", "nodeType": "ElementaryTypeName", "src": "1767:6:10", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "1766:15:10" }, "scope": 1743, "src": "1708:174:10", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 1684, "nodeType": "Block", "src": "2095:435:10", "statements": [{ "assignments": [1613], "declarations": [{ "constant": false, "id": 1613, "mutability": "mutable", "name": "localValue", "nameLocation": "2113:10:10", "nodeType": "VariableDeclaration", "scope": 1684, "src": "2105:18:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1612, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2105:7:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 1615, "initialValue": { "id": 1614, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1605, "src": "2126:5:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "2105:26:10" }, { "assignments": [1617], "declarations": [{ "constant": false, "id": 1617, "mutability": "mutable", "name": "buffer", "nameLocation": "2154:6:10", "nodeType": "VariableDeclaration", "scope": 1684, "src": "2141:19:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" }, "typeName": { "id": 1616, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2141:5:10", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "id": 1626, "initialValue": { "arguments": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1624, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1622, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "hexValue": "32", "id": 1620, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2173:1:10", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": { "id": 1621, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1607, "src": "2177:6:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "2173:10:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "32", "id": 1623, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2186:1:10", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "src": "2173:14:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 1619, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "2163:9:10", "typeDescriptions": { "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$", "typeString": "function (uint256) pure returns (bytes memory)" }, "typeName": { "id": 1618, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2167:5:10", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } } }, "id": 1625, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2163:25:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "nodeType": "VariableDeclarationStatement", "src": "2141:47:10" }, { "expression": { "id": 1631, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 1627, "name": "buffer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1617, "src": "2198:6:10", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 1629, "indexExpression": { "hexValue": "30", "id": 1628, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2205:1:10", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2198:9:10", "typeDescriptions": { "typeIdentifier": "t_bytes1", "typeString": "bytes1" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "hexValue": "30", "id": 1630, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2210:3:10", "typeDescriptions": { "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d", "typeString": "literal_string \"0\"" }, "value": "0" }, "src": "2198:15:10", "typeDescriptions": { "typeIdentifier": "t_bytes1", "typeString": "bytes1" } }, "id": 1632, "nodeType": "ExpressionStatement", "src": "2198:15:10" }, { "expression": { "id": 1637, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 1633, "name": "buffer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1617, "src": "2223:6:10", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 1635, "indexExpression": { "hexValue": "31", "id": 1634, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2230:1:10", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2223:9:10", "typeDescriptions": { "typeIdentifier": "t_bytes1", "typeString": "bytes1" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "hexValue": "78", "id": 1636, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2235:3:10", "typeDescriptions": { "typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83", "typeString": "literal_string \"x\"" }, "value": "x" }, "src": "2223:15:10", "typeDescriptions": { "typeIdentifier": "t_bytes1", "typeString": "bytes1" } }, "id": 1638, "nodeType": "ExpressionStatement", "src": "2223:15:10" }, { "body": { "id": 1667, "nodeType": "Block", "src": "2293:95:10", "statements": [{ "expression": { "id": 1661, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 1653, "name": "buffer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1617, "src": "2307:6:10", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 1655, "indexExpression": { "id": 1654, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1640, "src": "2314:1:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2307:9:10", "typeDescriptions": { "typeIdentifier": "t_bytes1", "typeString": "bytes1" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "baseExpression": { "id": 1656, "name": "HEX_DIGITS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1498, "src": "2319:10:10", "typeDescriptions": { "typeIdentifier": "t_bytes16", "typeString": "bytes16" } }, "id": 1660, "indexExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1659, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1657, "name": "localValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1613, "src": "2330:10:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "&", "rightExpression": { "hexValue": "307866", "id": 1658, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2343:3:10", "typeDescriptions": { "typeIdentifier": "t_rational_15_by_1", "typeString": "int_const 15" }, "value": "0xf" }, "src": "2330:16:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2319:28:10", "typeDescriptions": { "typeIdentifier": "t_bytes1", "typeString": "bytes1" } }, "src": "2307:40:10", "typeDescriptions": { "typeIdentifier": "t_bytes1", "typeString": "bytes1" } }, "id": 1662, "nodeType": "ExpressionStatement", "src": "2307:40:10" }, { "expression": { "id": 1665, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 1663, "name": "localValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1613, "src": "2361:10:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": ">>=", "rightHandSide": { "hexValue": "34", "id": 1664, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2376:1:10", "typeDescriptions": { "typeIdentifier": "t_rational_4_by_1", "typeString": "int_const 4" }, "value": "4" }, "src": "2361:16:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 1666, "nodeType": "ExpressionStatement", "src": "2361:16:10" }] }, "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1649, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1647, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1640, "src": "2281:1:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "31", "id": 1648, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2285:1:10", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "2281:5:10", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1668, "initializationExpression": { "assignments": [1640], "declarations": [{ "constant": false, "id": 1640, "mutability": "mutable", "name": "i", "nameLocation": "2261:1:10", "nodeType": "VariableDeclaration", "scope": 1668, "src": "2253:9:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1639, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2253:7:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 1646, "initialValue": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1645, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1643, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "hexValue": "32", "id": 1641, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2265:1:10", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": { "id": 1642, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1607, "src": "2269:6:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "2265:10:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "31", "id": 1644, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2278:1:10", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "2265:14:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "2253:26:10" }, "loopExpression": { "expression": { "id": 1651, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "--", "prefix": true, "src": "2288:3:10", "subExpression": { "id": 1650, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1640, "src": "2290:1:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 1652, "nodeType": "ExpressionStatement", "src": "2288:3:10" }, "nodeType": "ForStatement", "src": "2248:140:10" }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1671, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1669, "name": "localValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1613, "src": "2401:10:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "hexValue": "30", "id": 1670, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2415:1:10", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "2401:15:10", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1678, "nodeType": "IfStatement", "src": "2397:96:10", "trueBody": { "id": 1677, "nodeType": "Block", "src": "2418:75:10", "statements": [{ "errorCall": { "arguments": [{ "id": 1673, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1605, "src": "2468:5:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 1674, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1607, "src": "2475:6:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 1672, "name": "StringsInsufficientHexLength", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1508, "src": "2439:28:10", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure" } }, "id": 1675, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2439:43:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 1676, "nodeType": "RevertStatement", "src": "2432:50:10" }] } }, { "expression": { "arguments": [{ "id": 1681, "name": "buffer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1617, "src": "2516:6:10", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 1680, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2509:6:10", "typeDescriptions": { "typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)" }, "typeName": { "id": 1679, "name": "string", "nodeType": "ElementaryTypeName", "src": "2509:6:10", "typeDescriptions": {} } }, "id": 1682, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2509:14:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "functionReturnParameters": 1611, "id": 1683, "nodeType": "Return", "src": "2502:21:10" }] }, "documentation": { "id": 1603, "nodeType": "StructuredDocumentation", "src": "1888:112:10", "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length." }, "id": 1685, "implemented": true, "kind": "function", "modifiers": [], "name": "toHexString", "nameLocation": "2014:11:10", "nodeType": "FunctionDefinition", "parameters": { "id": 1608, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1605, "mutability": "mutable", "name": "value", "nameLocation": "2034:5:10", "nodeType": "VariableDeclaration", "scope": 1685, "src": "2026:13:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1604, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2026:7:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 1607, "mutability": "mutable", "name": "length", "nameLocation": "2049:6:10", "nodeType": "VariableDeclaration", "scope": 1685, "src": "2041:14:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1606, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2041:7:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2025:31:10" }, "returnParameters": { "id": 1611, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1610, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1685, "src": "2080:13:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 1609, "name": "string", "nodeType": "ElementaryTypeName", "src": "2080:6:10", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "2079:15:10" }, "scope": 1743, "src": "2005:525:10", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 1704, "nodeType": "Block", "src": "2762:75:10", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "arguments": [{ "id": 1698, "name": "addr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1688, "src": "2807:4:10", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 1697, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2799:7:10", "typeDescriptions": { "typeIdentifier": "t_type$_t_uint160_$", "typeString": "type(uint160)" }, "typeName": { "id": 1696, "name": "uint160", "nodeType": "ElementaryTypeName", "src": "2799:7:10", "typeDescriptions": {} } }, "id": 1699, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2799:13:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint160", "typeString": "uint160" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint160", "typeString": "uint160" }], "id": 1695, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2791:7:10", "typeDescriptions": { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }, "typeName": { "id": 1694, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2791:7:10", "typeDescriptions": {} } }, "id": 1700, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2791:22:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 1701, "name": "ADDRESS_LENGTH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1501, "src": "2815:14:10", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint8", "typeString": "uint8" }], "id": 1693, "name": "toHexString", "nodeType": "Identifier", "overloadedDeclarations": [1602, 1685, 1705], "referencedDeclaration": 1685, "src": "2779:11:10", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$", "typeString": "function (uint256,uint256) pure returns (string memory)" } }, "id": 1702, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2779:51:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "functionReturnParameters": 1692, "id": 1703, "nodeType": "Return", "src": "2772:58:10" }] }, "documentation": { "id": 1686, "nodeType": "StructuredDocumentation", "src": "2536:148:10", "text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation." }, "id": 1705, "implemented": true, "kind": "function", "modifiers": [], "name": "toHexString", "nameLocation": "2698:11:10", "nodeType": "FunctionDefinition", "parameters": { "id": 1689, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1688, "mutability": "mutable", "name": "addr", "nameLocation": "2718:4:10", "nodeType": "VariableDeclaration", "scope": 1705, "src": "2710:12:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 1687, "name": "address", "nodeType": "ElementaryTypeName", "src": "2710:7:10", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "2709:14:10" }, "returnParameters": { "id": 1692, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1691, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1705, "src": "2747:13:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 1690, "name": "string", "nodeType": "ElementaryTypeName", "src": "2747:6:10", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "2746:15:10" }, "scope": 1743, "src": "2689:148:10", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 1741, "nodeType": "Block", "src": "2992:104:10", "statements": [{ "expression": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 1739, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1725, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "arguments": [{ "id": 1717, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1708, "src": "3015:1:10", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }], "id": 1716, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3009:5:10", "typeDescriptions": { "typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)" }, "typeName": { "id": 1715, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3009:5:10", "typeDescriptions": {} } }, "id": 1718, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3009:8:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 1719, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3018:6:10", "memberName": "length", "nodeType": "MemberAccess", "src": "3009:15:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "expression": { "arguments": [{ "id": 1722, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1710, "src": "3034:1:10", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }], "id": 1721, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3028:5:10", "typeDescriptions": { "typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)" }, "typeName": { "id": 1720, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3028:5:10", "typeDescriptions": {} } }, "id": 1723, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3028:8:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 1724, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3037:6:10", "memberName": "length", "nodeType": "MemberAccess", "src": "3028:15:10", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "3009:34:10", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "commonType": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, "id": 1738, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [{ "arguments": [{ "id": 1729, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1708, "src": "3063:1:10", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }], "id": 1728, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3057:5:10", "typeDescriptions": { "typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)" }, "typeName": { "id": 1727, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3057:5:10", "typeDescriptions": {} } }, "id": 1730, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3057:8:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 1726, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "3047:9:10", "typeDescriptions": { "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)" } }, "id": 1731, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3047:19:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "arguments": [{ "arguments": [{ "id": 1735, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1710, "src": "3086:1:10", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }], "id": 1734, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3080:5:10", "typeDescriptions": { "typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)" }, "typeName": { "id": 1733, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3080:5:10", "typeDescriptions": {} } }, "id": 1736, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3080:8:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 1732, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "3070:9:10", "typeDescriptions": { "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)" } }, "id": 1737, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3070:19:10", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "src": "3047:42:10", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "3009:80:10", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "functionReturnParameters": 1714, "id": 1740, "nodeType": "Return", "src": "3002:87:10" }] }, "documentation": { "id": 1706, "nodeType": "StructuredDocumentation", "src": "2843:66:10", "text": " @dev Returns true if the two strings are equal." }, "id": 1742, "implemented": true, "kind": "function", "modifiers": [], "name": "equal", "nameLocation": "2923:5:10", "nodeType": "FunctionDefinition", "parameters": { "id": 1711, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1708, "mutability": "mutable", "name": "a", "nameLocation": "2943:1:10", "nodeType": "VariableDeclaration", "scope": 1742, "src": "2929:15:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 1707, "name": "string", "nodeType": "ElementaryTypeName", "src": "2929:6:10", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }, { "constant": false, "id": 1710, "mutability": "mutable", "name": "b", "nameLocation": "2960:1:10", "nodeType": "VariableDeclaration", "scope": 1742, "src": "2946:15:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 1709, "name": "string", "nodeType": "ElementaryTypeName", "src": "2946:6:10", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "2928:34:10" }, "returnParameters": { "id": 1714, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1713, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1742, "src": "2986:4:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 1712, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2986:4:10", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "2985:6:10" }, "scope": 1743, "src": "2914:182:10", "stateMutability": "pure", "virtual": false, "visibility": "internal" }], "scope": 1744, "src": "251:2847:10", "usedErrors": [1508], "usedEvents": [] }], "src": "101:2998:10" }, "id": 10 }, "@openzeppelin/contracts/utils/introspection/ERC165.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol", "exportedSymbols": { "ERC165": [1767], "IERC165": [1779] }, "id": 1768, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 1745, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "114:24:11" }, { "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol", "file": "./IERC165.sol", "id": 1747, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1768, "sourceUnit": 1780, "src": "140:38:11", "symbolAliases": [{ "foreign": { "id": 1746, "name": "IERC165", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1779, "src": "148:7:11", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "abstract": true, "baseContracts": [{ "baseName": { "id": 1749, "name": "IERC165", "nameLocations": ["687:7:11"], "nodeType": "IdentifierPath", "referencedDeclaration": 1779, "src": "687:7:11" }, "id": 1750, "nodeType": "InheritanceSpecifier", "src": "687:7:11" }], "canonicalName": "ERC165", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 1748, "nodeType": "StructuredDocumentation", "src": "180:478:11", "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```" }, "fullyImplemented": true, "id": 1767, "linearizedBaseContracts": [1767, 1779], "name": "ERC165", "nameLocation": "677:6:11", "nodeType": "ContractDefinition", "nodes": [{ "baseFunctions": [1778], "body": { "id": 1765, "nodeType": "Block", "src": "844:64:11", "statements": [{ "expression": { "commonType": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }, "id": 1763, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1758, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1753, "src": "861:11:11", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "expression": { "arguments": [{ "id": 1760, "name": "IERC165", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1779, "src": "881:7:11", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IERC165_$1779_$", "typeString": "type(contract IERC165)" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_type$_t_contract$_IERC165_$1779_$", "typeString": "type(contract IERC165)" }], "id": 1759, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "876:4:11", "typeDescriptions": { "typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 1761, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "876:13:11", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1779", "typeString": "type(contract IERC165)" } }, "id": 1762, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "890:11:11", "memberName": "interfaceId", "nodeType": "MemberAccess", "src": "876:25:11", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "src": "861:40:11", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "functionReturnParameters": 1757, "id": 1764, "nodeType": "Return", "src": "854:47:11" }] }, "documentation": { "id": 1751, "nodeType": "StructuredDocumentation", "src": "701:56:11", "text": " @dev See {IERC165-supportsInterface}." }, "functionSelector": "01ffc9a7", "id": 1766, "implemented": true, "kind": "function", "modifiers": [], "name": "supportsInterface", "nameLocation": "771:17:11", "nodeType": "FunctionDefinition", "parameters": { "id": 1754, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1753, "mutability": "mutable", "name": "interfaceId", "nameLocation": "796:11:11", "nodeType": "VariableDeclaration", "scope": 1766, "src": "789:18:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }, "typeName": { "id": 1752, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "789:6:11", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "visibility": "internal" }], "src": "788:20:11" }, "returnParameters": { "id": 1757, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1756, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1766, "src": "838:4:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 1755, "name": "bool", "nodeType": "ElementaryTypeName", "src": "838:4:11", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "837:6:11" }, "scope": 1767, "src": "762:146:11", "stateMutability": "view", "virtual": true, "visibility": "public" }], "scope": 1768, "src": "659:251:11", "usedErrors": [], "usedEvents": [] }], "src": "114:797:11" }, "id": 11 }, "@openzeppelin/contracts/utils/introspection/IERC165.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol", "exportedSymbols": { "IERC165": [1779] }, "id": 1780, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 1769, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "115:24:12" }, { "abstract": false, "baseContracts": [], "canonicalName": "IERC165", "contractDependencies": [], "contractKind": "interface", "documentation": { "id": 1770, "nodeType": "StructuredDocumentation", "src": "141:279:12", "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}." }, "fullyImplemented": false, "id": 1779, "linearizedBaseContracts": [1779], "name": "IERC165", "nameLocation": "431:7:12", "nodeType": "ContractDefinition", "nodes": [{ "documentation": { "id": 1771, "nodeType": "StructuredDocumentation", "src": "445:340:12", "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas." }, "functionSelector": "01ffc9a7", "id": 1778, "implemented": false, "kind": "function", "modifiers": [], "name": "supportsInterface", "nameLocation": "799:17:12", "nodeType": "FunctionDefinition", "parameters": { "id": 1774, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1773, "mutability": "mutable", "name": "interfaceId", "nameLocation": "824:11:12", "nodeType": "VariableDeclaration", "scope": 1778, "src": "817:18:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }, "typeName": { "id": 1772, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "817:6:12", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "visibility": "internal" }], "src": "816:20:12" }, "returnParameters": { "id": 1777, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1776, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1778, "src": "860:4:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 1775, "name": "bool", "nodeType": "ElementaryTypeName", "src": "860:4:12", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "859:6:12" }, "scope": 1779, "src": "790:76:12", "stateMutability": "view", "virtual": false, "visibility": "external" }], "scope": 1780, "src": "421:447:12", "usedErrors": [], "usedEvents": [] }], "src": "115:754:12" }, "id": 12 }, "@openzeppelin/contracts/utils/math/Math.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/utils/math/Math.sol", "exportedSymbols": { "Math": [2833] }, "id": 2834, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 1781, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "103:24:13" }, { "abstract": false, "baseContracts": [], "canonicalName": "Math", "contractDependencies": [], "contractKind": "library", "documentation": { "id": 1782, "nodeType": "StructuredDocumentation", "src": "129:73:13", "text": " @dev Standard math utilities missing in the Solidity language." }, "fullyImplemented": true, "id": 2833, "linearizedBaseContracts": [2833], "name": "Math", "nameLocation": "211:4:13", "nodeType": "ContractDefinition", "nodes": [{ "documentation": { "id": 1783, "nodeType": "StructuredDocumentation", "src": "222:50:13", "text": " @dev Muldiv operation overflow." }, "errorSelector": "227bc153", "id": 1785, "name": "MathOverflowedMulDiv", "nameLocation": "283:20:13", "nodeType": "ErrorDefinition", "parameters": { "id": 1784, "nodeType": "ParameterList", "parameters": [], "src": "303:2:13" }, "src": "277:29:13" }, { "canonicalName": "Math.Rounding", "id": 1790, "members": [{ "id": 1786, "name": "Floor", "nameLocation": "336:5:13", "nodeType": "EnumValue", "src": "336:5:13" }, { "id": 1787, "name": "Ceil", "nameLocation": "379:4:13", "nodeType": "EnumValue", "src": "379:4:13" }, { "id": 1788, "name": "Trunc", "nameLocation": "421:5:13", "nodeType": "EnumValue", "src": "421:5:13" }, { "id": 1789, "name": "Expand", "nameLocation": "451:6:13", "nodeType": "EnumValue", "src": "451:6:13" }], "name": "Rounding", "nameLocation": "317:8:13", "nodeType": "EnumDefinition", "src": "312:169:13" }, { "body": { "id": 1821, "nodeType": "Block", "src": "661:140:13", "statements": [{ "id": 1820, "nodeType": "UncheckedBlock", "src": "671:124:13", "statements": [{ "assignments": [1803], "declarations": [{ "constant": false, "id": 1803, "mutability": "mutable", "name": "c", "nameLocation": "703:1:13", "nodeType": "VariableDeclaration", "scope": 1820, "src": "695:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1802, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "695:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 1807, "initialValue": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1806, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1804, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1793, "src": "707:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "id": 1805, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1795, "src": "711:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "707:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "695:17:13" }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1810, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1808, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1803, "src": "730:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "id": 1809, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1793, "src": "734:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "730:5:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1815, "nodeType": "IfStatement", "src": "726:28:13", "trueBody": { "expression": { "components": [{ "hexValue": "66616c7365", "id": 1811, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "745:5:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "false" }, { "hexValue": "30", "id": 1812, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "752:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "id": 1813, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "744:10:13", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$", "typeString": "tuple(bool,int_const 0)" } }, "functionReturnParameters": 1801, "id": 1814, "nodeType": "Return", "src": "737:17:13" } }, { "expression": { "components": [{ "hexValue": "74727565", "id": 1816, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "776:4:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "true" }, { "id": 1817, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1803, "src": "782:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 1818, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "775:9:13", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$", "typeString": "tuple(bool,uint256)" } }, "functionReturnParameters": 1801, "id": 1819, "nodeType": "Return", "src": "768:16:13" }] }] }, "documentation": { "id": 1791, "nodeType": "StructuredDocumentation", "src": "487:93:13", "text": " @dev Returns the addition of two unsigned integers, with an overflow flag." }, "id": 1822, "implemented": true, "kind": "function", "modifiers": [], "name": "tryAdd", "nameLocation": "594:6:13", "nodeType": "FunctionDefinition", "parameters": { "id": 1796, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1793, "mutability": "mutable", "name": "a", "nameLocation": "609:1:13", "nodeType": "VariableDeclaration", "scope": 1822, "src": "601:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1792, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "601:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 1795, "mutability": "mutable", "name": "b", "nameLocation": "620:1:13", "nodeType": "VariableDeclaration", "scope": 1822, "src": "612:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1794, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "612:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "600:22:13" }, "returnParameters": { "id": 1801, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1798, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1822, "src": "646:4:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 1797, "name": "bool", "nodeType": "ElementaryTypeName", "src": "646:4:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }, { "constant": false, "id": 1800, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1822, "src": "652:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1799, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "652:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "645:15:13" }, "scope": 2833, "src": "585:216:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 1849, "nodeType": "Block", "src": "984:113:13", "statements": [{ "id": 1848, "nodeType": "UncheckedBlock", "src": "994:97:13", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1836, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1834, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1827, "src": "1022:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "id": 1835, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1825, "src": "1026:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "1022:5:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1841, "nodeType": "IfStatement", "src": "1018:28:13", "trueBody": { "expression": { "components": [{ "hexValue": "66616c7365", "id": 1837, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1037:5:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "false" }, { "hexValue": "30", "id": 1838, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1044:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "id": 1839, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1036:10:13", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$", "typeString": "tuple(bool,int_const 0)" } }, "functionReturnParameters": 1833, "id": 1840, "nodeType": "Return", "src": "1029:17:13" } }, { "expression": { "components": [{ "hexValue": "74727565", "id": 1842, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1068:4:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "true" }, { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1845, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1843, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1825, "src": "1074:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": { "id": 1844, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1827, "src": "1078:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "1074:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 1846, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1067:13:13", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$", "typeString": "tuple(bool,uint256)" } }, "functionReturnParameters": 1833, "id": 1847, "nodeType": "Return", "src": "1060:20:13" }] }] }, "documentation": { "id": 1823, "nodeType": "StructuredDocumentation", "src": "807:96:13", "text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag." }, "id": 1850, "implemented": true, "kind": "function", "modifiers": [], "name": "trySub", "nameLocation": "917:6:13", "nodeType": "FunctionDefinition", "parameters": { "id": 1828, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1825, "mutability": "mutable", "name": "a", "nameLocation": "932:1:13", "nodeType": "VariableDeclaration", "scope": 1850, "src": "924:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1824, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "924:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 1827, "mutability": "mutable", "name": "b", "nameLocation": "943:1:13", "nodeType": "VariableDeclaration", "scope": 1850, "src": "935:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1826, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "935:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "923:22:13" }, "returnParameters": { "id": 1833, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1830, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1850, "src": "969:4:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 1829, "name": "bool", "nodeType": "ElementaryTypeName", "src": "969:4:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }, { "constant": false, "id": 1832, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1850, "src": "975:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1831, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "975:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "968:15:13" }, "scope": 2833, "src": "908:189:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 1891, "nodeType": "Block", "src": "1283:417:13", "statements": [{ "id": 1890, "nodeType": "UncheckedBlock", "src": "1293:401:13", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1864, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1862, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1853, "src": "1551:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "hexValue": "30", "id": 1863, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1556:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "1551:6:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1869, "nodeType": "IfStatement", "src": "1547:28:13", "trueBody": { "expression": { "components": [{ "hexValue": "74727565", "id": 1865, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1567:4:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "true" }, { "hexValue": "30", "id": 1866, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1573:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "id": 1867, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1566:9:13", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$", "typeString": "tuple(bool,int_const 0)" } }, "functionReturnParameters": 1861, "id": 1868, "nodeType": "Return", "src": "1559:16:13" } }, { "assignments": [1871], "declarations": [{ "constant": false, "id": 1871, "mutability": "mutable", "name": "c", "nameLocation": "1597:1:13", "nodeType": "VariableDeclaration", "scope": 1890, "src": "1589:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1870, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1589:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 1875, "initialValue": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1874, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1872, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1853, "src": "1601:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": { "id": 1873, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1855, "src": "1605:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "1601:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "1589:17:13" }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1880, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1878, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1876, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1871, "src": "1624:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": { "id": 1877, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1853, "src": "1628:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "1624:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 1879, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1855, "src": "1633:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "1624:10:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1885, "nodeType": "IfStatement", "src": "1620:33:13", "trueBody": { "expression": { "components": [{ "hexValue": "66616c7365", "id": 1881, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1644:5:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "false" }, { "hexValue": "30", "id": 1882, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1651:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "id": 1883, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1643:10:13", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$", "typeString": "tuple(bool,int_const 0)" } }, "functionReturnParameters": 1861, "id": 1884, "nodeType": "Return", "src": "1636:17:13" } }, { "expression": { "components": [{ "hexValue": "74727565", "id": 1886, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1675:4:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "true" }, { "id": 1887, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1871, "src": "1681:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 1888, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1674:9:13", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$", "typeString": "tuple(bool,uint256)" } }, "functionReturnParameters": 1861, "id": 1889, "nodeType": "Return", "src": "1667:16:13" }] }] }, "documentation": { "id": 1851, "nodeType": "StructuredDocumentation", "src": "1103:99:13", "text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag." }, "id": 1892, "implemented": true, "kind": "function", "modifiers": [], "name": "tryMul", "nameLocation": "1216:6:13", "nodeType": "FunctionDefinition", "parameters": { "id": 1856, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1853, "mutability": "mutable", "name": "a", "nameLocation": "1231:1:13", "nodeType": "VariableDeclaration", "scope": 1892, "src": "1223:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1852, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1223:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 1855, "mutability": "mutable", "name": "b", "nameLocation": "1242:1:13", "nodeType": "VariableDeclaration", "scope": 1892, "src": "1234:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1854, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1234:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "1222:22:13" }, "returnParameters": { "id": 1861, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1858, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1892, "src": "1268:4:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 1857, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1268:4:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }, { "constant": false, "id": 1860, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1892, "src": "1274:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1859, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1274:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "1267:15:13" }, "scope": 2833, "src": "1207:493:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 1919, "nodeType": "Block", "src": "1887:114:13", "statements": [{ "id": 1918, "nodeType": "UncheckedBlock", "src": "1897:98:13", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1906, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1904, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1897, "src": "1925:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "hexValue": "30", "id": 1905, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1930:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "1925:6:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1911, "nodeType": "IfStatement", "src": "1921:29:13", "trueBody": { "expression": { "components": [{ "hexValue": "66616c7365", "id": 1907, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1941:5:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "false" }, { "hexValue": "30", "id": 1908, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1948:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "id": 1909, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1940:10:13", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$", "typeString": "tuple(bool,int_const 0)" } }, "functionReturnParameters": 1903, "id": 1910, "nodeType": "Return", "src": "1933:17:13" } }, { "expression": { "components": [{ "hexValue": "74727565", "id": 1912, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1972:4:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "true" }, { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1915, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1913, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1895, "src": "1978:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": { "id": 1914, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1897, "src": "1982:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "1978:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 1916, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1971:13:13", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$", "typeString": "tuple(bool,uint256)" } }, "functionReturnParameters": 1903, "id": 1917, "nodeType": "Return", "src": "1964:20:13" }] }] }, "documentation": { "id": 1893, "nodeType": "StructuredDocumentation", "src": "1706:100:13", "text": " @dev Returns the division of two unsigned integers, with a division by zero flag." }, "id": 1920, "implemented": true, "kind": "function", "modifiers": [], "name": "tryDiv", "nameLocation": "1820:6:13", "nodeType": "FunctionDefinition", "parameters": { "id": 1898, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1895, "mutability": "mutable", "name": "a", "nameLocation": "1835:1:13", "nodeType": "VariableDeclaration", "scope": 1920, "src": "1827:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1894, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1827:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 1897, "mutability": "mutable", "name": "b", "nameLocation": "1846:1:13", "nodeType": "VariableDeclaration", "scope": 1920, "src": "1838:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1896, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1838:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "1826:22:13" }, "returnParameters": { "id": 1903, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1900, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1920, "src": "1872:4:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 1899, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1872:4:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }, { "constant": false, "id": 1902, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1920, "src": "1878:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1901, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1878:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "1871:15:13" }, "scope": 2833, "src": "1811:190:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 1947, "nodeType": "Block", "src": "2198:114:13", "statements": [{ "id": 1946, "nodeType": "UncheckedBlock", "src": "2208:98:13", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1934, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1932, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1925, "src": "2236:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "hexValue": "30", "id": 1933, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2241:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "2236:6:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 1939, "nodeType": "IfStatement", "src": "2232:29:13", "trueBody": { "expression": { "components": [{ "hexValue": "66616c7365", "id": 1935, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2252:5:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "false" }, { "hexValue": "30", "id": 1936, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2259:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "id": 1937, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2251:10:13", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$", "typeString": "tuple(bool,int_const 0)" } }, "functionReturnParameters": 1931, "id": 1938, "nodeType": "Return", "src": "2244:17:13" } }, { "expression": { "components": [{ "hexValue": "74727565", "id": 1940, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2283:4:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "true" }, { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1943, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1941, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1923, "src": "2289:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": { "id": 1942, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1925, "src": "2293:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "2289:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 1944, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2282:13:13", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$", "typeString": "tuple(bool,uint256)" } }, "functionReturnParameters": 1931, "id": 1945, "nodeType": "Return", "src": "2275:20:13" }] }] }, "documentation": { "id": 1921, "nodeType": "StructuredDocumentation", "src": "2007:110:13", "text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag." }, "id": 1948, "implemented": true, "kind": "function", "modifiers": [], "name": "tryMod", "nameLocation": "2131:6:13", "nodeType": "FunctionDefinition", "parameters": { "id": 1926, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1923, "mutability": "mutable", "name": "a", "nameLocation": "2146:1:13", "nodeType": "VariableDeclaration", "scope": 1948, "src": "2138:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1922, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2138:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 1925, "mutability": "mutable", "name": "b", "nameLocation": "2157:1:13", "nodeType": "VariableDeclaration", "scope": 1948, "src": "2149:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1924, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2149:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2137:22:13" }, "returnParameters": { "id": 1931, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1928, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1948, "src": "2183:4:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 1927, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2183:4:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }, { "constant": false, "id": 1930, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1948, "src": "2189:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1929, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2189:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2182:15:13" }, "scope": 2833, "src": "2122:190:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 1965, "nodeType": "Block", "src": "2449:37:13", "statements": [{ "expression": { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1960, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1958, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1951, "src": "2466:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "id": 1959, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1953, "src": "2470:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "2466:5:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseExpression": { "id": 1962, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1953, "src": "2478:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 1963, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "2466:13:13", "trueExpression": { "id": 1961, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1951, "src": "2474:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 1957, "id": 1964, "nodeType": "Return", "src": "2459:20:13" }] }, "documentation": { "id": 1949, "nodeType": "StructuredDocumentation", "src": "2318:59:13", "text": " @dev Returns the largest of two numbers." }, "id": 1966, "implemented": true, "kind": "function", "modifiers": [], "name": "max", "nameLocation": "2391:3:13", "nodeType": "FunctionDefinition", "parameters": { "id": 1954, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1951, "mutability": "mutable", "name": "a", "nameLocation": "2403:1:13", "nodeType": "VariableDeclaration", "scope": 1966, "src": "2395:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1950, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2395:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 1953, "mutability": "mutable", "name": "b", "nameLocation": "2414:1:13", "nodeType": "VariableDeclaration", "scope": 1966, "src": "2406:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1952, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2406:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2394:22:13" }, "returnParameters": { "id": 1957, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1956, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1966, "src": "2440:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1955, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2440:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2439:9:13" }, "scope": 2833, "src": "2382:104:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 1983, "nodeType": "Block", "src": "2624:37:13", "statements": [{ "expression": { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1978, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1976, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1969, "src": "2641:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "id": 1977, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1971, "src": "2645:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "2641:5:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseExpression": { "id": 1980, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1971, "src": "2653:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 1981, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "2641:13:13", "trueExpression": { "id": 1979, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1969, "src": "2649:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 1975, "id": 1982, "nodeType": "Return", "src": "2634:20:13" }] }, "documentation": { "id": 1967, "nodeType": "StructuredDocumentation", "src": "2492:60:13", "text": " @dev Returns the smallest of two numbers." }, "id": 1984, "implemented": true, "kind": "function", "modifiers": [], "name": "min", "nameLocation": "2566:3:13", "nodeType": "FunctionDefinition", "parameters": { "id": 1972, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1969, "mutability": "mutable", "name": "a", "nameLocation": "2578:1:13", "nodeType": "VariableDeclaration", "scope": 1984, "src": "2570:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1968, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2570:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 1971, "mutability": "mutable", "name": "b", "nameLocation": "2589:1:13", "nodeType": "VariableDeclaration", "scope": 1984, "src": "2581:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1970, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2581:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2569:22:13" }, "returnParameters": { "id": 1975, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1974, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1984, "src": "2615:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1973, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2615:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2614:9:13" }, "scope": 2833, "src": "2557:104:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2006, "nodeType": "Block", "src": "2845:82:13", "statements": [{ "expression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2004, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "components": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 1996, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1994, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1987, "src": "2900:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "&", "rightExpression": { "id": 1995, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1989, "src": "2904:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "2900:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 1997, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2899:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2003, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "components": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2000, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 1998, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1987, "src": "2910:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "^", "rightExpression": { "id": 1999, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1989, "src": "2914:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "2910:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 2001, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2909:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": { "hexValue": "32", "id": 2002, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2919:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "src": "2909:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "2899:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 1993, "id": 2005, "nodeType": "Return", "src": "2892:28:13" }] }, "documentation": { "id": 1985, "nodeType": "StructuredDocumentation", "src": "2667:102:13", "text": " @dev Returns the average of two numbers. The result is rounded towards\n zero." }, "id": 2007, "implemented": true, "kind": "function", "modifiers": [], "name": "average", "nameLocation": "2783:7:13", "nodeType": "FunctionDefinition", "parameters": { "id": 1990, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1987, "mutability": "mutable", "name": "a", "nameLocation": "2799:1:13", "nodeType": "VariableDeclaration", "scope": 2007, "src": "2791:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1986, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2791:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 1989, "mutability": "mutable", "name": "b", "nameLocation": "2810:1:13", "nodeType": "VariableDeclaration", "scope": 2007, "src": "2802:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1988, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2802:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2790:22:13" }, "returnParameters": { "id": 1993, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 1992, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2007, "src": "2836:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 1991, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2836:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2835:9:13" }, "scope": 2833, "src": "2774:153:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2040, "nodeType": "Block", "src": "3219:260:13", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2019, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2017, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2012, "src": "3233:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "hexValue": "30", "id": 2018, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3238:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "3233:6:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2025, "nodeType": "IfStatement", "src": "3229:127:13", "trueBody": { "id": 2024, "nodeType": "Block", "src": "3241:115:13", "statements": [{ "expression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2022, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2020, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2010, "src": "3340:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": { "id": 2021, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2012, "src": "3344:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "3340:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 2016, "id": 2023, "nodeType": "Return", "src": "3333:12:13" }] } }, { "expression": { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2028, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2026, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2010, "src": "3444:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "hexValue": "30", "id": 2027, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3449:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "3444:6:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2037, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2035, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "components": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2032, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2030, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2010, "src": "3458:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": { "hexValue": "31", "id": 2031, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3462:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "3458:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 2033, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3457:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": { "id": 2034, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2012, "src": "3467:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "3457:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "31", "id": 2036, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3471:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "3457:15:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2038, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "3444:28:13", "trueExpression": { "hexValue": "30", "id": 2029, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3453:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 2016, "id": 2039, "nodeType": "Return", "src": "3437:35:13" }] }, "documentation": { "id": 2008, "nodeType": "StructuredDocumentation", "src": "2933:210:13", "text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero." }, "id": 2041, "implemented": true, "kind": "function", "modifiers": [], "name": "ceilDiv", "nameLocation": "3157:7:13", "nodeType": "FunctionDefinition", "parameters": { "id": 2013, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2010, "mutability": "mutable", "name": "a", "nameLocation": "3173:1:13", "nodeType": "VariableDeclaration", "scope": 2041, "src": "3165:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2009, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3165:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 2012, "mutability": "mutable", "name": "b", "nameLocation": "3184:1:13", "nodeType": "VariableDeclaration", "scope": 2041, "src": "3176:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2011, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3176:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "3164:22:13" }, "returnParameters": { "id": 2016, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2015, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2041, "src": "3210:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2014, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3210:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "3209:9:13" }, "scope": 2833, "src": "3148:331:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2166, "nodeType": "Block", "src": "3901:4018:13", "statements": [{ "id": 2165, "nodeType": "UncheckedBlock", "src": "3911:4002:13", "statements": [{ "assignments": [2054], "declarations": [{ "constant": false, "id": 2054, "mutability": "mutable", "name": "prod0", "nameLocation": "4240:5:13", "nodeType": "VariableDeclaration", "scope": 2165, "src": "4232:13:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2053, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4232:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 2058, "initialValue": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2057, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2055, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2044, "src": "4248:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": { "id": 2056, "name": "y", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2046, "src": "4252:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "4248:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "4232:21:13" }, { "assignments": [2060], "declarations": [{ "constant": false, "id": 2060, "mutability": "mutable", "name": "prod1", "nameLocation": "4320:5:13", "nodeType": "VariableDeclaration", "scope": 2165, "src": "4312:13:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2059, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4312:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 2061, "nodeType": "VariableDeclarationStatement", "src": "4312:13:13" }, { "AST": { "nodeType": "YulBlock", "src": "4392:122:13", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "4410:30:13", "value": { "arguments": [{ "name": "x", "nodeType": "YulIdentifier", "src": "4427:1:13" }, { "name": "y", "nodeType": "YulIdentifier", "src": "4430:1:13" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "4437:1:13", "type": "", "value": "0" }], "functionName": { "name": "not", "nodeType": "YulIdentifier", "src": "4433:3:13" }, "nodeType": "YulFunctionCall", "src": "4433:6:13" }], "functionName": { "name": "mulmod", "nodeType": "YulIdentifier", "src": "4420:6:13" }, "nodeType": "YulFunctionCall", "src": "4420:20:13" }, "variables": [{ "name": "mm", "nodeType": "YulTypedName", "src": "4414:2:13", "type": "" }] }, { "nodeType": "YulAssignment", "src": "4457:43:13", "value": { "arguments": [{ "arguments": [{ "name": "mm", "nodeType": "YulIdentifier", "src": "4474:2:13" }, { "name": "prod0", "nodeType": "YulIdentifier", "src": "4478:5:13" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "4470:3:13" }, "nodeType": "YulFunctionCall", "src": "4470:14:13" }, { "arguments": [{ "name": "mm", "nodeType": "YulIdentifier", "src": "4489:2:13" }, { "name": "prod0", "nodeType": "YulIdentifier", "src": "4493:5:13" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "4486:2:13" }, "nodeType": "YulFunctionCall", "src": "4486:13:13" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "4466:3:13" }, "nodeType": "YulFunctionCall", "src": "4466:34:13" }, "variableNames": [{ "name": "prod1", "nodeType": "YulIdentifier", "src": "4457:5:13" }] }] }, "evmVersion": "paris", "externalReferences": [{ "declaration": 2054, "isOffset": false, "isSlot": false, "src": "4478:5:13", "valueSize": 1 }, { "declaration": 2054, "isOffset": false, "isSlot": false, "src": "4493:5:13", "valueSize": 1 }, { "declaration": 2060, "isOffset": false, "isSlot": false, "src": "4457:5:13", "valueSize": 1 }, { "declaration": 2044, "isOffset": false, "isSlot": false, "src": "4427:1:13", "valueSize": 1 }, { "declaration": 2046, "isOffset": false, "isSlot": false, "src": "4430:1:13", "valueSize": 1 }], "id": 2062, "nodeType": "InlineAssembly", "src": "4383:131:13" }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2065, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2063, "name": "prod1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2060, "src": "4595:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "hexValue": "30", "id": 2064, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4604:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "4595:10:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2071, "nodeType": "IfStatement", "src": "4591:368:13", "trueBody": { "id": 2070, "nodeType": "Block", "src": "4607:352:13", "statements": [{ "expression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2068, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2066, "name": "prod0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2054, "src": "4925:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": { "id": 2067, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2048, "src": "4933:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "4925:19:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 2052, "id": 2069, "nodeType": "Return", "src": "4918:26:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2074, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2072, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2048, "src": "5065:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": { "id": 2073, "name": "prod1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2060, "src": "5080:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "5065:20:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2079, "nodeType": "IfStatement", "src": "5061:88:13", "trueBody": { "id": 2078, "nodeType": "Block", "src": "5087:62:13", "statements": [{ "errorCall": { "arguments": [], "expression": { "argumentTypes": [], "id": 2075, "name": "MathOverflowedMulDiv", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1785, "src": "5112:20:13", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 2076, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5112:22:13", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 2077, "nodeType": "RevertStatement", "src": "5105:29:13" }] } }, { "assignments": [2081], "declarations": [{ "constant": false, "id": 2081, "mutability": "mutable", "name": "remainder", "nameLocation": "5412:9:13", "nodeType": "VariableDeclaration", "scope": 2165, "src": "5404:17:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2080, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5404:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 2082, "nodeType": "VariableDeclarationStatement", "src": "5404:17:13" }, { "AST": { "nodeType": "YulBlock", "src": "5444:291:13", "statements": [{ "nodeType": "YulAssignment", "src": "5513:38:13", "value": { "arguments": [{ "name": "x", "nodeType": "YulIdentifier", "src": "5533:1:13" }, { "name": "y", "nodeType": "YulIdentifier", "src": "5536:1:13" }, { "name": "denominator", "nodeType": "YulIdentifier", "src": "5539:11:13" }], "functionName": { "name": "mulmod", "nodeType": "YulIdentifier", "src": "5526:6:13" }, "nodeType": "YulFunctionCall", "src": "5526:25:13" }, "variableNames": [{ "name": "remainder", "nodeType": "YulIdentifier", "src": "5513:9:13" }] }, { "nodeType": "YulAssignment", "src": "5633:41:13", "value": { "arguments": [{ "name": "prod1", "nodeType": "YulIdentifier", "src": "5646:5:13" }, { "arguments": [{ "name": "remainder", "nodeType": "YulIdentifier", "src": "5656:9:13" }, { "name": "prod0", "nodeType": "YulIdentifier", "src": "5667:5:13" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "5653:2:13" }, "nodeType": "YulFunctionCall", "src": "5653:20:13" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "5642:3:13" }, "nodeType": "YulFunctionCall", "src": "5642:32:13" }, "variableNames": [{ "name": "prod1", "nodeType": "YulIdentifier", "src": "5633:5:13" }] }, { "nodeType": "YulAssignment", "src": "5691:30:13", "value": { "arguments": [{ "name": "prod0", "nodeType": "YulIdentifier", "src": "5704:5:13" }, { "name": "remainder", "nodeType": "YulIdentifier", "src": "5711:9:13" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "5700:3:13" }, "nodeType": "YulFunctionCall", "src": "5700:21:13" }, "variableNames": [{ "name": "prod0", "nodeType": "YulIdentifier", "src": "5691:5:13" }] }] }, "evmVersion": "paris", "externalReferences": [{ "declaration": 2048, "isOffset": false, "isSlot": false, "src": "5539:11:13", "valueSize": 1 }, { "declaration": 2054, "isOffset": false, "isSlot": false, "src": "5667:5:13", "valueSize": 1 }, { "declaration": 2054, "isOffset": false, "isSlot": false, "src": "5691:5:13", "valueSize": 1 }, { "declaration": 2054, "isOffset": false, "isSlot": false, "src": "5704:5:13", "valueSize": 1 }, { "declaration": 2060, "isOffset": false, "isSlot": false, "src": "5633:5:13", "valueSize": 1 }, { "declaration": 2060, "isOffset": false, "isSlot": false, "src": "5646:5:13", "valueSize": 1 }, { "declaration": 2081, "isOffset": false, "isSlot": false, "src": "5513:9:13", "valueSize": 1 }, { "declaration": 2081, "isOffset": false, "isSlot": false, "src": "5656:9:13", "valueSize": 1 }, { "declaration": 2081, "isOffset": false, "isSlot": false, "src": "5711:9:13", "valueSize": 1 }, { "declaration": 2044, "isOffset": false, "isSlot": false, "src": "5533:1:13", "valueSize": 1 }, { "declaration": 2046, "isOffset": false, "isSlot": false, "src": "5536:1:13", "valueSize": 1 }], "id": 2083, "nodeType": "InlineAssembly", "src": "5435:300:13" }, { "assignments": [2085], "declarations": [{ "constant": false, "id": 2085, "mutability": "mutable", "name": "twos", "nameLocation": "5947:4:13", "nodeType": "VariableDeclaration", "scope": 2165, "src": "5939:12:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2084, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5939:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 2092, "initialValue": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2091, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2086, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2048, "src": "5954:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "&", "rightExpression": { "components": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2089, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "hexValue": "30", "id": 2087, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5969:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": { "id": 2088, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2048, "src": "5973:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "5969:15:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 2090, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5968:17:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "5954:31:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "5939:46:13" }, { "AST": { "nodeType": "YulBlock", "src": "6008:362:13", "statements": [{ "nodeType": "YulAssignment", "src": "6073:37:13", "value": { "arguments": [{ "name": "denominator", "nodeType": "YulIdentifier", "src": "6092:11:13" }, { "name": "twos", "nodeType": "YulIdentifier", "src": "6105:4:13" }], "functionName": { "name": "div", "nodeType": "YulIdentifier", "src": "6088:3:13" }, "nodeType": "YulFunctionCall", "src": "6088:22:13" }, "variableNames": [{ "name": "denominator", "nodeType": "YulIdentifier", "src": "6073:11:13" }] }, { "nodeType": "YulAssignment", "src": "6177:25:13", "value": { "arguments": [{ "name": "prod0", "nodeType": "YulIdentifier", "src": "6190:5:13" }, { "name": "twos", "nodeType": "YulIdentifier", "src": "6197:4:13" }], "functionName": { "name": "div", "nodeType": "YulIdentifier", "src": "6186:3:13" }, "nodeType": "YulFunctionCall", "src": "6186:16:13" }, "variableNames": [{ "name": "prod0", "nodeType": "YulIdentifier", "src": "6177:5:13" }] }, { "nodeType": "YulAssignment", "src": "6317:39:13", "value": { "arguments": [{ "arguments": [{ "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "6337:1:13", "type": "", "value": "0" }, { "name": "twos", "nodeType": "YulIdentifier", "src": "6340:4:13" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "6333:3:13" }, "nodeType": "YulFunctionCall", "src": "6333:12:13" }, { "name": "twos", "nodeType": "YulIdentifier", "src": "6347:4:13" }], "functionName": { "name": "div", "nodeType": "YulIdentifier", "src": "6329:3:13" }, "nodeType": "YulFunctionCall", "src": "6329:23:13" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6354:1:13", "type": "", "value": "1" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6325:3:13" }, "nodeType": "YulFunctionCall", "src": "6325:31:13" }, "variableNames": [{ "name": "twos", "nodeType": "YulIdentifier", "src": "6317:4:13" }] }] }, "evmVersion": "paris", "externalReferences": [{ "declaration": 2048, "isOffset": false, "isSlot": false, "src": "6073:11:13", "valueSize": 1 }, { "declaration": 2048, "isOffset": false, "isSlot": false, "src": "6092:11:13", "valueSize": 1 }, { "declaration": 2054, "isOffset": false, "isSlot": false, "src": "6177:5:13", "valueSize": 1 }, { "declaration": 2054, "isOffset": false, "isSlot": false, "src": "6190:5:13", "valueSize": 1 }, { "declaration": 2085, "isOffset": false, "isSlot": false, "src": "6105:4:13", "valueSize": 1 }, { "declaration": 2085, "isOffset": false, "isSlot": false, "src": "6197:4:13", "valueSize": 1 }, { "declaration": 2085, "isOffset": false, "isSlot": false, "src": "6317:4:13", "valueSize": 1 }, { "declaration": 2085, "isOffset": false, "isSlot": false, "src": "6340:4:13", "valueSize": 1 }, { "declaration": 2085, "isOffset": false, "isSlot": false, "src": "6347:4:13", "valueSize": 1 }], "id": 2093, "nodeType": "InlineAssembly", "src": "5999:371:13" }, { "expression": { "id": 2098, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2094, "name": "prod0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2054, "src": "6436:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "|=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2097, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2095, "name": "prod1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2060, "src": "6445:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": { "id": 2096, "name": "twos", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2085, "src": "6453:4:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "6445:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "6436:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2099, "nodeType": "ExpressionStatement", "src": "6436:21:13" }, { "assignments": [2101], "declarations": [{ "constant": false, "id": 2101, "mutability": "mutable", "name": "inverse", "nameLocation": "6783:7:13", "nodeType": "VariableDeclaration", "scope": 2165, "src": "6775:15:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2100, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6775:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 2108, "initialValue": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2107, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "components": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2104, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "hexValue": "33", "id": 2102, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6794:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3" }, "value": "3" }, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": { "id": 2103, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2048, "src": "6798:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "6794:15:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 2105, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6793:17:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "^", "rightExpression": { "hexValue": "32", "id": 2106, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6813:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "src": "6793:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "6775:39:13" }, { "expression": { "id": 2115, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2109, "name": "inverse", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2101, "src": "7031:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "*=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2114, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "hexValue": "32", "id": 2110, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7042:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2113, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2111, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2048, "src": "7046:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": { "id": 2112, "name": "inverse", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2101, "src": "7060:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7046:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7042:25:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7031:36:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2116, "nodeType": "ExpressionStatement", "src": "7031:36:13" }, { "expression": { "id": 2123, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2117, "name": "inverse", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2101, "src": "7100:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "*=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2122, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "hexValue": "32", "id": 2118, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7111:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2121, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2119, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2048, "src": "7115:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": { "id": 2120, "name": "inverse", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2101, "src": "7129:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7115:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7111:25:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7100:36:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2124, "nodeType": "ExpressionStatement", "src": "7100:36:13" }, { "expression": { "id": 2131, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2125, "name": "inverse", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2101, "src": "7170:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "*=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2130, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "hexValue": "32", "id": 2126, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7181:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2129, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2127, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2048, "src": "7185:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": { "id": 2128, "name": "inverse", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2101, "src": "7199:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7185:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7181:25:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7170:36:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2132, "nodeType": "ExpressionStatement", "src": "7170:36:13" }, { "expression": { "id": 2139, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2133, "name": "inverse", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2101, "src": "7240:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "*=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2138, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "hexValue": "32", "id": 2134, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7251:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2137, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2135, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2048, "src": "7255:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": { "id": 2136, "name": "inverse", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2101, "src": "7269:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7255:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7251:25:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7240:36:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2140, "nodeType": "ExpressionStatement", "src": "7240:36:13" }, { "expression": { "id": 2147, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2141, "name": "inverse", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2101, "src": "7310:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "*=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2146, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "hexValue": "32", "id": 2142, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7321:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2145, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2143, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2048, "src": "7325:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": { "id": 2144, "name": "inverse", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2101, "src": "7339:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7325:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7321:25:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7310:36:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2148, "nodeType": "ExpressionStatement", "src": "7310:36:13" }, { "expression": { "id": 2155, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2149, "name": "inverse", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2101, "src": "7381:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "*=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2154, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "hexValue": "32", "id": 2150, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7392:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2153, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2151, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2048, "src": "7396:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": { "id": 2152, "name": "inverse", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2101, "src": "7410:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7396:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7392:25:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7381:36:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2156, "nodeType": "ExpressionStatement", "src": "7381:36:13" }, { "expression": { "id": 2161, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2157, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2051, "src": "7851:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2160, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2158, "name": "prod0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2054, "src": "7860:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": { "id": 2159, "name": "inverse", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2101, "src": "7868:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7860:15:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "7851:24:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2162, "nodeType": "ExpressionStatement", "src": "7851:24:13" }, { "expression": { "id": 2163, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2051, "src": "7896:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 2052, "id": 2164, "nodeType": "Return", "src": "7889:13:13" }] }] }, "documentation": { "id": 2042, "nodeType": "StructuredDocumentation", "src": "3485:313:13", "text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license." }, "id": 2167, "implemented": true, "kind": "function", "modifiers": [], "name": "mulDiv", "nameLocation": "3812:6:13", "nodeType": "FunctionDefinition", "parameters": { "id": 2049, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2044, "mutability": "mutable", "name": "x", "nameLocation": "3827:1:13", "nodeType": "VariableDeclaration", "scope": 2167, "src": "3819:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2043, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3819:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 2046, "mutability": "mutable", "name": "y", "nameLocation": "3838:1:13", "nodeType": "VariableDeclaration", "scope": 2167, "src": "3830:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2045, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3830:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 2048, "mutability": "mutable", "name": "denominator", "nameLocation": "3849:11:13", "nodeType": "VariableDeclaration", "scope": 2167, "src": "3841:19:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2047, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3841:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "3818:43:13" }, "returnParameters": { "id": 2052, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2051, "mutability": "mutable", "name": "result", "nameLocation": "3893:6:13", "nodeType": "VariableDeclaration", "scope": 2167, "src": "3885:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2050, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3885:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "3884:16:13" }, "scope": 2833, "src": "3803:4116:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2209, "nodeType": "Block", "src": "8161:192:13", "statements": [{ "assignments": [2183], "declarations": [{ "constant": false, "id": 2183, "mutability": "mutable", "name": "result", "nameLocation": "8179:6:13", "nodeType": "VariableDeclaration", "scope": 2209, "src": "8171:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2182, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8171:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 2189, "initialValue": { "arguments": [{ "id": 2185, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2170, "src": "8195:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 2186, "name": "y", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2172, "src": "8198:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 2187, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2174, "src": "8201:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 2184, "name": "mulDiv", "nodeType": "Identifier", "overloadedDeclarations": [2167, 2210], "referencedDeclaration": 2167, "src": "8188:6:13", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256) pure returns (uint256)" } }, "id": 2188, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "8188:25:13", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "8171:42:13" }, { "condition": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 2200, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [{ "id": 2191, "name": "rounding", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2177, "src": "8244:8:13", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" }], "id": 2190, "name": "unsignedRoundsUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2832, "src": "8227:16:13", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1790_$returns$_t_bool_$", "typeString": "function (enum Math.Rounding) pure returns (bool)" } }, "id": 2192, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "8227:26:13", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2199, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [{ "id": 2194, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2170, "src": "8264:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 2195, "name": "y", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2172, "src": "8267:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 2196, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2174, "src": "8270:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 2193, "name": "mulmod", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -16, "src": "8257:6:13", "typeDescriptions": { "typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256) pure returns (uint256)" } }, "id": 2197, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "8257:25:13", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 2198, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8285:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "8257:29:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "8227:59:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2206, "nodeType": "IfStatement", "src": "8223:101:13", "trueBody": { "id": 2205, "nodeType": "Block", "src": "8288:36:13", "statements": [{ "expression": { "id": 2203, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2201, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2183, "src": "8302:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "31", "id": 2202, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8312:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "8302:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2204, "nodeType": "ExpressionStatement", "src": "8302:11:13" }] } }, { "expression": { "id": 2207, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2183, "src": "8340:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 2181, "id": 2208, "nodeType": "Return", "src": "8333:13:13" }] }, "documentation": { "id": 2168, "nodeType": "StructuredDocumentation", "src": "7925:121:13", "text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction." }, "id": 2210, "implemented": true, "kind": "function", "modifiers": [], "name": "mulDiv", "nameLocation": "8060:6:13", "nodeType": "FunctionDefinition", "parameters": { "id": 2178, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2170, "mutability": "mutable", "name": "x", "nameLocation": "8075:1:13", "nodeType": "VariableDeclaration", "scope": 2210, "src": "8067:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2169, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8067:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 2172, "mutability": "mutable", "name": "y", "nameLocation": "8086:1:13", "nodeType": "VariableDeclaration", "scope": 2210, "src": "8078:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2171, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8078:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 2174, "mutability": "mutable", "name": "denominator", "nameLocation": "8097:11:13", "nodeType": "VariableDeclaration", "scope": 2210, "src": "8089:19:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2173, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8089:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 2177, "mutability": "mutable", "name": "rounding", "nameLocation": "8119:8:13", "nodeType": "VariableDeclaration", "scope": 2210, "src": "8110:17:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" }, "typeName": { "id": 2176, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 2175, "name": "Rounding", "nameLocations": ["8110:8:13"], "nodeType": "IdentifierPath", "referencedDeclaration": 1790, "src": "8110:8:13" }, "referencedDeclaration": 1790, "src": "8110:8:13", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" } }, "visibility": "internal" }], "src": "8066:62:13" }, "returnParameters": { "id": 2181, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2180, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2210, "src": "8152:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2179, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8152:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "8151:9:13" }, "scope": 2833, "src": "8051:302:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2321, "nodeType": "Block", "src": "8644:1585:13", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2220, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2218, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2213, "src": "8658:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "hexValue": "30", "id": 2219, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8663:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "8658:6:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2224, "nodeType": "IfStatement", "src": "8654:45:13", "trueBody": { "id": 2223, "nodeType": "Block", "src": "8666:33:13", "statements": [{ "expression": { "hexValue": "30", "id": 2221, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8687:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "functionReturnParameters": 2217, "id": 2222, "nodeType": "Return", "src": "8680:8:13" }] } }, { "assignments": [2226], "declarations": [{ "constant": false, "id": 2226, "mutability": "mutable", "name": "result", "nameLocation": "9386:6:13", "nodeType": "VariableDeclaration", "scope": 2321, "src": "9378:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2225, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9378:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 2235, "initialValue": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2234, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "hexValue": "31", "id": 2227, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9395:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "nodeType": "BinaryOperation", "operator": "<<", "rightExpression": { "components": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2232, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [{ "id": 2229, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2213, "src": "9406:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 2228, "name": "log2", "nodeType": "Identifier", "overloadedDeclarations": [2489, 2524], "referencedDeclaration": 2489, "src": "9401:4:13", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)" } }, "id": 2230, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9401:7:13", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "31", "id": 2231, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9412:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "9401:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 2233, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "9400:14:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "9395:19:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "9378:36:13" }, { "id": 2320, "nodeType": "UncheckedBlock", "src": "9815:408:13", "statements": [{ "expression": { "id": 2245, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2236, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "9839:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2244, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "components": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2241, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2237, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "9849:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2240, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2238, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2213, "src": "9858:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": { "id": 2239, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "9862:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "9858:10:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "9849:19:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 2242, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "9848:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "31", "id": 2243, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9873:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "9848:26:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "9839:35:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2246, "nodeType": "ExpressionStatement", "src": "9839:35:13" }, { "expression": { "id": 2256, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2247, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "9888:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2255, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "components": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2252, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2248, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "9898:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2251, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2249, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2213, "src": "9907:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": { "id": 2250, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "9911:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "9907:10:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "9898:19:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 2253, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "9897:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "31", "id": 2254, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9922:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "9897:26:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "9888:35:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2257, "nodeType": "ExpressionStatement", "src": "9888:35:13" }, { "expression": { "id": 2267, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2258, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "9937:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2266, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "components": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2263, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2259, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "9947:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2262, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2260, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2213, "src": "9956:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": { "id": 2261, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "9960:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "9956:10:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "9947:19:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 2264, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "9946:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "31", "id": 2265, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9971:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "9946:26:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "9937:35:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2268, "nodeType": "ExpressionStatement", "src": "9937:35:13" }, { "expression": { "id": 2278, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2269, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "9986:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2277, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "components": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2274, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2270, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "9996:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2273, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2271, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2213, "src": "10005:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": { "id": 2272, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "10009:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "10005:10:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "9996:19:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 2275, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "9995:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "31", "id": 2276, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10020:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "9995:26:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "9986:35:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2279, "nodeType": "ExpressionStatement", "src": "9986:35:13" }, { "expression": { "id": 2289, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2280, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "10035:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2288, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "components": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2285, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2281, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "10045:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2284, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2282, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2213, "src": "10054:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": { "id": 2283, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "10058:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "10054:10:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "10045:19:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 2286, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "10044:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "31", "id": 2287, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10069:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "10044:26:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "10035:35:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2290, "nodeType": "ExpressionStatement", "src": "10035:35:13" }, { "expression": { "id": 2300, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2291, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "10084:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2299, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "components": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2296, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2292, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "10094:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2295, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2293, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2213, "src": "10103:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": { "id": 2294, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "10107:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "10103:10:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "10094:19:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 2297, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "10093:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "31", "id": 2298, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10118:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "10093:26:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "10084:35:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2301, "nodeType": "ExpressionStatement", "src": "10084:35:13" }, { "expression": { "id": 2311, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2302, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "10133:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2310, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "components": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2307, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2303, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "10143:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2306, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2304, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2213, "src": "10152:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": { "id": 2305, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "10156:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "10152:10:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "10143:19:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 2308, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "10142:21:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "31", "id": 2309, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10167:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "10142:26:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "10133:35:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2312, "nodeType": "ExpressionStatement", "src": "10133:35:13" }, { "expression": { "arguments": [{ "id": 2314, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "10193:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2317, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2315, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2213, "src": "10201:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": { "id": 2316, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2226, "src": "10205:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "10201:10:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 2313, "name": "min", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1984, "src": "10189:3:13", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)" } }, "id": 2318, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10189:23:13", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 2217, "id": 2319, "nodeType": "Return", "src": "10182:30:13" }] }] }, "documentation": { "id": 2211, "nodeType": "StructuredDocumentation", "src": "8359:223:13", "text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)." }, "id": 2322, "implemented": true, "kind": "function", "modifiers": [], "name": "sqrt", "nameLocation": "8596:4:13", "nodeType": "FunctionDefinition", "parameters": { "id": 2214, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2213, "mutability": "mutable", "name": "a", "nameLocation": "8609:1:13", "nodeType": "VariableDeclaration", "scope": 2322, "src": "8601:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2212, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8601:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "8600:11:13" }, "returnParameters": { "id": 2217, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2216, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2322, "src": "8635:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2215, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8635:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "8634:9:13" }, "scope": 2833, "src": "8587:1642:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2356, "nodeType": "Block", "src": "10405:164:13", "statements": [{ "id": 2355, "nodeType": "UncheckedBlock", "src": "10415:148:13", "statements": [{ "assignments": [2334], "declarations": [{ "constant": false, "id": 2334, "mutability": "mutable", "name": "result", "nameLocation": "10447:6:13", "nodeType": "VariableDeclaration", "scope": 2355, "src": "10439:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2333, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10439:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 2338, "initialValue": { "arguments": [{ "id": 2336, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2325, "src": "10461:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 2335, "name": "sqrt", "nodeType": "Identifier", "overloadedDeclarations": [2322, 2357], "referencedDeclaration": 2322, "src": "10456:4:13", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)" } }, "id": 2337, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10456:7:13", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "10439:24:13" }, { "expression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2353, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2339, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2334, "src": "10484:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "components": [{ "condition": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 2348, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [{ "id": 2341, "name": "rounding", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2328, "src": "10511:8:13", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" }], "id": 2340, "name": "unsignedRoundsUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2832, "src": "10494:16:13", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1790_$returns$_t_bool_$", "typeString": "function (enum Math.Rounding) pure returns (bool)" } }, "id": 2342, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10494:26:13", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2347, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2345, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2343, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2334, "src": "10524:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": { "id": 2344, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2334, "src": "10533:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "10524:15:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "id": 2346, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2325, "src": "10542:1:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "10524:19:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "10494:49:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseExpression": { "hexValue": "30", "id": 2350, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10550:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "id": 2351, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "10494:57:13", "trueExpression": { "hexValue": "31", "id": 2349, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10546:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }], "id": 2352, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "10493:59:13", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }, "src": "10484:68:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 2332, "id": 2354, "nodeType": "Return", "src": "10477:75:13" }] }] }, "documentation": { "id": 2323, "nodeType": "StructuredDocumentation", "src": "10235:89:13", "text": " @notice Calculates sqrt(a), following the selected rounding direction." }, "id": 2357, "implemented": true, "kind": "function", "modifiers": [], "name": "sqrt", "nameLocation": "10338:4:13", "nodeType": "FunctionDefinition", "parameters": { "id": 2329, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2325, "mutability": "mutable", "name": "a", "nameLocation": "10351:1:13", "nodeType": "VariableDeclaration", "scope": 2357, "src": "10343:9:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2324, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10343:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 2328, "mutability": "mutable", "name": "rounding", "nameLocation": "10363:8:13", "nodeType": "VariableDeclaration", "scope": 2357, "src": "10354:17:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" }, "typeName": { "id": 2327, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 2326, "name": "Rounding", "nameLocations": ["10354:8:13"], "nodeType": "IdentifierPath", "referencedDeclaration": 1790, "src": "10354:8:13" }, "referencedDeclaration": 1790, "src": "10354:8:13", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" } }, "visibility": "internal" }], "src": "10342:30:13" }, "returnParameters": { "id": 2332, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2331, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2357, "src": "10396:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2330, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10396:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "10395:9:13" }, "scope": 2833, "src": "10329:240:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2488, "nodeType": "Block", "src": "10760:922:13", "statements": [{ "assignments": [2366], "declarations": [{ "constant": false, "id": 2366, "mutability": "mutable", "name": "result", "nameLocation": "10778:6:13", "nodeType": "VariableDeclaration", "scope": 2488, "src": "10770:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2365, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10770:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 2368, "initialValue": { "hexValue": "30", "id": 2367, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10787:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "10770:18:13" }, { "id": 2485, "nodeType": "UncheckedBlock", "src": "10798:855:13", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2373, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2371, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2369, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2360, "src": "10826:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "313238", "id": 2370, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10835:3:13", "typeDescriptions": { "typeIdentifier": "t_rational_128_by_1", "typeString": "int_const 128" }, "value": "128" }, "src": "10826:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 2372, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10841:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "10826:16:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2383, "nodeType": "IfStatement", "src": "10822:99:13", "trueBody": { "id": 2382, "nodeType": "Block", "src": "10844:77:13", "statements": [{ "expression": { "id": 2376, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2374, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2360, "src": "10862:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": ">>=", "rightHandSide": { "hexValue": "313238", "id": 2375, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10872:3:13", "typeDescriptions": { "typeIdentifier": "t_rational_128_by_1", "typeString": "int_const 128" }, "value": "128" }, "src": "10862:13:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2377, "nodeType": "ExpressionStatement", "src": "10862:13:13" }, { "expression": { "id": 2380, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2378, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2366, "src": "10893:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "313238", "id": 2379, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10903:3:13", "typeDescriptions": { "typeIdentifier": "t_rational_128_by_1", "typeString": "int_const 128" }, "value": "128" }, "src": "10893:13:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2381, "nodeType": "ExpressionStatement", "src": "10893:13:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2388, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2386, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2384, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2360, "src": "10938:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "3634", "id": 2385, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10947:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_64_by_1", "typeString": "int_const 64" }, "value": "64" }, "src": "10938:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 2387, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10952:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "10938:15:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2398, "nodeType": "IfStatement", "src": "10934:96:13", "trueBody": { "id": 2397, "nodeType": "Block", "src": "10955:75:13", "statements": [{ "expression": { "id": 2391, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2389, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2360, "src": "10973:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": ">>=", "rightHandSide": { "hexValue": "3634", "id": 2390, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10983:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_64_by_1", "typeString": "int_const 64" }, "value": "64" }, "src": "10973:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2392, "nodeType": "ExpressionStatement", "src": "10973:12:13" }, { "expression": { "id": 2395, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2393, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2366, "src": "11003:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "3634", "id": 2394, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11013:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_64_by_1", "typeString": "int_const 64" }, "value": "64" }, "src": "11003:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2396, "nodeType": "ExpressionStatement", "src": "11003:12:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2403, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2401, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2399, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2360, "src": "11047:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "3332", "id": 2400, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11056:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_32_by_1", "typeString": "int_const 32" }, "value": "32" }, "src": "11047:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 2402, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11061:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "11047:15:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2413, "nodeType": "IfStatement", "src": "11043:96:13", "trueBody": { "id": 2412, "nodeType": "Block", "src": "11064:75:13", "statements": [{ "expression": { "id": 2406, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2404, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2360, "src": "11082:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": ">>=", "rightHandSide": { "hexValue": "3332", "id": 2405, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11092:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_32_by_1", "typeString": "int_const 32" }, "value": "32" }, "src": "11082:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2407, "nodeType": "ExpressionStatement", "src": "11082:12:13" }, { "expression": { "id": 2410, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2408, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2366, "src": "11112:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "3332", "id": 2409, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11122:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_32_by_1", "typeString": "int_const 32" }, "value": "32" }, "src": "11112:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2411, "nodeType": "ExpressionStatement", "src": "11112:12:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2418, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2416, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2414, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2360, "src": "11156:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "3136", "id": 2415, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11165:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_16_by_1", "typeString": "int_const 16" }, "value": "16" }, "src": "11156:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 2417, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11170:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "11156:15:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2428, "nodeType": "IfStatement", "src": "11152:96:13", "trueBody": { "id": 2427, "nodeType": "Block", "src": "11173:75:13", "statements": [{ "expression": { "id": 2421, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2419, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2360, "src": "11191:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": ">>=", "rightHandSide": { "hexValue": "3136", "id": 2420, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11201:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_16_by_1", "typeString": "int_const 16" }, "value": "16" }, "src": "11191:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2422, "nodeType": "ExpressionStatement", "src": "11191:12:13" }, { "expression": { "id": 2425, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2423, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2366, "src": "11221:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "3136", "id": 2424, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11231:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_16_by_1", "typeString": "int_const 16" }, "value": "16" }, "src": "11221:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2426, "nodeType": "ExpressionStatement", "src": "11221:12:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2433, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2431, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2429, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2360, "src": "11265:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "38", "id": 2430, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11274:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" }, "value": "8" }, "src": "11265:10:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 2432, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11278:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "11265:14:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2443, "nodeType": "IfStatement", "src": "11261:93:13", "trueBody": { "id": 2442, "nodeType": "Block", "src": "11281:73:13", "statements": [{ "expression": { "id": 2436, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2434, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2360, "src": "11299:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": ">>=", "rightHandSide": { "hexValue": "38", "id": 2435, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11309:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" }, "value": "8" }, "src": "11299:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2437, "nodeType": "ExpressionStatement", "src": "11299:11:13" }, { "expression": { "id": 2440, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2438, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2366, "src": "11328:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "38", "id": 2439, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11338:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" }, "value": "8" }, "src": "11328:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2441, "nodeType": "ExpressionStatement", "src": "11328:11:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2448, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2446, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2444, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2360, "src": "11371:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "34", "id": 2445, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11380:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_4_by_1", "typeString": "int_const 4" }, "value": "4" }, "src": "11371:10:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 2447, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11384:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "11371:14:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2458, "nodeType": "IfStatement", "src": "11367:93:13", "trueBody": { "id": 2457, "nodeType": "Block", "src": "11387:73:13", "statements": [{ "expression": { "id": 2451, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2449, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2360, "src": "11405:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": ">>=", "rightHandSide": { "hexValue": "34", "id": 2450, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11415:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_4_by_1", "typeString": "int_const 4" }, "value": "4" }, "src": "11405:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2452, "nodeType": "ExpressionStatement", "src": "11405:11:13" }, { "expression": { "id": 2455, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2453, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2366, "src": "11434:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "34", "id": 2454, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11444:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_4_by_1", "typeString": "int_const 4" }, "value": "4" }, "src": "11434:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2456, "nodeType": "ExpressionStatement", "src": "11434:11:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2463, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2461, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2459, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2360, "src": "11477:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "32", "id": 2460, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11486:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "src": "11477:10:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 2462, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11490:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "11477:14:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2473, "nodeType": "IfStatement", "src": "11473:93:13", "trueBody": { "id": 2472, "nodeType": "Block", "src": "11493:73:13", "statements": [{ "expression": { "id": 2466, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2464, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2360, "src": "11511:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": ">>=", "rightHandSide": { "hexValue": "32", "id": 2465, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11521:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "src": "11511:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2467, "nodeType": "ExpressionStatement", "src": "11511:11:13" }, { "expression": { "id": 2470, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2468, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2366, "src": "11540:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "32", "id": 2469, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11550:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "src": "11540:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2471, "nodeType": "ExpressionStatement", "src": "11540:11:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2478, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2476, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2474, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2360, "src": "11583:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "31", "id": 2475, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11592:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "11583:10:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 2477, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11596:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "11583:14:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2484, "nodeType": "IfStatement", "src": "11579:64:13", "trueBody": { "id": 2483, "nodeType": "Block", "src": "11599:44:13", "statements": [{ "expression": { "id": 2481, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2479, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2366, "src": "11617:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "31", "id": 2480, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11627:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "11617:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2482, "nodeType": "ExpressionStatement", "src": "11617:11:13" }] } }] }, { "expression": { "id": 2486, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2366, "src": "11669:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 2364, "id": 2487, "nodeType": "Return", "src": "11662:13:13" }] }, "documentation": { "id": 2358, "nodeType": "StructuredDocumentation", "src": "10575:119:13", "text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0." }, "id": 2489, "implemented": true, "kind": "function", "modifiers": [], "name": "log2", "nameLocation": "10708:4:13", "nodeType": "FunctionDefinition", "parameters": { "id": 2361, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2360, "mutability": "mutable", "name": "value", "nameLocation": "10721:5:13", "nodeType": "VariableDeclaration", "scope": 2489, "src": "10713:13:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2359, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10713:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "10712:15:13" }, "returnParameters": { "id": 2364, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2363, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2489, "src": "10751:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2362, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10751:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "10750:9:13" }, "scope": 2833, "src": "10699:983:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2523, "nodeType": "Block", "src": "11915:168:13", "statements": [{ "id": 2522, "nodeType": "UncheckedBlock", "src": "11925:152:13", "statements": [{ "assignments": [2501], "declarations": [{ "constant": false, "id": 2501, "mutability": "mutable", "name": "result", "nameLocation": "11957:6:13", "nodeType": "VariableDeclaration", "scope": 2522, "src": "11949:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2500, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11949:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 2505, "initialValue": { "arguments": [{ "id": 2503, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2492, "src": "11971:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 2502, "name": "log2", "nodeType": "Identifier", "overloadedDeclarations": [2489, 2524], "referencedDeclaration": 2489, "src": "11966:4:13", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)" } }, "id": 2504, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "11966:11:13", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "11949:28:13" }, { "expression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2520, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2506, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2501, "src": "11998:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "components": [{ "condition": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 2515, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [{ "id": 2508, "name": "rounding", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2495, "src": "12025:8:13", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" }], "id": 2507, "name": "unsignedRoundsUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2832, "src": "12008:16:13", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1790_$returns$_t_bool_$", "typeString": "function (enum Math.Rounding) pure returns (bool)" } }, "id": 2509, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "12008:26:13", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2514, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2512, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "hexValue": "31", "id": 2510, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12038:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "nodeType": "BinaryOperation", "operator": "<<", "rightExpression": { "id": 2511, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2501, "src": "12043:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "12038:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "id": 2513, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2492, "src": "12052:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "12038:19:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "12008:49:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseExpression": { "hexValue": "30", "id": 2517, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12064:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "id": 2518, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "12008:57:13", "trueExpression": { "hexValue": "31", "id": 2516, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12060:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }], "id": 2519, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "12007:59:13", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }, "src": "11998:68:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 2499, "id": 2521, "nodeType": "Return", "src": "11991:75:13" }] }] }, "documentation": { "id": 2490, "nodeType": "StructuredDocumentation", "src": "11688:142:13", "text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0." }, "id": 2524, "implemented": true, "kind": "function", "modifiers": [], "name": "log2", "nameLocation": "11844:4:13", "nodeType": "FunctionDefinition", "parameters": { "id": 2496, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2492, "mutability": "mutable", "name": "value", "nameLocation": "11857:5:13", "nodeType": "VariableDeclaration", "scope": 2524, "src": "11849:13:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2491, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11849:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 2495, "mutability": "mutable", "name": "rounding", "nameLocation": "11873:8:13", "nodeType": "VariableDeclaration", "scope": 2524, "src": "11864:17:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" }, "typeName": { "id": 2494, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 2493, "name": "Rounding", "nameLocations": ["11864:8:13"], "nodeType": "IdentifierPath", "referencedDeclaration": 1790, "src": "11864:8:13" }, "referencedDeclaration": 1790, "src": "11864:8:13", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" } }, "visibility": "internal" }], "src": "11848:34:13" }, "returnParameters": { "id": 2499, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2498, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2524, "src": "11906:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2497, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11906:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "11905:9:13" }, "scope": 2833, "src": "11835:248:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2652, "nodeType": "Block", "src": "12276:854:13", "statements": [{ "assignments": [2533], "declarations": [{ "constant": false, "id": 2533, "mutability": "mutable", "name": "result", "nameLocation": "12294:6:13", "nodeType": "VariableDeclaration", "scope": 2652, "src": "12286:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2532, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12286:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 2535, "initialValue": { "hexValue": "30", "id": 2534, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12303:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "12286:18:13" }, { "id": 2649, "nodeType": "UncheckedBlock", "src": "12314:787:13", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2540, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2536, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2527, "src": "12342:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": { "commonType": { "typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1", "typeString": "int_const 1000...(57 digits omitted)...0000" }, "id": 2539, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": { "hexValue": "3130", "id": 2537, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12351:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "value": "10" }, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": { "hexValue": "3634", "id": 2538, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12357:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_64_by_1", "typeString": "int_const 64" }, "value": "64" }, "src": "12351:8:13", "typeDescriptions": { "typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1", "typeString": "int_const 1000...(57 digits omitted)...0000" } }, "src": "12342:17:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2552, "nodeType": "IfStatement", "src": "12338:103:13", "trueBody": { "id": 2551, "nodeType": "Block", "src": "12361:80:13", "statements": [{ "expression": { "id": 2545, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2541, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2527, "src": "12379:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "/=", "rightHandSide": { "commonType": { "typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1", "typeString": "int_const 1000...(57 digits omitted)...0000" }, "id": 2544, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": { "hexValue": "3130", "id": 2542, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12388:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "value": "10" }, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": { "hexValue": "3634", "id": 2543, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12394:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_64_by_1", "typeString": "int_const 64" }, "value": "64" }, "src": "12388:8:13", "typeDescriptions": { "typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1", "typeString": "int_const 1000...(57 digits omitted)...0000" } }, "src": "12379:17:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2546, "nodeType": "ExpressionStatement", "src": "12379:17:13" }, { "expression": { "id": 2549, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2547, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2533, "src": "12414:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "3634", "id": 2548, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12424:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_64_by_1", "typeString": "int_const 64" }, "value": "64" }, "src": "12414:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2550, "nodeType": "ExpressionStatement", "src": "12414:12:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2557, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2553, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2527, "src": "12458:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": { "commonType": { "typeIdentifier": "t_rational_100000000000000000000000000000000_by_1", "typeString": "int_const 1000...(25 digits omitted)...0000" }, "id": 2556, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": { "hexValue": "3130", "id": 2554, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12467:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "value": "10" }, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": { "hexValue": "3332", "id": 2555, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12473:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_32_by_1", "typeString": "int_const 32" }, "value": "32" }, "src": "12467:8:13", "typeDescriptions": { "typeIdentifier": "t_rational_100000000000000000000000000000000_by_1", "typeString": "int_const 1000...(25 digits omitted)...0000" } }, "src": "12458:17:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2569, "nodeType": "IfStatement", "src": "12454:103:13", "trueBody": { "id": 2568, "nodeType": "Block", "src": "12477:80:13", "statements": [{ "expression": { "id": 2562, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2558, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2527, "src": "12495:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "/=", "rightHandSide": { "commonType": { "typeIdentifier": "t_rational_100000000000000000000000000000000_by_1", "typeString": "int_const 1000...(25 digits omitted)...0000" }, "id": 2561, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": { "hexValue": "3130", "id": 2559, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12504:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "value": "10" }, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": { "hexValue": "3332", "id": 2560, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12510:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_32_by_1", "typeString": "int_const 32" }, "value": "32" }, "src": "12504:8:13", "typeDescriptions": { "typeIdentifier": "t_rational_100000000000000000000000000000000_by_1", "typeString": "int_const 1000...(25 digits omitted)...0000" } }, "src": "12495:17:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2563, "nodeType": "ExpressionStatement", "src": "12495:17:13" }, { "expression": { "id": 2566, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2564, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2533, "src": "12530:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "3332", "id": 2565, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12540:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_32_by_1", "typeString": "int_const 32" }, "value": "32" }, "src": "12530:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2567, "nodeType": "ExpressionStatement", "src": "12530:12:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2574, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2570, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2527, "src": "12574:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": { "commonType": { "typeIdentifier": "t_rational_10000000000000000_by_1", "typeString": "int_const 10000000000000000" }, "id": 2573, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": { "hexValue": "3130", "id": 2571, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12583:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "value": "10" }, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": { "hexValue": "3136", "id": 2572, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12589:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_16_by_1", "typeString": "int_const 16" }, "value": "16" }, "src": "12583:8:13", "typeDescriptions": { "typeIdentifier": "t_rational_10000000000000000_by_1", "typeString": "int_const 10000000000000000" } }, "src": "12574:17:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2586, "nodeType": "IfStatement", "src": "12570:103:13", "trueBody": { "id": 2585, "nodeType": "Block", "src": "12593:80:13", "statements": [{ "expression": { "id": 2579, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2575, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2527, "src": "12611:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "/=", "rightHandSide": { "commonType": { "typeIdentifier": "t_rational_10000000000000000_by_1", "typeString": "int_const 10000000000000000" }, "id": 2578, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": { "hexValue": "3130", "id": 2576, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12620:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "value": "10" }, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": { "hexValue": "3136", "id": 2577, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12626:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_16_by_1", "typeString": "int_const 16" }, "value": "16" }, "src": "12620:8:13", "typeDescriptions": { "typeIdentifier": "t_rational_10000000000000000_by_1", "typeString": "int_const 10000000000000000" } }, "src": "12611:17:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2580, "nodeType": "ExpressionStatement", "src": "12611:17:13" }, { "expression": { "id": 2583, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2581, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2533, "src": "12646:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "3136", "id": 2582, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12656:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_16_by_1", "typeString": "int_const 16" }, "value": "16" }, "src": "12646:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2584, "nodeType": "ExpressionStatement", "src": "12646:12:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2591, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2587, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2527, "src": "12690:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": { "commonType": { "typeIdentifier": "t_rational_100000000_by_1", "typeString": "int_const 100000000" }, "id": 2590, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": { "hexValue": "3130", "id": 2588, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12699:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "value": "10" }, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": { "hexValue": "38", "id": 2589, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12705:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" }, "value": "8" }, "src": "12699:7:13", "typeDescriptions": { "typeIdentifier": "t_rational_100000000_by_1", "typeString": "int_const 100000000" } }, "src": "12690:16:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2603, "nodeType": "IfStatement", "src": "12686:100:13", "trueBody": { "id": 2602, "nodeType": "Block", "src": "12708:78:13", "statements": [{ "expression": { "id": 2596, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2592, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2527, "src": "12726:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "/=", "rightHandSide": { "commonType": { "typeIdentifier": "t_rational_100000000_by_1", "typeString": "int_const 100000000" }, "id": 2595, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": { "hexValue": "3130", "id": 2593, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12735:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "value": "10" }, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": { "hexValue": "38", "id": 2594, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12741:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" }, "value": "8" }, "src": "12735:7:13", "typeDescriptions": { "typeIdentifier": "t_rational_100000000_by_1", "typeString": "int_const 100000000" } }, "src": "12726:16:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2597, "nodeType": "ExpressionStatement", "src": "12726:16:13" }, { "expression": { "id": 2600, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2598, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2533, "src": "12760:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "38", "id": 2599, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12770:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" }, "value": "8" }, "src": "12760:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2601, "nodeType": "ExpressionStatement", "src": "12760:11:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2608, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2604, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2527, "src": "12803:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": { "commonType": { "typeIdentifier": "t_rational_10000_by_1", "typeString": "int_const 10000" }, "id": 2607, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": { "hexValue": "3130", "id": 2605, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12812:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "value": "10" }, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": { "hexValue": "34", "id": 2606, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12818:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_4_by_1", "typeString": "int_const 4" }, "value": "4" }, "src": "12812:7:13", "typeDescriptions": { "typeIdentifier": "t_rational_10000_by_1", "typeString": "int_const 10000" } }, "src": "12803:16:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2620, "nodeType": "IfStatement", "src": "12799:100:13", "trueBody": { "id": 2619, "nodeType": "Block", "src": "12821:78:13", "statements": [{ "expression": { "id": 2613, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2609, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2527, "src": "12839:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "/=", "rightHandSide": { "commonType": { "typeIdentifier": "t_rational_10000_by_1", "typeString": "int_const 10000" }, "id": 2612, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": { "hexValue": "3130", "id": 2610, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12848:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "value": "10" }, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": { "hexValue": "34", "id": 2611, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12854:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_4_by_1", "typeString": "int_const 4" }, "value": "4" }, "src": "12848:7:13", "typeDescriptions": { "typeIdentifier": "t_rational_10000_by_1", "typeString": "int_const 10000" } }, "src": "12839:16:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2614, "nodeType": "ExpressionStatement", "src": "12839:16:13" }, { "expression": { "id": 2617, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2615, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2533, "src": "12873:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "34", "id": 2616, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12883:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_4_by_1", "typeString": "int_const 4" }, "value": "4" }, "src": "12873:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2618, "nodeType": "ExpressionStatement", "src": "12873:11:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2625, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2621, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2527, "src": "12916:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": { "commonType": { "typeIdentifier": "t_rational_100_by_1", "typeString": "int_const 100" }, "id": 2624, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": { "hexValue": "3130", "id": 2622, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12925:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "value": "10" }, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": { "hexValue": "32", "id": 2623, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12931:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "src": "12925:7:13", "typeDescriptions": { "typeIdentifier": "t_rational_100_by_1", "typeString": "int_const 100" } }, "src": "12916:16:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2637, "nodeType": "IfStatement", "src": "12912:100:13", "trueBody": { "id": 2636, "nodeType": "Block", "src": "12934:78:13", "statements": [{ "expression": { "id": 2630, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2626, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2527, "src": "12952:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "/=", "rightHandSide": { "commonType": { "typeIdentifier": "t_rational_100_by_1", "typeString": "int_const 100" }, "id": 2629, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": { "hexValue": "3130", "id": 2627, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12961:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "value": "10" }, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": { "hexValue": "32", "id": 2628, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12967:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "src": "12961:7:13", "typeDescriptions": { "typeIdentifier": "t_rational_100_by_1", "typeString": "int_const 100" } }, "src": "12952:16:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2631, "nodeType": "ExpressionStatement", "src": "12952:16:13" }, { "expression": { "id": 2634, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2632, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2533, "src": "12986:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "32", "id": 2633, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12996:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "src": "12986:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2635, "nodeType": "ExpressionStatement", "src": "12986:11:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2642, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2638, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2527, "src": "13029:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": { "commonType": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "id": 2641, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": { "hexValue": "3130", "id": 2639, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13038:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "value": "10" }, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": { "hexValue": "31", "id": 2640, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13044:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "13038:7:13", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" } }, "src": "13029:16:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2648, "nodeType": "IfStatement", "src": "13025:66:13", "trueBody": { "id": 2647, "nodeType": "Block", "src": "13047:44:13", "statements": [{ "expression": { "id": 2645, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2643, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2533, "src": "13065:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "31", "id": 2644, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13075:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "13065:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2646, "nodeType": "ExpressionStatement", "src": "13065:11:13" }] } }] }, { "expression": { "id": 2650, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2533, "src": "13117:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 2531, "id": 2651, "nodeType": "Return", "src": "13110:13:13" }] }, "documentation": { "id": 2525, "nodeType": "StructuredDocumentation", "src": "12089:120:13", "text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0." }, "id": 2653, "implemented": true, "kind": "function", "modifiers": [], "name": "log10", "nameLocation": "12223:5:13", "nodeType": "FunctionDefinition", "parameters": { "id": 2528, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2527, "mutability": "mutable", "name": "value", "nameLocation": "12237:5:13", "nodeType": "VariableDeclaration", "scope": 2653, "src": "12229:13:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2526, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12229:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "12228:15:13" }, "returnParameters": { "id": 2531, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2530, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2653, "src": "12267:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2529, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12267:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "12266:9:13" }, "scope": 2833, "src": "12214:916:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2687, "nodeType": "Block", "src": "13365:170:13", "statements": [{ "id": 2686, "nodeType": "UncheckedBlock", "src": "13375:154:13", "statements": [{ "assignments": [2665], "declarations": [{ "constant": false, "id": 2665, "mutability": "mutable", "name": "result", "nameLocation": "13407:6:13", "nodeType": "VariableDeclaration", "scope": 2686, "src": "13399:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2664, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13399:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 2669, "initialValue": { "arguments": [{ "id": 2667, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2656, "src": "13422:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 2666, "name": "log10", "nodeType": "Identifier", "overloadedDeclarations": [2653, 2688], "referencedDeclaration": 2653, "src": "13416:5:13", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)" } }, "id": 2668, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13416:12:13", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "13399:29:13" }, { "expression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2684, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2670, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2665, "src": "13449:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "components": [{ "condition": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 2679, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [{ "id": 2672, "name": "rounding", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2659, "src": "13476:8:13", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" }], "id": 2671, "name": "unsignedRoundsUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2832, "src": "13459:16:13", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1790_$returns$_t_bool_$", "typeString": "function (enum Math.Rounding) pure returns (bool)" } }, "id": 2673, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13459:26:13", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2678, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2676, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "hexValue": "3130", "id": 2674, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13489:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" }, "value": "10" }, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": { "id": 2675, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2665, "src": "13495:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "13489:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "id": 2677, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2656, "src": "13504:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "13489:20:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "13459:50:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseExpression": { "hexValue": "30", "id": 2681, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13516:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "id": 2682, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "13459:58:13", "trueExpression": { "hexValue": "31", "id": 2680, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13512:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }], "id": 2683, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "13458:60:13", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }, "src": "13449:69:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 2663, "id": 2685, "nodeType": "Return", "src": "13442:76:13" }] }] }, "documentation": { "id": 2654, "nodeType": "StructuredDocumentation", "src": "13136:143:13", "text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0." }, "id": 2688, "implemented": true, "kind": "function", "modifiers": [], "name": "log10", "nameLocation": "13293:5:13", "nodeType": "FunctionDefinition", "parameters": { "id": 2660, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2656, "mutability": "mutable", "name": "value", "nameLocation": "13307:5:13", "nodeType": "VariableDeclaration", "scope": 2688, "src": "13299:13:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2655, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13299:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 2659, "mutability": "mutable", "name": "rounding", "nameLocation": "13323:8:13", "nodeType": "VariableDeclaration", "scope": 2688, "src": "13314:17:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" }, "typeName": { "id": 2658, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 2657, "name": "Rounding", "nameLocations": ["13314:8:13"], "nodeType": "IdentifierPath", "referencedDeclaration": 1790, "src": "13314:8:13" }, "referencedDeclaration": 1790, "src": "13314:8:13", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" } }, "visibility": "internal" }], "src": "13298:34:13" }, "returnParameters": { "id": 2663, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2662, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2688, "src": "13356:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2661, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13356:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "13355:9:13" }, "scope": 2833, "src": "13284:251:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2774, "nodeType": "Block", "src": "13855:600:13", "statements": [{ "assignments": [2697], "declarations": [{ "constant": false, "id": 2697, "mutability": "mutable", "name": "result", "nameLocation": "13873:6:13", "nodeType": "VariableDeclaration", "scope": 2774, "src": "13865:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2696, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13865:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 2699, "initialValue": { "hexValue": "30", "id": 2698, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13882:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "13865:18:13" }, { "id": 2771, "nodeType": "UncheckedBlock", "src": "13893:533:13", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2704, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2702, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2700, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2691, "src": "13921:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "313238", "id": 2701, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13930:3:13", "typeDescriptions": { "typeIdentifier": "t_rational_128_by_1", "typeString": "int_const 128" }, "value": "128" }, "src": "13921:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 2703, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13936:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "13921:16:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2714, "nodeType": "IfStatement", "src": "13917:98:13", "trueBody": { "id": 2713, "nodeType": "Block", "src": "13939:76:13", "statements": [{ "expression": { "id": 2707, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2705, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2691, "src": "13957:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": ">>=", "rightHandSide": { "hexValue": "313238", "id": 2706, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13967:3:13", "typeDescriptions": { "typeIdentifier": "t_rational_128_by_1", "typeString": "int_const 128" }, "value": "128" }, "src": "13957:13:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2708, "nodeType": "ExpressionStatement", "src": "13957:13:13" }, { "expression": { "id": 2711, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2709, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2697, "src": "13988:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "3136", "id": 2710, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13998:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_16_by_1", "typeString": "int_const 16" }, "value": "16" }, "src": "13988:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2712, "nodeType": "ExpressionStatement", "src": "13988:12:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2719, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2717, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2715, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2691, "src": "14032:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "3634", "id": 2716, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14041:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_64_by_1", "typeString": "int_const 64" }, "value": "64" }, "src": "14032:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 2718, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14046:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "14032:15:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2729, "nodeType": "IfStatement", "src": "14028:95:13", "trueBody": { "id": 2728, "nodeType": "Block", "src": "14049:74:13", "statements": [{ "expression": { "id": 2722, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2720, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2691, "src": "14067:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": ">>=", "rightHandSide": { "hexValue": "3634", "id": 2721, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14077:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_64_by_1", "typeString": "int_const 64" }, "value": "64" }, "src": "14067:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2723, "nodeType": "ExpressionStatement", "src": "14067:12:13" }, { "expression": { "id": 2726, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2724, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2697, "src": "14097:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "38", "id": 2725, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14107:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" }, "value": "8" }, "src": "14097:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2727, "nodeType": "ExpressionStatement", "src": "14097:11:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2734, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2732, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2730, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2691, "src": "14140:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "3332", "id": 2731, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14149:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_32_by_1", "typeString": "int_const 32" }, "value": "32" }, "src": "14140:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 2733, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14154:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "14140:15:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2744, "nodeType": "IfStatement", "src": "14136:95:13", "trueBody": { "id": 2743, "nodeType": "Block", "src": "14157:74:13", "statements": [{ "expression": { "id": 2737, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2735, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2691, "src": "14175:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": ">>=", "rightHandSide": { "hexValue": "3332", "id": 2736, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14185:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_32_by_1", "typeString": "int_const 32" }, "value": "32" }, "src": "14175:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2738, "nodeType": "ExpressionStatement", "src": "14175:12:13" }, { "expression": { "id": 2741, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2739, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2697, "src": "14205:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "34", "id": 2740, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14215:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_4_by_1", "typeString": "int_const 4" }, "value": "4" }, "src": "14205:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2742, "nodeType": "ExpressionStatement", "src": "14205:11:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2749, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2747, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2745, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2691, "src": "14248:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "3136", "id": 2746, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14257:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_16_by_1", "typeString": "int_const 16" }, "value": "16" }, "src": "14248:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 2748, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14262:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "14248:15:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2759, "nodeType": "IfStatement", "src": "14244:95:13", "trueBody": { "id": 2758, "nodeType": "Block", "src": "14265:74:13", "statements": [{ "expression": { "id": 2752, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2750, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2691, "src": "14283:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": ">>=", "rightHandSide": { "hexValue": "3136", "id": 2751, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14293:2:13", "typeDescriptions": { "typeIdentifier": "t_rational_16_by_1", "typeString": "int_const 16" }, "value": "16" }, "src": "14283:12:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2753, "nodeType": "ExpressionStatement", "src": "14283:12:13" }, { "expression": { "id": 2756, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2754, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2697, "src": "14313:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "32", "id": 2755, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14323:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "src": "14313:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2757, "nodeType": "ExpressionStatement", "src": "14313:11:13" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2764, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2762, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2760, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2691, "src": "14356:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "38", "id": 2761, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14365:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" }, "value": "8" }, "src": "14356:10:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 2763, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14369:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "14356:14:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 2770, "nodeType": "IfStatement", "src": "14352:64:13", "trueBody": { "id": 2769, "nodeType": "Block", "src": "14372:44:13", "statements": [{ "expression": { "id": 2767, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2765, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2697, "src": "14390:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "31", "id": 2766, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14400:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "14390:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2768, "nodeType": "ExpressionStatement", "src": "14390:11:13" }] } }] }, { "expression": { "id": 2772, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2697, "src": "14442:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 2695, "id": 2773, "nodeType": "Return", "src": "14435:13:13" }] }, "documentation": { "id": 2689, "nodeType": "StructuredDocumentation", "src": "13541:246:13", "text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string." }, "id": 2775, "implemented": true, "kind": "function", "modifiers": [], "name": "log256", "nameLocation": "13801:6:13", "nodeType": "FunctionDefinition", "parameters": { "id": 2692, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2691, "mutability": "mutable", "name": "value", "nameLocation": "13816:5:13", "nodeType": "VariableDeclaration", "scope": 2775, "src": "13808:13:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2690, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13808:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "13807:15:13" }, "returnParameters": { "id": 2695, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2694, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2775, "src": "13846:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2693, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13846:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "13845:9:13" }, "scope": 2833, "src": "13792:663:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2812, "nodeType": "Block", "src": "14692:177:13", "statements": [{ "id": 2811, "nodeType": "UncheckedBlock", "src": "14702:161:13", "statements": [{ "assignments": [2787], "declarations": [{ "constant": false, "id": 2787, "mutability": "mutable", "name": "result", "nameLocation": "14734:6:13", "nodeType": "VariableDeclaration", "scope": 2811, "src": "14726:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2786, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14726:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 2791, "initialValue": { "arguments": [{ "id": 2789, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2778, "src": "14750:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 2788, "name": "log256", "nodeType": "Identifier", "overloadedDeclarations": [2775, 2813], "referencedDeclaration": 2775, "src": "14743:6:13", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)" } }, "id": 2790, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "14743:13:13", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "14726:30:13" }, { "expression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2809, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2792, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2787, "src": "14777:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "components": [{ "condition": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 2804, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [{ "id": 2794, "name": "rounding", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2781, "src": "14804:8:13", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" }], "id": 2793, "name": "unsignedRoundsUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2832, "src": "14787:16:13", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1790_$returns$_t_bool_$", "typeString": "function (enum Math.Rounding) pure returns (bool)" } }, "id": 2795, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "14787:26:13", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2803, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2801, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "hexValue": "31", "id": 2796, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14817:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "nodeType": "BinaryOperation", "operator": "<<", "rightExpression": { "components": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2799, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2797, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2787, "src": "14823:6:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<<", "rightExpression": { "hexValue": "33", "id": 2798, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14833:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3" }, "value": "3" }, "src": "14823:11:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 2800, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "14822:13:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "14817:18:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "id": 2802, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2778, "src": "14838:5:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "14817:26:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "14787:56:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseExpression": { "hexValue": "30", "id": 2806, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14850:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "id": 2807, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "14787:64:13", "trueExpression": { "hexValue": "31", "id": 2805, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14846:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }], "id": 2808, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "14786:66:13", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }, "src": "14777:75:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 2785, "id": 2810, "nodeType": "Return", "src": "14770:82:13" }] }] }, "documentation": { "id": 2776, "nodeType": "StructuredDocumentation", "src": "14461:144:13", "text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0." }, "id": 2813, "implemented": true, "kind": "function", "modifiers": [], "name": "log256", "nameLocation": "14619:6:13", "nodeType": "FunctionDefinition", "parameters": { "id": 2782, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2778, "mutability": "mutable", "name": "value", "nameLocation": "14634:5:13", "nodeType": "VariableDeclaration", "scope": 2813, "src": "14626:13:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2777, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14626:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 2781, "mutability": "mutable", "name": "rounding", "nameLocation": "14650:8:13", "nodeType": "VariableDeclaration", "scope": 2813, "src": "14641:17:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" }, "typeName": { "id": 2780, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 2779, "name": "Rounding", "nameLocations": ["14641:8:13"], "nodeType": "IdentifierPath", "referencedDeclaration": 1790, "src": "14641:8:13" }, "referencedDeclaration": 1790, "src": "14641:8:13", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" } }, "visibility": "internal" }], "src": "14625:34:13" }, "returnParameters": { "id": 2785, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2784, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2813, "src": "14683:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2783, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14683:7:13", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "14682:9:13" }, "scope": 2833, "src": "14610:259:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2831, "nodeType": "Block", "src": "15067:48:13", "statements": [{ "expression": { "commonType": { "typeIdentifier": "t_uint8", "typeString": "uint8" }, "id": 2829, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint8", "typeString": "uint8" }, "id": 2827, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [{ "id": 2824, "name": "rounding", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2817, "src": "15090:8:13", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" }], "id": 2823, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15084:5:13", "typeDescriptions": { "typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)" }, "typeName": { "id": 2822, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "15084:5:13", "typeDescriptions": {} } }, "id": 2825, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "15084:15:13", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": { "hexValue": "32", "id": 2826, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15102:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "src": "15084:19:13", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "hexValue": "31", "id": 2828, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15107:1:13", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "15084:24:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "functionReturnParameters": 2821, "id": 2830, "nodeType": "Return", "src": "15077:31:13" }] }, "documentation": { "id": 2814, "nodeType": "StructuredDocumentation", "src": "14875:113:13", "text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers." }, "id": 2832, "implemented": true, "kind": "function", "modifiers": [], "name": "unsignedRoundsUp", "nameLocation": "15002:16:13", "nodeType": "FunctionDefinition", "parameters": { "id": 2818, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2817, "mutability": "mutable", "name": "rounding", "nameLocation": "15028:8:13", "nodeType": "VariableDeclaration", "scope": 2832, "src": "15019:17:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" }, "typeName": { "id": 2816, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 2815, "name": "Rounding", "nameLocations": ["15019:8:13"], "nodeType": "IdentifierPath", "referencedDeclaration": 1790, "src": "15019:8:13" }, "referencedDeclaration": 1790, "src": "15019:8:13", "typeDescriptions": { "typeIdentifier": "t_enum$_Rounding_$1790", "typeString": "enum Math.Rounding" } }, "visibility": "internal" }], "src": "15018:19:13" }, "returnParameters": { "id": 2821, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2820, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2832, "src": "15061:4:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 2819, "name": "bool", "nodeType": "ElementaryTypeName", "src": "15061:4:13", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "15060:6:13" }, "scope": 2833, "src": "14993:122:13", "stateMutability": "pure", "virtual": false, "visibility": "internal" }], "scope": 2834, "src": "203:14914:13", "usedErrors": [1785], "usedEvents": [] }], "src": "103:15015:13" }, "id": 13 }, "@openzeppelin/contracts/utils/math/SignedMath.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol", "exportedSymbols": { "SignedMath": [2938] }, "id": 2939, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 2835, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "109:24:14" }, { "abstract": false, "baseContracts": [], "canonicalName": "SignedMath", "contractDependencies": [], "contractKind": "library", "documentation": { "id": 2836, "nodeType": "StructuredDocumentation", "src": "135:80:14", "text": " @dev Standard signed math utilities missing in the Solidity language." }, "fullyImplemented": true, "id": 2938, "linearizedBaseContracts": [2938], "name": "SignedMath", "nameLocation": "224:10:14", "nodeType": "ContractDefinition", "nodes": [{ "body": { "id": 2853, "nodeType": "Block", "src": "376:37:14", "statements": [{ "expression": { "condition": { "commonType": { "typeIdentifier": "t_int256", "typeString": "int256" }, "id": 2848, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2846, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2839, "src": "393:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "id": 2847, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2841, "src": "397:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "src": "393:5:14", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseExpression": { "id": 2850, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2841, "src": "405:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "id": 2851, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "393:13:14", "trueExpression": { "id": 2849, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2839, "src": "401:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "functionReturnParameters": 2845, "id": 2852, "nodeType": "Return", "src": "386:20:14" }] }, "documentation": { "id": 2837, "nodeType": "StructuredDocumentation", "src": "241:66:14", "text": " @dev Returns the largest of two signed numbers." }, "id": 2854, "implemented": true, "kind": "function", "modifiers": [], "name": "max", "nameLocation": "321:3:14", "nodeType": "FunctionDefinition", "parameters": { "id": 2842, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2839, "mutability": "mutable", "name": "a", "nameLocation": "332:1:14", "nodeType": "VariableDeclaration", "scope": 2854, "src": "325:8:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" }, "typeName": { "id": 2838, "name": "int256", "nodeType": "ElementaryTypeName", "src": "325:6:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "visibility": "internal" }, { "constant": false, "id": 2841, "mutability": "mutable", "name": "b", "nameLocation": "342:1:14", "nodeType": "VariableDeclaration", "scope": 2854, "src": "335:8:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" }, "typeName": { "id": 2840, "name": "int256", "nodeType": "ElementaryTypeName", "src": "335:6:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "visibility": "internal" }], "src": "324:20:14" }, "returnParameters": { "id": 2845, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2844, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2854, "src": "368:6:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" }, "typeName": { "id": 2843, "name": "int256", "nodeType": "ElementaryTypeName", "src": "368:6:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "visibility": "internal" }], "src": "367:8:14" }, "scope": 2938, "src": "312:101:14", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2871, "nodeType": "Block", "src": "555:37:14", "statements": [{ "expression": { "condition": { "commonType": { "typeIdentifier": "t_int256", "typeString": "int256" }, "id": 2866, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2864, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2857, "src": "572:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "id": 2865, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2859, "src": "576:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "src": "572:5:14", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseExpression": { "id": 2868, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2859, "src": "584:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "id": 2869, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "572:13:14", "trueExpression": { "id": 2867, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2857, "src": "580:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "functionReturnParameters": 2863, "id": 2870, "nodeType": "Return", "src": "565:20:14" }] }, "documentation": { "id": 2855, "nodeType": "StructuredDocumentation", "src": "419:67:14", "text": " @dev Returns the smallest of two signed numbers." }, "id": 2872, "implemented": true, "kind": "function", "modifiers": [], "name": "min", "nameLocation": "500:3:14", "nodeType": "FunctionDefinition", "parameters": { "id": 2860, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2857, "mutability": "mutable", "name": "a", "nameLocation": "511:1:14", "nodeType": "VariableDeclaration", "scope": 2872, "src": "504:8:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" }, "typeName": { "id": 2856, "name": "int256", "nodeType": "ElementaryTypeName", "src": "504:6:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "visibility": "internal" }, { "constant": false, "id": 2859, "mutability": "mutable", "name": "b", "nameLocation": "521:1:14", "nodeType": "VariableDeclaration", "scope": 2872, "src": "514:8:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" }, "typeName": { "id": 2858, "name": "int256", "nodeType": "ElementaryTypeName", "src": "514:6:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "visibility": "internal" }], "src": "503:20:14" }, "returnParameters": { "id": 2863, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2862, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2872, "src": "547:6:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" }, "typeName": { "id": 2861, "name": "int256", "nodeType": "ElementaryTypeName", "src": "547:6:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "visibility": "internal" }], "src": "546:8:14" }, "scope": 2938, "src": "491:101:14", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2915, "nodeType": "Block", "src": "797:162:14", "statements": [{ "assignments": [2883], "declarations": [{ "constant": false, "id": 2883, "mutability": "mutable", "name": "x", "nameLocation": "866:1:14", "nodeType": "VariableDeclaration", "scope": 2915, "src": "859:8:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" }, "typeName": { "id": 2882, "name": "int256", "nodeType": "ElementaryTypeName", "src": "859:6:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "visibility": "internal" }], "id": 2896, "initialValue": { "commonType": { "typeIdentifier": "t_int256", "typeString": "int256" }, "id": 2895, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "components": [{ "commonType": { "typeIdentifier": "t_int256", "typeString": "int256" }, "id": 2886, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2884, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2875, "src": "871:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "nodeType": "BinaryOperation", "operator": "&", "rightExpression": { "id": 2885, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2877, "src": "875:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "src": "871:5:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }], "id": 2887, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "870:7:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "components": [{ "commonType": { "typeIdentifier": "t_int256", "typeString": "int256" }, "id": 2893, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "components": [{ "commonType": { "typeIdentifier": "t_int256", "typeString": "int256" }, "id": 2890, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2888, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2875, "src": "882:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "nodeType": "BinaryOperation", "operator": "^", "rightExpression": { "id": 2889, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2877, "src": "886:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "src": "882:5:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }], "id": 2891, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "881:7:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "31", "id": 2892, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "892:1:14", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "881:12:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }], "id": 2894, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "880:14:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "src": "870:24:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "nodeType": "VariableDeclarationStatement", "src": "859:35:14" }, { "expression": { "commonType": { "typeIdentifier": "t_int256", "typeString": "int256" }, "id": 2913, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2897, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2883, "src": "911:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "components": [{ "commonType": { "typeIdentifier": "t_int256", "typeString": "int256" }, "id": 2911, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 2905, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [{ "id": 2902, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2883, "src": "931:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_int256", "typeString": "int256" }], "id": 2901, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "923:7:14", "typeDescriptions": { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }, "typeName": { "id": 2900, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "923:7:14", "typeDescriptions": {} } }, "id": 2903, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "923:10:14", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": { "hexValue": "323535", "id": 2904, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "937:3:14", "typeDescriptions": { "typeIdentifier": "t_rational_255_by_1", "typeString": "int_const 255" }, "value": "255" }, "src": "923:17:14", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 2899, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "916:6:14", "typeDescriptions": { "typeIdentifier": "t_type$_t_int256_$", "typeString": "type(int256)" }, "typeName": { "id": 2898, "name": "int256", "nodeType": "ElementaryTypeName", "src": "916:6:14", "typeDescriptions": {} } }, "id": 2906, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "916:25:14", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "nodeType": "BinaryOperation", "operator": "&", "rightExpression": { "components": [{ "commonType": { "typeIdentifier": "t_int256", "typeString": "int256" }, "id": 2909, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2907, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2875, "src": "945:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "nodeType": "BinaryOperation", "operator": "^", "rightExpression": { "id": 2908, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2877, "src": "949:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "src": "945:5:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }], "id": 2910, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "944:7:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "src": "916:35:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }], "id": 2912, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "915:37:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "src": "911:41:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "functionReturnParameters": 2881, "id": 2914, "nodeType": "Return", "src": "904:48:14" }] }, "documentation": { "id": 2873, "nodeType": "StructuredDocumentation", "src": "598:126:14", "text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero." }, "id": 2916, "implemented": true, "kind": "function", "modifiers": [], "name": "average", "nameLocation": "738:7:14", "nodeType": "FunctionDefinition", "parameters": { "id": 2878, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2875, "mutability": "mutable", "name": "a", "nameLocation": "753:1:14", "nodeType": "VariableDeclaration", "scope": 2916, "src": "746:8:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" }, "typeName": { "id": 2874, "name": "int256", "nodeType": "ElementaryTypeName", "src": "746:6:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "visibility": "internal" }, { "constant": false, "id": 2877, "mutability": "mutable", "name": "b", "nameLocation": "763:1:14", "nodeType": "VariableDeclaration", "scope": 2916, "src": "756:8:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" }, "typeName": { "id": 2876, "name": "int256", "nodeType": "ElementaryTypeName", "src": "756:6:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "visibility": "internal" }], "src": "745:20:14" }, "returnParameters": { "id": 2881, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2880, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2916, "src": "789:6:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" }, "typeName": { "id": 2879, "name": "int256", "nodeType": "ElementaryTypeName", "src": "789:6:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "visibility": "internal" }], "src": "788:8:14" }, "scope": 2938, "src": "729:230:14", "stateMutability": "pure", "virtual": false, "visibility": "internal" }, { "body": { "id": 2936, "nodeType": "Block", "src": "1103:158:14", "statements": [{ "id": 2935, "nodeType": "UncheckedBlock", "src": "1113:142:14", "statements": [{ "expression": { "arguments": [{ "condition": { "commonType": { "typeIdentifier": "t_int256", "typeString": "int256" }, "id": 2928, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 2926, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2919, "src": "1228:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": { "hexValue": "30", "id": 2927, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1233:1:14", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "1228:6:14", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseExpression": { "id": 2931, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "-", "prefix": true, "src": "1241:2:14", "subExpression": { "id": 2930, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2919, "src": "1242:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "id": 2932, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "1228:15:14", "trueExpression": { "id": 2929, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2919, "src": "1237:1:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_int256", "typeString": "int256" }], "id": 2925, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1220:7:14", "typeDescriptions": { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }, "typeName": { "id": 2924, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1220:7:14", "typeDescriptions": {} } }, "id": 2933, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1220:24:14", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 2923, "id": 2934, "nodeType": "Return", "src": "1213:31:14" }] }] }, "documentation": { "id": 2917, "nodeType": "StructuredDocumentation", "src": "965:78:14", "text": " @dev Returns the absolute unsigned value of a signed value." }, "id": 2937, "implemented": true, "kind": "function", "modifiers": [], "name": "abs", "nameLocation": "1057:3:14", "nodeType": "FunctionDefinition", "parameters": { "id": 2920, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2919, "mutability": "mutable", "name": "n", "nameLocation": "1068:1:14", "nodeType": "VariableDeclaration", "scope": 2937, "src": "1061:8:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" }, "typeName": { "id": 2918, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1061:6:14", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "visibility": "internal" }], "src": "1060:10:14" }, "returnParameters": { "id": 2923, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2922, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2937, "src": "1094:7:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2921, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1094:7:14", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "1093:9:14" }, "scope": 2938, "src": "1048:213:14", "stateMutability": "pure", "virtual": false, "visibility": "internal" }], "scope": 2939, "src": "216:1047:14", "usedErrors": [], "usedEvents": [] }], "src": "109:1155:14" }, "id": 14 }, "contracts/IndividualNFTs.sol": { "ast": { "absolutePath": "contracts/IndividualNFTs.sol", "exportedSymbols": { "Context": [1488], "ERC165": [1767], "ERC721": [1177], "ERC721URIStorage": [1438], "IERC165": [1779], "IERC4906": [27], "IERC721": [1294], "IERC721Errors": [121], "IERC721Metadata": [1466], "IERC721Receiver": [1312], "IndividualNFTs": [3000], "Strings": [1743] }, "id": 3001, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 2940, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "33:24:15" }, { "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol", "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol", "id": 2941, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 3001, "sourceUnit": 1178, "src": "61:57:15", "symbolAliases": [], "unitAlias": "" }, { "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol", "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol", "id": 2942, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 3001, "sourceUnit": 1439, "src": "120:78:15", "symbolAliases": [], "unitAlias": "" }, { "abstract": false, "baseContracts": [{ "baseName": { "id": 2943, "name": "ERC721URIStorage", "nameLocations": ["229:16:15"], "nodeType": "IdentifierPath", "referencedDeclaration": 1438, "src": "229:16:15" }, "id": 2944, "nodeType": "InheritanceSpecifier", "src": "229:16:15" }], "canonicalName": "IndividualNFTs", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 3000, "linearizedBaseContracts": [3000, 1438, 1177, 121, 1466, 27, 1294, 1767, 1779, 1488], "name": "IndividualNFTs", "nameLocation": "211:14:15", "nodeType": "ContractDefinition", "nodes": [{ "constant": false, "id": 2946, "mutability": "mutable", "name": "_tokenIds", "nameLocation": "267:9:15", "nodeType": "VariableDeclaration", "scope": 3000, "src": "251:25:15", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2945, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "251:7:15", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "private" }, { "constant": false, "id": 2948, "mutability": "mutable", "name": "marketplaceContract", "nameLocation": "289:19:15", "nodeType": "VariableDeclaration", "scope": 3000, "src": "281:27:15", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 2947, "name": "address", "nodeType": "ElementaryTypeName", "src": "281:7:15", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "anonymous": false, "eventSelector": "d9dc24857f317ed9abbbb42e920ede0104231eb1d3d70236a74887ffaf159868", "id": 2952, "name": "NFTMinted", "nameLocation": "319:9:15", "nodeType": "EventDefinition", "parameters": { "id": 2951, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2950, "indexed": false, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2952, "src": "329:7:15", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2949, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "329:7:15", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "328:9:15" }, "src": "313:25:15" }, { "body": { "id": 2965, "nodeType": "Block", "src": "426:55:15", "statements": [{ "expression": { "id": 2963, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 2961, "name": "marketplaceContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2948, "src": "433:19:15", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 2962, "name": "_marketplaceContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2954, "src": "455:20:15", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "433:42:15", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 2964, "nodeType": "ExpressionStatement", "src": "433:42:15" }] }, "id": 2966, "implemented": true, "kind": "constructor", "modifiers": [{ "arguments": [{ "hexValue": "426f726564205065747320596163687420436c7562", "id": 2957, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "393:23:15", "typeDescriptions": { "typeIdentifier": "t_stringliteral_25b00438d4f6c6bdf3b66a67adfbc8d677c96407a344772dee49a0b65f1467af", "typeString": "literal_string \"Bored Pets Yacht Club\"" }, "value": "Bored Pets Yacht Club" }, { "hexValue": "42505943", "id": 2958, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "418:6:15", "typeDescriptions": { "typeIdentifier": "t_stringliteral_d5165ada13e37d19f138f737ca73f960bf7ab267d36a310d5f20a266fbae03c4", "typeString": "literal_string \"BPYC\"" }, "value": "BPYC" }], "id": 2959, "kind": "baseConstructorSpecifier", "modifierName": { "id": 2956, "name": "ERC721", "nameLocations": ["386:6:15"], "nodeType": "IdentifierPath", "referencedDeclaration": 1177, "src": "386:6:15" }, "nodeType": "ModifierInvocation", "src": "386:39:15" }], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": { "id": 2955, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2954, "mutability": "mutable", "name": "_marketplaceContract", "nameLocation": "364:20:15", "nodeType": "VariableDeclaration", "scope": 2966, "src": "356:28:15", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 2953, "name": "address", "nodeType": "ElementaryTypeName", "src": "356:7:15", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "355:30:15" }, "returnParameters": { "id": 2960, "nodeType": "ParameterList", "parameters": [], "src": "426:0:15" }, "scope": 3000, "src": "344:137:15", "stateMutability": "nonpayable", "virtual": false, "visibility": "public" }, { "body": { "id": 2998, "nodeType": "Block", "src": "533:227:15", "statements": [{ "expression": { "id": 2972, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "540:11:15", "subExpression": { "id": 2971, "name": "_tokenIds", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2946, "src": "540:9:15", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 2973, "nodeType": "ExpressionStatement", "src": "540:11:15" }, { "assignments": [2975], "declarations": [{ "constant": false, "id": 2975, "mutability": "mutable", "name": "newTokenId", "nameLocation": "566:10:15", "nodeType": "VariableDeclaration", "scope": 2998, "src": "558:18:15", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 2974, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "558:7:15", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 2977, "initialValue": { "id": 2976, "name": "_tokenIds", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2946, "src": "579:9:15", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "558:30:15" }, { "expression": { "arguments": [{ "expression": { "id": 2979, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "605:3:15", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 2980, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "609:6:15", "memberName": "sender", "nodeType": "MemberAccess", "src": "605:10:15", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 2981, "name": "newTokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2975, "src": "617:10:15", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 2978, "name": "_safeMint", "nodeType": "Identifier", "overloadedDeclarations": [799, 825], "referencedDeclaration": 799, "src": "595:9:15", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)" } }, "id": 2982, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "595:33:15", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 2983, "nodeType": "ExpressionStatement", "src": "595:33:15" }, { "expression": { "arguments": [{ "id": 2985, "name": "newTokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2975, "src": "648:10:15", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 2986, "name": "_tokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2968, "src": "660:9:15", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }], "id": 2984, "name": "_setTokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1437, "src": "635:12:15", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$", "typeString": "function (uint256,string memory)" } }, "id": 2987, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "635:35:15", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 2988, "nodeType": "ExpressionStatement", "src": "635:35:15" }, { "expression": { "arguments": [{ "id": 2990, "name": "marketplaceContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2948, "src": "695:19:15", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "hexValue": "74727565", "id": 2991, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "716:4:15", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "true" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_bool", "typeString": "bool" }], "id": 2989, "name": "setApprovalForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "677:17:15", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$", "typeString": "function (address,bool)" } }, "id": 2992, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "677:44:15", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 2993, "nodeType": "ExpressionStatement", "src": "677:44:15" }, { "eventCall": { "arguments": [{ "id": 2995, "name": "newTokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2975, "src": "743:10:15", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 2994, "name": "NFTMinted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2952, "src": "733:9:15", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)" } }, "id": 2996, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "733:21:15", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 2997, "nodeType": "EmitStatement", "src": "728:26:15" }] }, "functionSelector": "d85d3d27", "id": 2999, "implemented": true, "kind": "function", "modifiers": [], "name": "mint", "nameLocation": "496:4:15", "nodeType": "FunctionDefinition", "parameters": { "id": 2969, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 2968, "mutability": "mutable", "name": "_tokenURI", "nameLocation": "515:9:15", "nodeType": "VariableDeclaration", "scope": 2999, "src": "501:23:15", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 2967, "name": "string", "nodeType": "ElementaryTypeName", "src": "501:6:15", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "500:25:15" }, "returnParameters": { "id": 2970, "nodeType": "ParameterList", "parameters": [], "src": "533:0:15" }, "scope": 3000, "src": "487:273:15", "stateMutability": "nonpayable", "virtual": false, "visibility": "public" }], "scope": 3001, "src": "202:561:15", "usedErrors": [79, 84, 93, 98, 103, 110, 115, 120], "usedEvents": [19, 26, 1193, 1202, 1211, 2952] }], "src": "33:730:15" }, "id": 15 }, "contracts/NFTMarketplace.sol": { "ast": { "absolutePath": "contracts/NFTMarketplace.sol", "exportedSymbols": { "Context": [1488], "ERC165": [1767], "ERC721": [1177], "IERC165": [1779], "IERC721": [1294], "IERC721Errors": [121], "IERC721Metadata": [1466], "IERC721Receiver": [1312], "NFTMarketplace": [3608], "ReentrancyGuard": [3642], "Strings": [1743] }, "id": 3609, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 3002, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "33:24:16" }, { "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol", "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol", "id": 3003, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 3609, "sourceUnit": 1178, "src": "61:57:16", "symbolAliases": [], "unitAlias": "" }, { "absolutePath": "contracts/ReentrancyGuard.sol", "file": "contracts/ReentrancyGuard.sol", "id": 3004, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 3609, "sourceUnit": 3643, "src": "120:39:16", "symbolAliases": [], "unitAlias": "" }, { "abstract": false, "baseContracts": [{ "baseName": { "id": 3005, "name": "ReentrancyGuard", "nameLocations": ["190:15:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3642, "src": "190:15:16" }, "id": 3006, "nodeType": "InheritanceSpecifier", "src": "190:15:16" }], "canonicalName": "NFTMarketplace", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 3608, "linearizedBaseContracts": [3608, 3642], "name": "NFTMarketplace", "nameLocation": "172:14:16", "nodeType": "ContractDefinition", "nodes": [{ "constant": false, "id": 3008, "mutability": "mutable", "name": "_nftsSold", "nameLocation": "229:9:16", "nodeType": "VariableDeclaration", "scope": 3608, "src": "213:25:16", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3007, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "213:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "private" }, { "constant": false, "id": 3010, "mutability": "mutable", "name": "_nftCount", "nameLocation": "261:9:16", "nodeType": "VariableDeclaration", "scope": 3608, "src": "245:25:16", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3009, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "245:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "private" }, { "constant": false, "functionSelector": "2b86ae38", "id": 3013, "mutability": "mutable", "name": "LISTING_FEE", "nameLocation": "292:11:16", "nodeType": "VariableDeclaration", "scope": 3608, "src": "277:41:16", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3011, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "277:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "value": { "hexValue": "302e30303031", "id": 3012, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "306:12:16", "subdenomination": "ether", "typeDescriptions": { "typeIdentifier": "t_rational_100000000000000_by_1", "typeString": "int_const 100000000000000" }, "value": "0.0001" }, "visibility": "public" }, { "constant": false, "id": 3015, "mutability": "mutable", "name": "_marketOwner", "nameLocation": "349:12:16", "nodeType": "VariableDeclaration", "scope": 3608, "src": "325:36:16", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" }, "typeName": { "id": 3014, "name": "address", "nodeType": "ElementaryTypeName", "src": "325:15:16", "stateMutability": "payable", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "visibility": "private" }, { "constant": false, "id": 3020, "mutability": "mutable", "name": "_idToNFT", "nameLocation": "402:8:16", "nodeType": "VariableDeclaration", "scope": 3608, "src": "370:40:16", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3033_storage_$", "typeString": "mapping(uint256 => struct NFTMarketplace.NFT)" }, "typeName": { "id": 3019, "keyName": "", "keyNameLocation": "-1:-1:-1", "keyType": { "id": 3016, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "378:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Mapping", "src": "370:23:16", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3033_storage_$", "typeString": "mapping(uint256 => struct NFTMarketplace.NFT)" }, "valueName": "", "valueNameLocation": "-1:-1:-1", "valueType": { "id": 3018, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 3017, "name": "NFT", "nameLocations": ["389:3:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3033, "src": "389:3:16" }, "referencedDeclaration": 3033, "src": "389:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT" } } }, "visibility": "private" }, { "canonicalName": "NFTMarketplace.NFT", "id": 3033, "members": [{ "constant": false, "id": 3022, "mutability": "mutable", "name": "nftContract", "nameLocation": "448:11:16", "nodeType": "VariableDeclaration", "scope": 3033, "src": "440:19:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 3021, "name": "address", "nodeType": "ElementaryTypeName", "src": "440:7:16", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 3024, "mutability": "mutable", "name": "tokenId", "nameLocation": "478:7:16", "nodeType": "VariableDeclaration", "scope": 3033, "src": "470:15:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3023, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "470:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 3026, "mutability": "mutable", "name": "seller", "nameLocation": "512:6:16", "nodeType": "VariableDeclaration", "scope": 3033, "src": "496:22:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" }, "typeName": { "id": 3025, "name": "address", "nodeType": "ElementaryTypeName", "src": "496:15:16", "stateMutability": "payable", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "visibility": "internal" }, { "constant": false, "id": 3028, "mutability": "mutable", "name": "owner", "nameLocation": "545:5:16", "nodeType": "VariableDeclaration", "scope": 3033, "src": "529:21:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" }, "typeName": { "id": 3027, "name": "address", "nodeType": "ElementaryTypeName", "src": "529:15:16", "stateMutability": "payable", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "visibility": "internal" }, { "constant": false, "id": 3030, "mutability": "mutable", "name": "price", "nameLocation": "569:5:16", "nodeType": "VariableDeclaration", "scope": 3033, "src": "561:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3029, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "561:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 3032, "mutability": "mutable", "name": "listed", "nameLocation": "590:6:16", "nodeType": "VariableDeclaration", "scope": 3033, "src": "585:11:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 3031, "name": "bool", "nodeType": "ElementaryTypeName", "src": "585:4:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "name": "NFT", "nameLocation": "425:3:16", "nodeType": "StructDefinition", "scope": 3608, "src": "418:186:16", "visibility": "public" }, { "anonymous": false, "eventSelector": "a0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d19", "id": 3045, "name": "NFTListed", "nameLocation": "618:9:16", "nodeType": "EventDefinition", "parameters": { "id": 3044, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 3035, "indexed": false, "mutability": "mutable", "name": "nftContract", "nameLocation": "646:11:16", "nodeType": "VariableDeclaration", "scope": 3045, "src": "638:19:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 3034, "name": "address", "nodeType": "ElementaryTypeName", "src": "638:7:16", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 3037, "indexed": false, "mutability": "mutable", "name": "tokenId", "nameLocation": "676:7:16", "nodeType": "VariableDeclaration", "scope": 3045, "src": "668:15:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3036, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "668:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 3039, "indexed": false, "mutability": "mutable", "name": "seller", "nameLocation": "702:6:16", "nodeType": "VariableDeclaration", "scope": 3045, "src": "694:14:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 3038, "name": "address", "nodeType": "ElementaryTypeName", "src": "694:7:16", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 3041, "indexed": false, "mutability": "mutable", "name": "owner", "nameLocation": "727:5:16", "nodeType": "VariableDeclaration", "scope": 3045, "src": "719:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 3040, "name": "address", "nodeType": "ElementaryTypeName", "src": "719:7:16", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 3043, "indexed": false, "mutability": "mutable", "name": "price", "nameLocation": "751:5:16", "nodeType": "VariableDeclaration", "scope": 3045, "src": "743:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3042, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "743:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "627:136:16" }, "src": "612:152:16" }, { "anonymous": false, "eventSelector": "16f1dbd97e6bf646d429ed186cce832f1f7fd9907814293b83181e9970ab7bd2", "id": 3057, "name": "NFTSold", "nameLocation": "776:7:16", "nodeType": "EventDefinition", "parameters": { "id": 3056, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 3047, "indexed": false, "mutability": "mutable", "name": "nftContract", "nameLocation": "802:11:16", "nodeType": "VariableDeclaration", "scope": 3057, "src": "794:19:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 3046, "name": "address", "nodeType": "ElementaryTypeName", "src": "794:7:16", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 3049, "indexed": false, "mutability": "mutable", "name": "tokenId", "nameLocation": "832:7:16", "nodeType": "VariableDeclaration", "scope": 3057, "src": "824:15:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3048, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "824:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 3051, "indexed": false, "mutability": "mutable", "name": "seller", "nameLocation": "858:6:16", "nodeType": "VariableDeclaration", "scope": 3057, "src": "850:14:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 3050, "name": "address", "nodeType": "ElementaryTypeName", "src": "850:7:16", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 3053, "indexed": false, "mutability": "mutable", "name": "owner", "nameLocation": "883:5:16", "nodeType": "VariableDeclaration", "scope": 3057, "src": "875:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 3052, "name": "address", "nodeType": "ElementaryTypeName", "src": "875:7:16", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 3055, "indexed": false, "mutability": "mutable", "name": "price", "nameLocation": "907:5:16", "nodeType": "VariableDeclaration", "scope": 3057, "src": "899:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3054, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "899:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "783:136:16" }, "src": "770:150:16" }, { "body": { "id": 3068, "nodeType": "Block", "src": "942:53:16", "statements": [{ "expression": { "id": 3066, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 3060, "name": "_marketOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3015, "src": "953:12:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "arguments": [{ "expression": { "id": 3063, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "976:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3064, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "980:6:16", "memberName": "sender", "nodeType": "MemberAccess", "src": "976:10:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 3062, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "968:8:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)" }, "typeName": { "id": 3061, "name": "address", "nodeType": "ElementaryTypeName", "src": "968:8:16", "stateMutability": "payable", "typeDescriptions": {} } }, "id": 3065, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "968:19:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "src": "953:34:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "id": 3067, "nodeType": "ExpressionStatement", "src": "953:34:16" }] }, "id": 3069, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": { "id": 3058, "nodeType": "ParameterList", "parameters": [], "src": "939:2:16" }, "returnParameters": { "id": 3059, "nodeType": "ParameterList", "parameters": [], "src": "942:0:16" }, "scope": 3608, "src": "928:67:16", "stateMutability": "nonpayable", "virtual": false, "visibility": "public" }, { "body": { "id": 3152, "nodeType": "Block", "src": "1144:596:16", "statements": [{ "expression": { "arguments": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3083, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3081, "name": "_price", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3075, "src": "1163:6:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 3082, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1172:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "1163:10:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, { "hexValue": "5072696365206d757374206265206174206c65617374203120776569", "id": 3084, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1175:30:16", "typeDescriptions": { "typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9", "typeString": "literal_string \"Price must be at least 1 wei\"" }, "value": "Price must be at least 1 wei" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }, { "typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9", "typeString": "literal_string \"Price must be at least 1 wei\"" }], "id": 3080, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1155:7:16", "typeDescriptions": { "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure" } }, "id": 3085, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1155:51:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 3086, "nodeType": "ExpressionStatement", "src": "1155:51:16" }, { "expression": { "arguments": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3091, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 3088, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1225:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3089, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1229:5:16", "memberName": "value", "nodeType": "MemberAccess", "src": "1225:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "id": 3090, "name": "LISTING_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3013, "src": "1238:11:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "1225:24:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, { "hexValue": "4e6f7420656e6f75676820657468657220666f72206c697374696e6720666565", "id": 3092, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1251:34:16", "typeDescriptions": { "typeIdentifier": "t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f", "typeString": "literal_string \"Not enough ether for listing fee\"" }, "value": "Not enough ether for listing fee" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }, { "typeIdentifier": "t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f", "typeString": "literal_string \"Not enough ether for listing fee\"" }], "id": 3087, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1217:7:16", "typeDescriptions": { "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure" } }, "id": 3093, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1217:69:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 3094, "nodeType": "ExpressionStatement", "src": "1217:69:16" }, { "expression": { "arguments": [{ "expression": { "id": 3099, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1334:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3100, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1338:6:16", "memberName": "sender", "nodeType": "MemberAccess", "src": "1334:10:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "arguments": [{ "id": 3103, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "1354:4:16", "typeDescriptions": { "typeIdentifier": "t_contract$_NFTMarketplace_$3608", "typeString": "contract NFTMarketplace" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_contract$_NFTMarketplace_$3608", "typeString": "contract NFTMarketplace" }], "id": 3102, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1346:7:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 3101, "name": "address", "nodeType": "ElementaryTypeName", "src": "1346:7:16", "typeDescriptions": {} } }, "id": 3104, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1346:13:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 3105, "name": "_tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3073, "src": "1361:8:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "arguments": [{ "id": 3096, "name": "_nftContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3071, "src": "1307:12:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 3095, "name": "IERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1294, "src": "1299:7:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IERC721_$1294_$", "typeString": "type(contract IERC721)" } }, "id": 3097, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1299:21:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_contract$_IERC721_$1294", "typeString": "contract IERC721" } }, "id": 3098, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1321:12:16", "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 1259, "src": "1299:34:16", "typeDescriptions": { "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256) external" } }, "id": 3106, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1299:71:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 3107, "nodeType": "ExpressionStatement", "src": "1299:71:16" }, { "expression": { "arguments": [{ "id": 3111, "name": "LISTING_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3013, "src": "1403:11:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 3108, "name": "_marketOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3015, "src": "1381:12:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "id": 3110, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1394:8:16", "memberName": "transfer", "nodeType": "MemberAccess", "src": "1381:21:16", "typeDescriptions": { "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)" } }, "id": 3112, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1381:34:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 3113, "nodeType": "ExpressionStatement", "src": "1381:34:16" }, { "expression": { "id": 3115, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "1426:11:16", "subExpression": { "id": 3114, "name": "_nftCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3010, "src": "1426:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3116, "nodeType": "ExpressionStatement", "src": "1426:11:16" }, { "expression": { "id": 3138, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 3117, "name": "_idToNFT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3020, "src": "1450:8:16", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3033_storage_$", "typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)" } }, "id": 3119, "indexExpression": { "id": 3118, "name": "_tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3073, "src": "1459:8:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1450:18:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage", "typeString": "struct NFTMarketplace.NFT storage ref" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "arguments": [{ "id": 3121, "name": "_nftContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3071, "src": "1489:12:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 3122, "name": "_tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3073, "src": "1516:8:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "arguments": [{ "expression": { "id": 3125, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1547:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3126, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1551:6:16", "memberName": "sender", "nodeType": "MemberAccess", "src": "1547:10:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 3124, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1539:8:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)" }, "typeName": { "id": 3123, "name": "address", "nodeType": "ElementaryTypeName", "src": "1539:8:16", "stateMutability": "payable", "typeDescriptions": {} } }, "id": 3127, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1539:19:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, { "arguments": [{ "arguments": [{ "id": 3132, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "1589:4:16", "typeDescriptions": { "typeIdentifier": "t_contract$_NFTMarketplace_$3608", "typeString": "contract NFTMarketplace" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_contract$_NFTMarketplace_$3608", "typeString": "contract NFTMarketplace" }], "id": 3131, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1581:7:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 3130, "name": "address", "nodeType": "ElementaryTypeName", "src": "1581:7:16", "typeDescriptions": {} } }, "id": 3133, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1581:13:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 3129, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1573:8:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)" }, "typeName": { "id": 3128, "name": "address", "nodeType": "ElementaryTypeName", "src": "1573:8:16", "stateMutability": "payable", "typeDescriptions": {} } }, "id": 3134, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1573:22:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, { "id": 3135, "name": "_price", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3075, "src": "1610:6:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "hexValue": "74727565", "id": 3136, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1631:4:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "true" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address_payable", "typeString": "address payable" }, { "typeIdentifier": "t_address_payable", "typeString": "address payable" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_bool", "typeString": "bool" }], "id": 3120, "name": "NFT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3033, "src": "1471:3:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_struct$_NFT_$3033_storage_ptr_$", "typeString": "type(struct NFTMarketplace.NFT storage pointer)" } }, "id": 3137, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1471:175:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory" } }, "src": "1450:196:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage", "typeString": "struct NFTMarketplace.NFT storage ref" } }, "id": 3139, "nodeType": "ExpressionStatement", "src": "1450:196:16" }, { "eventCall": { "arguments": [{ "id": 3141, "name": "_nftContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3071, "src": "1674:12:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 3142, "name": "_tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3073, "src": "1688:8:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "expression": { "id": 3143, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1698:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3144, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1702:6:16", "memberName": "sender", "nodeType": "MemberAccess", "src": "1698:10:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "arguments": [{ "id": 3147, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "1718:4:16", "typeDescriptions": { "typeIdentifier": "t_contract$_NFTMarketplace_$3608", "typeString": "contract NFTMarketplace" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_contract$_NFTMarketplace_$3608", "typeString": "contract NFTMarketplace" }], "id": 3146, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1710:7:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 3145, "name": "address", "nodeType": "ElementaryTypeName", "src": "1710:7:16", "typeDescriptions": {} } }, "id": 3148, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1710:13:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 3149, "name": "_price", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3075, "src": "1725:6:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 3140, "name": "NFTListed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3045, "src": "1664:9:16", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,address,address,uint256)" } }, "id": 3150, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1664:68:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 3151, "nodeType": "EmitStatement", "src": "1659:73:16" }] }, "functionSelector": "ad05f1b4", "id": 3153, "implemented": true, "kind": "function", "modifiers": [{ "id": 3078, "kind": "modifierInvocation", "modifierName": { "id": 3077, "name": "nonReentrant", "nameLocations": ["1131:12:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3641, "src": "1131:12:16" }, "nodeType": "ModifierInvocation", "src": "1131:12:16" }], "name": "listNFT", "nameLocation": "1052:7:16", "nodeType": "FunctionDefinition", "parameters": { "id": 3076, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 3071, "mutability": "mutable", "name": "_nftContract", "nameLocation": "1068:12:16", "nodeType": "VariableDeclaration", "scope": 3153, "src": "1060:20:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 3070, "name": "address", "nodeType": "ElementaryTypeName", "src": "1060:7:16", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 3073, "mutability": "mutable", "name": "_tokenId", "nameLocation": "1090:8:16", "nodeType": "VariableDeclaration", "scope": 3153, "src": "1082:16:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3072, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1082:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 3075, "mutability": "mutable", "name": "_price", "nameLocation": "1108:6:16", "nodeType": "VariableDeclaration", "scope": 3153, "src": "1100:14:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3074, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1100:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "1059:56:16" }, "returnParameters": { "id": 3079, "nodeType": "ParameterList", "parameters": [], "src": "1144:0:16" }, "scope": 3608, "src": "1043:697:16", "stateMutability": "payable", "virtual": false, "visibility": "public" }, { "body": { "id": 3235, "nodeType": "Block", "src": "1848:487:16", "statements": [{ "assignments": [3164], "declarations": [{ "constant": false, "id": 3164, "mutability": "mutable", "name": "nft", "nameLocation": "1871:3:16", "nodeType": "VariableDeclaration", "scope": 3235, "src": "1859:15:16", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT" }, "typeName": { "id": 3163, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 3162, "name": "NFT", "nameLocations": ["1859:3:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3033, "src": "1859:3:16" }, "referencedDeclaration": 3033, "src": "1859:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT" } }, "visibility": "internal" }], "id": 3168, "initialValue": { "baseExpression": { "id": 3165, "name": "_idToNFT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3020, "src": "1877:8:16", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3033_storage_$", "typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)" } }, "id": 3167, "indexExpression": { "id": 3166, "name": "_tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3157, "src": "1886:8:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1877:18:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage", "typeString": "struct NFTMarketplace.NFT storage ref" } }, "nodeType": "VariableDeclarationStatement", "src": "1859:36:16" }, { "expression": { "arguments": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3174, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 3170, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1914:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3171, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1918:5:16", "memberName": "value", "nodeType": "MemberAccess", "src": "1914:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": { "expression": { "id": 3172, "name": "nft", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3164, "src": "1927:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT storage pointer" } }, "id": 3173, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "1931:5:16", "memberName": "price", "nodeType": "MemberAccess", "referencedDeclaration": 3030, "src": "1927:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "1914:22:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, { "hexValue": "4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e67207072696365", "id": 3175, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1938:40:16", "typeDescriptions": { "typeIdentifier": "t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e", "typeString": "literal_string \"Not enough ether to cover asking price\"" }, "value": "Not enough ether to cover asking price" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }, { "typeIdentifier": "t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e", "typeString": "literal_string \"Not enough ether to cover asking price\"" }], "id": 3169, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1906:7:16", "typeDescriptions": { "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure" } }, "id": 3176, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1906:73:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 3177, "nodeType": "ExpressionStatement", "src": "1906:73:16" }, { "assignments": [3179], "declarations": [{ "constant": false, "id": 3179, "mutability": "mutable", "name": "buyer", "nameLocation": "2008:5:16", "nodeType": "VariableDeclaration", "scope": 3235, "src": "1992:21:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" }, "typeName": { "id": 3178, "name": "address", "nodeType": "ElementaryTypeName", "src": "1992:15:16", "stateMutability": "payable", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "visibility": "internal" }], "id": 3185, "initialValue": { "arguments": [{ "expression": { "id": 3182, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2024:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3183, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2028:6:16", "memberName": "sender", "nodeType": "MemberAccess", "src": "2024:10:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 3181, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2016:8:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)" }, "typeName": { "id": 3180, "name": "address", "nodeType": "ElementaryTypeName", "src": "2016:8:16", "stateMutability": "payable", "typeDescriptions": {} } }, "id": 3184, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2016:19:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "nodeType": "VariableDeclarationStatement", "src": "1992:43:16" }, { "expression": { "arguments": [{ "expression": { "id": 3192, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2075:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3193, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2079:5:16", "memberName": "value", "nodeType": "MemberAccess", "src": "2075:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "arguments": [{ "expression": { "id": 3188, "name": "nft", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3164, "src": "2054:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT storage pointer" } }, "id": 3189, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2058:6:16", "memberName": "seller", "nodeType": "MemberAccess", "referencedDeclaration": 3026, "src": "2054:10:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address_payable", "typeString": "address payable" }], "id": 3187, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2046:8:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)" }, "typeName": { "id": 3186, "name": "address", "nodeType": "ElementaryTypeName", "src": "2046:8:16", "stateMutability": "payable", "typeDescriptions": {} } }, "id": 3190, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2046:19:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "id": 3191, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2066:8:16", "memberName": "transfer", "nodeType": "MemberAccess", "src": "2046:28:16", "typeDescriptions": { "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)" } }, "id": 3194, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2046:39:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 3195, "nodeType": "ExpressionStatement", "src": "2046:39:16" }, { "expression": { "arguments": [{ "arguments": [{ "id": 3202, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2139:4:16", "typeDescriptions": { "typeIdentifier": "t_contract$_NFTMarketplace_$3608", "typeString": "contract NFTMarketplace" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_contract$_NFTMarketplace_$3608", "typeString": "contract NFTMarketplace" }], "id": 3201, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2131:7:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 3200, "name": "address", "nodeType": "ElementaryTypeName", "src": "2131:7:16", "typeDescriptions": {} } }, "id": 3203, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2131:13:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 3204, "name": "buyer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3179, "src": "2146:5:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, { "expression": { "id": 3205, "name": "nft", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3164, "src": "2153:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT storage pointer" } }, "id": 3206, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2157:7:16", "memberName": "tokenId", "nodeType": "MemberAccess", "referencedDeclaration": 3024, "src": "2153:11:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address_payable", "typeString": "address payable" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "arguments": [{ "id": 3197, "name": "_nftContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3155, "src": "2104:12:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 3196, "name": "IERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1294, "src": "2096:7:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IERC721_$1294_$", "typeString": "type(contract IERC721)" } }, "id": 3198, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2096:21:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_contract$_IERC721_$1294", "typeString": "contract IERC721" } }, "id": 3199, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2118:12:16", "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 1259, "src": "2096:34:16", "typeDescriptions": { "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256) external" } }, "id": 3207, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2096:69:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 3208, "nodeType": "ExpressionStatement", "src": "2096:69:16" }, { "expression": { "id": 3213, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "expression": { "id": 3209, "name": "nft", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3164, "src": "2176:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT storage pointer" } }, "id": 3211, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberLocation": "2180:5:16", "memberName": "owner", "nodeType": "MemberAccess", "referencedDeclaration": 3028, "src": "2176:9:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 3212, "name": "buyer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3179, "src": "2188:5:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "src": "2176:17:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "id": 3214, "nodeType": "ExpressionStatement", "src": "2176:17:16" }, { "expression": { "id": 3219, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "expression": { "id": 3215, "name": "nft", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3164, "src": "2204:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT storage pointer" } }, "id": 3217, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberLocation": "2208:6:16", "memberName": "listed", "nodeType": "MemberAccess", "referencedDeclaration": 3032, "src": "2204:10:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "hexValue": "66616c7365", "id": 3218, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2217:5:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "false" }, "src": "2204:18:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 3220, "nodeType": "ExpressionStatement", "src": "2204:18:16" }, { "expression": { "id": 3222, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2235:11:16", "subExpression": { "id": 3221, "name": "_nftsSold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3008, "src": "2235:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3223, "nodeType": "ExpressionStatement", "src": "2235:11:16" }, { "eventCall": { "arguments": [{ "id": 3225, "name": "_nftContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3155, "src": "2270:12:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 3226, "name": "_tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3157, "src": "2284:8:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "expression": { "id": 3227, "name": "nft", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3164, "src": "2294:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT storage pointer" } }, "id": 3228, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2298:6:16", "memberName": "seller", "nodeType": "MemberAccess", "referencedDeclaration": 3026, "src": "2294:10:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, { "expression": { "id": 3229, "name": "nft", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3164, "src": "2306:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT storage pointer" } }, "id": 3230, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "2310:5:16", "memberName": "owner", "nodeType": "MemberAccess", "referencedDeclaration": 3028, "src": "2306:9:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, { "expression": { "id": 3231, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2317:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3232, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2321:5:16", "memberName": "value", "nodeType": "MemberAccess", "src": "2317:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address_payable", "typeString": "address payable" }, { "typeIdentifier": "t_address_payable", "typeString": "address payable" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 3224, "name": "NFTSold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3057, "src": "2262:7:16", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,address,address,uint256)" } }, "id": 3233, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2262:65:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 3234, "nodeType": "EmitStatement", "src": "2257:70:16" }] }, "functionSelector": "a82ba76f", "id": 3236, "implemented": true, "kind": "function", "modifiers": [{ "id": 3160, "kind": "modifierInvocation", "modifierName": { "id": 3159, "name": "nonReentrant", "nameLocations": ["1835:12:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3641, "src": "1835:12:16" }, "nodeType": "ModifierInvocation", "src": "1835:12:16" }], "name": "buyNFT", "nameLocation": "1773:6:16", "nodeType": "FunctionDefinition", "parameters": { "id": 3158, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 3155, "mutability": "mutable", "name": "_nftContract", "nameLocation": "1788:12:16", "nodeType": "VariableDeclaration", "scope": 3236, "src": "1780:20:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 3154, "name": "address", "nodeType": "ElementaryTypeName", "src": "1780:7:16", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 3157, "mutability": "mutable", "name": "_tokenId", "nameLocation": "1810:8:16", "nodeType": "VariableDeclaration", "scope": 3236, "src": "1802:16:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3156, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1802:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "1779:40:16" }, "returnParameters": { "id": 3161, "nodeType": "ParameterList", "parameters": [], "src": "1848:0:16" }, "scope": 3608, "src": "1764:571:16", "stateMutability": "payable", "virtual": false, "visibility": "public" }, { "body": { "id": 3331, "nodeType": "Block", "src": "2499:536:16", "statements": [{ "expression": { "arguments": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3250, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3248, "name": "_price", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3242, "src": "2518:6:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 3249, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2527:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "2518:10:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, { "hexValue": "5072696365206d757374206265206174206c65617374203120776569", "id": 3251, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2530:30:16", "typeDescriptions": { "typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9", "typeString": "literal_string \"Price must be at least 1 wei\"" }, "value": "Price must be at least 1 wei" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }, { "typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9", "typeString": "literal_string \"Price must be at least 1 wei\"" }], "id": 3247, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2510:7:16", "typeDescriptions": { "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure" } }, "id": 3252, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2510:51:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 3253, "nodeType": "ExpressionStatement", "src": "2510:51:16" }, { "expression": { "arguments": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3258, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 3255, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2580:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3256, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2584:5:16", "memberName": "value", "nodeType": "MemberAccess", "src": "2580:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "id": 3257, "name": "LISTING_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3013, "src": "2593:11:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "2580:24:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, { "hexValue": "4e6f7420656e6f75676820657468657220666f72206c697374696e6720666565", "id": 3259, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2606:34:16", "typeDescriptions": { "typeIdentifier": "t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f", "typeString": "literal_string \"Not enough ether for listing fee\"" }, "value": "Not enough ether for listing fee" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }, { "typeIdentifier": "t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f", "typeString": "literal_string \"Not enough ether for listing fee\"" }], "id": 3254, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2572:7:16", "typeDescriptions": { "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure" } }, "id": 3260, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2572:69:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 3261, "nodeType": "ExpressionStatement", "src": "2572:69:16" }, { "expression": { "arguments": [{ "expression": { "id": 3266, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2689:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3267, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2693:6:16", "memberName": "sender", "nodeType": "MemberAccess", "src": "2689:10:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "arguments": [{ "id": 3270, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2709:4:16", "typeDescriptions": { "typeIdentifier": "t_contract$_NFTMarketplace_$3608", "typeString": "contract NFTMarketplace" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_contract$_NFTMarketplace_$3608", "typeString": "contract NFTMarketplace" }], "id": 3269, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2701:7:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 3268, "name": "address", "nodeType": "ElementaryTypeName", "src": "2701:7:16", "typeDescriptions": {} } }, "id": 3271, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2701:13:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 3272, "name": "_tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3240, "src": "2716:8:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "arguments": [{ "id": 3263, "name": "_nftContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3238, "src": "2662:12:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 3262, "name": "IERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1294, "src": "2654:7:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IERC721_$1294_$", "typeString": "type(contract IERC721)" } }, "id": 3264, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2654:21:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_contract$_IERC721_$1294", "typeString": "contract IERC721" } }, "id": 3265, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2676:12:16", "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 1259, "src": "2654:34:16", "typeDescriptions": { "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256) external" } }, "id": 3273, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2654:71:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 3274, "nodeType": "ExpressionStatement", "src": "2654:71:16" }, { "assignments": [3277], "declarations": [{ "constant": false, "id": 3277, "mutability": "mutable", "name": "nft", "nameLocation": "2750:3:16", "nodeType": "VariableDeclaration", "scope": 3331, "src": "2738:15:16", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT" }, "typeName": { "id": 3276, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 3275, "name": "NFT", "nameLocations": ["2738:3:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3033, "src": "2738:3:16" }, "referencedDeclaration": 3033, "src": "2738:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT" } }, "visibility": "internal" }], "id": 3281, "initialValue": { "baseExpression": { "id": 3278, "name": "_idToNFT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3020, "src": "2756:8:16", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3033_storage_$", "typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)" } }, "id": 3280, "indexExpression": { "id": 3279, "name": "_tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3240, "src": "2765:8:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2756:18:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage", "typeString": "struct NFTMarketplace.NFT storage ref" } }, "nodeType": "VariableDeclarationStatement", "src": "2738:36:16" }, { "expression": { "id": 3290, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "expression": { "id": 3282, "name": "nft", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3277, "src": "2785:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT storage pointer" } }, "id": 3284, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberLocation": "2789:6:16", "memberName": "seller", "nodeType": "MemberAccess", "referencedDeclaration": 3026, "src": "2785:10:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "arguments": [{ "expression": { "id": 3287, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2806:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3288, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2810:6:16", "memberName": "sender", "nodeType": "MemberAccess", "src": "2806:10:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 3286, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2798:8:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)" }, "typeName": { "id": 3285, "name": "address", "nodeType": "ElementaryTypeName", "src": "2798:8:16", "stateMutability": "payable", "typeDescriptions": {} } }, "id": 3289, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2798:19:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "src": "2785:32:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "id": 3291, "nodeType": "ExpressionStatement", "src": "2785:32:16" }, { "expression": { "id": 3302, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "expression": { "id": 3292, "name": "nft", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3277, "src": "2828:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT storage pointer" } }, "id": 3294, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberLocation": "2832:5:16", "memberName": "owner", "nodeType": "MemberAccess", "referencedDeclaration": 3028, "src": "2828:9:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "arguments": [{ "arguments": [{ "id": 3299, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2856:4:16", "typeDescriptions": { "typeIdentifier": "t_contract$_NFTMarketplace_$3608", "typeString": "contract NFTMarketplace" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_contract$_NFTMarketplace_$3608", "typeString": "contract NFTMarketplace" }], "id": 3298, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2848:7:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 3297, "name": "address", "nodeType": "ElementaryTypeName", "src": "2848:7:16", "typeDescriptions": {} } }, "id": 3300, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2848:13:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 3296, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2840:8:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)" }, "typeName": { "id": 3295, "name": "address", "nodeType": "ElementaryTypeName", "src": "2840:8:16", "stateMutability": "payable", "typeDescriptions": {} } }, "id": 3301, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2840:22:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "src": "2828:34:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "id": 3303, "nodeType": "ExpressionStatement", "src": "2828:34:16" }, { "expression": { "id": 3308, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "expression": { "id": 3304, "name": "nft", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3277, "src": "2873:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT storage pointer" } }, "id": 3306, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberLocation": "2877:6:16", "memberName": "listed", "nodeType": "MemberAccess", "referencedDeclaration": 3032, "src": "2873:10:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "hexValue": "74727565", "id": 3307, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2886:4:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "true" }, "src": "2873:17:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 3309, "nodeType": "ExpressionStatement", "src": "2873:17:16" }, { "expression": { "id": 3314, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "expression": { "id": 3310, "name": "nft", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3277, "src": "2901:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT storage pointer" } }, "id": 3312, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberLocation": "2905:5:16", "memberName": "price", "nodeType": "MemberAccess", "referencedDeclaration": 3030, "src": "2901:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 3313, "name": "_price", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3242, "src": "2913:6:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "2901:18:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3315, "nodeType": "ExpressionStatement", "src": "2901:18:16" }, { "expression": { "id": 3317, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "--", "prefix": false, "src": "2932:11:16", "subExpression": { "id": 3316, "name": "_nftsSold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3008, "src": "2932:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3318, "nodeType": "ExpressionStatement", "src": "2932:11:16" }, { "eventCall": { "arguments": [{ "id": 3320, "name": "_nftContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3238, "src": "2969:12:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 3321, "name": "_tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3240, "src": "2983:8:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "expression": { "id": 3322, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2993:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3323, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2997:6:16", "memberName": "sender", "nodeType": "MemberAccess", "src": "2993:10:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "arguments": [{ "id": 3326, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "3013:4:16", "typeDescriptions": { "typeIdentifier": "t_contract$_NFTMarketplace_$3608", "typeString": "contract NFTMarketplace" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_contract$_NFTMarketplace_$3608", "typeString": "contract NFTMarketplace" }], "id": 3325, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3005:7:16", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 3324, "name": "address", "nodeType": "ElementaryTypeName", "src": "3005:7:16", "typeDescriptions": {} } }, "id": 3327, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3005:13:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 3328, "name": "_price", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3242, "src": "3020:6:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 3319, "name": "NFTListed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3045, "src": "2959:9:16", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,address,address,uint256)" } }, "id": 3329, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2959:68:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 3330, "nodeType": "EmitStatement", "src": "2954:73:16" }] }, "functionSelector": "34f5b624", "id": 3332, "implemented": true, "kind": "function", "modifiers": [{ "id": 3245, "kind": "modifierInvocation", "modifierName": { "id": 3244, "name": "nonReentrant", "nameLocations": ["2486:12:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3641, "src": "2486:12:16" }, "nodeType": "ModifierInvocation", "src": "2486:12:16" }], "name": "resellNft", "nameLocation": "2405:9:16", "nodeType": "FunctionDefinition", "parameters": { "id": 3243, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 3238, "mutability": "mutable", "name": "_nftContract", "nameLocation": "2423:12:16", "nodeType": "VariableDeclaration", "scope": 3332, "src": "2415:20:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 3237, "name": "address", "nodeType": "ElementaryTypeName", "src": "2415:7:16", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 3240, "mutability": "mutable", "name": "_tokenId", "nameLocation": "2445:8:16", "nodeType": "VariableDeclaration", "scope": 3332, "src": "2437:16:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3239, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2437:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 3242, "mutability": "mutable", "name": "_price", "nameLocation": "2463:6:16", "nodeType": "VariableDeclaration", "scope": 3332, "src": "2455:14:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3241, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2455:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2414:56:16" }, "returnParameters": { "id": 3246, "nodeType": "ParameterList", "parameters": [], "src": "2499:0:16" }, "scope": 3608, "src": "2396:639:16", "stateMutability": "payable", "virtual": false, "visibility": "public" }, { "body": { "id": 3400, "nodeType": "Block", "src": "3103:410:16", "statements": [{ "assignments": [3340], "declarations": [{ "constant": false, "id": 3340, "mutability": "mutable", "name": "nftCount", "nameLocation": "3122:8:16", "nodeType": "VariableDeclaration", "scope": 3400, "src": "3114:16:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3339, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3114:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 3342, "initialValue": { "id": 3341, "name": "_nftCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3010, "src": "3133:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "3114:28:16" }, { "assignments": [3344], "declarations": [{ "constant": false, "id": 3344, "mutability": "mutable", "name": "unsoldNFTCount", "nameLocation": "3161:14:16", "nodeType": "VariableDeclaration", "scope": 3400, "src": "3153:22:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3343, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3153:7:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 3348, "initialValue": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3347, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3345, "name": "nftCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3340, "src": "3178:8:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": { "id": 3346, "name": "_nftsSold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3008, "src": "3189:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "3178:20:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "3153:45:16" }, { "assignments": [3353], "declarations": [{ "constant": false, "id": 3353, "mutability": "mutable", "name": "nfts", "nameLocation": "3222:4:16", "nodeType": "VariableDeclaration", "scope": 3400, "src": "3209:17:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "typeString": "struct NFTMarketplace.NFT[]" }, "typeName": { "baseType": { "id": 3351, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 3350, "name": "NFT", "nameLocations": ["3209:3:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3033, "src": "3209:3:16" }, "referencedDeclaration": 3033, "src": "3209:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT" } }, "id": 3352, "nodeType": "ArrayTypeName", "src": "3209:5:16", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_storage_$dyn_storage_ptr", "typeString": "struct NFTMarketplace.NFT[]" } }, "visibility": "internal" }], "id": 3360, "initialValue": { "arguments": [{ "id": 3358, "name": "unsoldNFTCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3344, "src": "3239:14:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 3357, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "3229:9:16", "typeDescriptions": { "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct NFTMarketplace.NFT memory[] memory)" }, "typeName": { "baseType": { "id": 3355, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 3354, "name": "NFT", "nameLocations": ["3233:3:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3033, "src": "3233:3:16" }, "referencedDeclaration": 3033, "src": "3233:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT" } }, "id": 3356, "nodeType": "ArrayTypeName", "src": "3233:5:16", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_storage_$dyn_storage_ptr", "typeString": "struct NFTMarketplace.NFT[]" } } }, "id": 3359, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3229:25:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory[] memory" } }, "nodeType": "VariableDeclarationStatement", "src": "3209:45:16" }, { "assignments": [3362], "declarations": [{ "constant": false, "id": 3362, "mutability": "mutable", "name": "nftsIndex", "nameLocation": "3270:9:16", "nodeType": "VariableDeclaration", "scope": 3400, "src": "3265:14:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3361, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3265:4:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 3364, "initialValue": { "hexValue": "30", "id": 3363, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3282:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "3265:18:16" }, { "body": { "id": 3396, "nodeType": "Block", "src": "3330:152:16", "statements": [{ "condition": { "expression": { "baseExpression": { "id": 3375, "name": "_idToNFT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3020, "src": "3349:8:16", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3033_storage_$", "typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)" } }, "id": 3379, "indexExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3378, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3376, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3366, "src": "3358:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "31", "id": 3377, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3362:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "3358:5:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3349:15:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage", "typeString": "struct NFTMarketplace.NFT storage ref" } }, "id": 3380, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "3365:6:16", "memberName": "listed", "nodeType": "MemberAccess", "referencedDeclaration": 3032, "src": "3349:22:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 3395, "nodeType": "IfStatement", "src": "3345:126:16", "trueBody": { "id": 3394, "nodeType": "Block", "src": "3373:98:16", "statements": [{ "expression": { "id": 3389, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 3381, "name": "nfts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3353, "src": "3392:4:16", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory[] memory" } }, "id": 3383, "indexExpression": { "id": 3382, "name": "nftsIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3362, "src": "3397:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3392:15:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "baseExpression": { "id": 3384, "name": "_idToNFT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3020, "src": "3410:8:16", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3033_storage_$", "typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)" } }, "id": 3388, "indexExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3387, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3385, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3366, "src": "3419:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "31", "id": 3386, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3423:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "3419:5:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3410:15:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage", "typeString": "struct NFTMarketplace.NFT storage ref" } }, "src": "3392:33:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory" } }, "id": 3390, "nodeType": "ExpressionStatement", "src": "3392:33:16" }, { "expression": { "id": 3392, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3444:11:16", "subExpression": { "id": 3391, "name": "nftsIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3362, "src": "3444:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3393, "nodeType": "ExpressionStatement", "src": "3444:11:16" }] } }] }, "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3371, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3369, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3366, "src": "3311:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "id": 3370, "name": "nftCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3340, "src": "3315:8:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "3311:12:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 3397, "initializationExpression": { "assignments": [3366], "declarations": [{ "constant": false, "id": 3366, "mutability": "mutable", "name": "i", "nameLocation": "3304:1:16", "nodeType": "VariableDeclaration", "scope": 3397, "src": "3299:6:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3365, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3299:4:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 3368, "initialValue": { "hexValue": "30", "id": 3367, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3308:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "3299:10:16" }, "loopExpression": { "expression": { "id": 3373, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3325:3:16", "subExpression": { "id": 3372, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3366, "src": "3325:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3374, "nodeType": "ExpressionStatement", "src": "3325:3:16" }, "nodeType": "ForStatement", "src": "3294:188:16" }, { "expression": { "id": 3398, "name": "nfts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3353, "src": "3501:4:16", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory[] memory" } }, "functionReturnParameters": 3338, "id": 3399, "nodeType": "Return", "src": "3494:11:16" }] }, "functionSelector": "012386f0", "id": 3401, "implemented": true, "kind": "function", "modifiers": [], "name": "getListedNFTs", "nameLocation": "3052:13:16", "nodeType": "FunctionDefinition", "parameters": { "id": 3333, "nodeType": "ParameterList", "parameters": [], "src": "3065:2:16" }, "returnParameters": { "id": 3338, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 3337, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 3401, "src": "3089:12:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "typeString": "struct NFTMarketplace.NFT[]" }, "typeName": { "baseType": { "id": 3335, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 3334, "name": "NFT", "nameLocations": ["3089:3:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3033, "src": "3089:3:16" }, "referencedDeclaration": 3033, "src": "3089:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT" } }, "id": 3336, "nodeType": "ArrayTypeName", "src": "3089:5:16", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_storage_$dyn_storage_ptr", "typeString": "struct NFTMarketplace.NFT[]" } }, "visibility": "internal" }], "src": "3088:14:16" }, "scope": 3608, "src": "3043:470:16", "stateMutability": "view", "virtual": false, "visibility": "public" }, { "body": { "id": 3496, "nodeType": "Block", "src": "3576:550:16", "statements": [{ "assignments": [3409], "declarations": [{ "constant": false, "id": 3409, "mutability": "mutable", "name": "nftCount", "nameLocation": "3592:8:16", "nodeType": "VariableDeclaration", "scope": 3496, "src": "3587:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3408, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3587:4:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 3411, "initialValue": { "id": 3410, "name": "_nftCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3010, "src": "3603:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "3587:25:16" }, { "assignments": [3413], "declarations": [{ "constant": false, "id": 3413, "mutability": "mutable", "name": "myNftCount", "nameLocation": "3628:10:16", "nodeType": "VariableDeclaration", "scope": 3496, "src": "3623:15:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3412, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3623:4:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 3415, "initialValue": { "hexValue": "30", "id": 3414, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3641:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "3623:19:16" }, { "body": { "id": 3440, "nodeType": "Block", "src": "3689:114:16", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 3434, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "baseExpression": { "id": 3426, "name": "_idToNFT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3020, "src": "3708:8:16", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3033_storage_$", "typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)" } }, "id": 3430, "indexExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3429, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3427, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3417, "src": "3717:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "31", "id": 3428, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3721:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "3717:5:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3708:15:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage", "typeString": "struct NFTMarketplace.NFT storage ref" } }, "id": 3431, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "3724:5:16", "memberName": "owner", "nodeType": "MemberAccess", "referencedDeclaration": 3028, "src": "3708:21:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "expression": { "id": 3432, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3733:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3433, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3737:6:16", "memberName": "sender", "nodeType": "MemberAccess", "src": "3733:10:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "3708:35:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 3439, "nodeType": "IfStatement", "src": "3704:88:16", "trueBody": { "id": 3438, "nodeType": "Block", "src": "3745:47:16", "statements": [{ "expression": { "id": 3436, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3764:12:16", "subExpression": { "id": 3435, "name": "myNftCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3413, "src": "3764:10:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3437, "nodeType": "ExpressionStatement", "src": "3764:12:16" }] } }] }, "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3422, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3420, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3417, "src": "3670:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "id": 3421, "name": "nftCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3409, "src": "3674:8:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "3670:12:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 3441, "initializationExpression": { "assignments": [3417], "declarations": [{ "constant": false, "id": 3417, "mutability": "mutable", "name": "i", "nameLocation": "3663:1:16", "nodeType": "VariableDeclaration", "scope": 3441, "src": "3658:6:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3416, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3658:4:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 3419, "initialValue": { "hexValue": "30", "id": 3418, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3667:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "3658:10:16" }, "loopExpression": { "expression": { "id": 3424, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3684:3:16", "subExpression": { "id": 3423, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3417, "src": "3684:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3425, "nodeType": "ExpressionStatement", "src": "3684:3:16" }, "nodeType": "ForStatement", "src": "3653:150:16" }, { "assignments": [3446], "declarations": [{ "constant": false, "id": 3446, "mutability": "mutable", "name": "nfts", "nameLocation": "3828:4:16", "nodeType": "VariableDeclaration", "scope": 3496, "src": "3815:17:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "typeString": "struct NFTMarketplace.NFT[]" }, "typeName": { "baseType": { "id": 3444, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 3443, "name": "NFT", "nameLocations": ["3815:3:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3033, "src": "3815:3:16" }, "referencedDeclaration": 3033, "src": "3815:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT" } }, "id": 3445, "nodeType": "ArrayTypeName", "src": "3815:5:16", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_storage_$dyn_storage_ptr", "typeString": "struct NFTMarketplace.NFT[]" } }, "visibility": "internal" }], "id": 3453, "initialValue": { "arguments": [{ "id": 3451, "name": "myNftCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3413, "src": "3845:10:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 3450, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "3835:9:16", "typeDescriptions": { "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct NFTMarketplace.NFT memory[] memory)" }, "typeName": { "baseType": { "id": 3448, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 3447, "name": "NFT", "nameLocations": ["3839:3:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3033, "src": "3839:3:16" }, "referencedDeclaration": 3033, "src": "3839:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT" } }, "id": 3449, "nodeType": "ArrayTypeName", "src": "3839:5:16", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_storage_$dyn_storage_ptr", "typeString": "struct NFTMarketplace.NFT[]" } } }, "id": 3452, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3835:21:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory[] memory" } }, "nodeType": "VariableDeclarationStatement", "src": "3815:41:16" }, { "assignments": [3455], "declarations": [{ "constant": false, "id": 3455, "mutability": "mutable", "name": "nftsIndex", "nameLocation": "3872:9:16", "nodeType": "VariableDeclaration", "scope": 3496, "src": "3867:14:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3454, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3867:4:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 3457, "initialValue": { "hexValue": "30", "id": 3456, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3884:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "3867:18:16" }, { "body": { "id": 3492, "nodeType": "Block", "src": "3932:165:16", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 3476, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "baseExpression": { "id": 3468, "name": "_idToNFT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3020, "src": "3951:8:16", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3033_storage_$", "typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)" } }, "id": 3472, "indexExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3471, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3469, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3459, "src": "3960:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "31", "id": 3470, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3964:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "3960:5:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3951:15:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage", "typeString": "struct NFTMarketplace.NFT storage ref" } }, "id": 3473, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "3967:5:16", "memberName": "owner", "nodeType": "MemberAccess", "referencedDeclaration": 3028, "src": "3951:21:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "expression": { "id": 3474, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3976:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3475, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3980:6:16", "memberName": "sender", "nodeType": "MemberAccess", "src": "3976:10:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "3951:35:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 3491, "nodeType": "IfStatement", "src": "3947:139:16", "trueBody": { "id": 3490, "nodeType": "Block", "src": "3988:98:16", "statements": [{ "expression": { "id": 3485, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 3477, "name": "nfts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3446, "src": "4007:4:16", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory[] memory" } }, "id": 3479, "indexExpression": { "id": 3478, "name": "nftsIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3455, "src": "4012:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4007:15:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "baseExpression": { "id": 3480, "name": "_idToNFT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3020, "src": "4025:8:16", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3033_storage_$", "typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)" } }, "id": 3484, "indexExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3483, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3481, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3459, "src": "4034:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "31", "id": 3482, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4038:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "4034:5:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4025:15:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage", "typeString": "struct NFTMarketplace.NFT storage ref" } }, "src": "4007:33:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory" } }, "id": 3486, "nodeType": "ExpressionStatement", "src": "4007:33:16" }, { "expression": { "id": 3488, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4059:11:16", "subExpression": { "id": 3487, "name": "nftsIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3455, "src": "4059:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3489, "nodeType": "ExpressionStatement", "src": "4059:11:16" }] } }] }, "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3464, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3462, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3459, "src": "3913:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "id": 3463, "name": "nftCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3409, "src": "3917:8:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "3913:12:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 3493, "initializationExpression": { "assignments": [3459], "declarations": [{ "constant": false, "id": 3459, "mutability": "mutable", "name": "i", "nameLocation": "3906:1:16", "nodeType": "VariableDeclaration", "scope": 3493, "src": "3901:6:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3458, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3901:4:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 3461, "initialValue": { "hexValue": "30", "id": 3460, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3910:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "3901:10:16" }, "loopExpression": { "expression": { "id": 3466, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3927:3:16", "subExpression": { "id": 3465, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3459, "src": "3927:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3467, "nodeType": "ExpressionStatement", "src": "3927:3:16" }, "nodeType": "ForStatement", "src": "3896:201:16" }, { "expression": { "id": 3494, "name": "nfts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3446, "src": "4114:4:16", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory[] memory" } }, "functionReturnParameters": 3407, "id": 3495, "nodeType": "Return", "src": "4107:11:16" }] }, "functionSelector": "629cb2e4", "id": 3497, "implemented": true, "kind": "function", "modifiers": [], "name": "getMyNFTs", "nameLocation": "3530:9:16", "nodeType": "FunctionDefinition", "parameters": { "id": 3402, "nodeType": "ParameterList", "parameters": [], "src": "3539:2:16" }, "returnParameters": { "id": 3407, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 3406, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 3497, "src": "3562:12:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "typeString": "struct NFTMarketplace.NFT[]" }, "typeName": { "baseType": { "id": 3404, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 3403, "name": "NFT", "nameLocations": ["3562:3:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3033, "src": "3562:3:16" }, "referencedDeclaration": 3033, "src": "3562:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT" } }, "id": 3405, "nodeType": "ArrayTypeName", "src": "3562:5:16", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_storage_$dyn_storage_ptr", "typeString": "struct NFTMarketplace.NFT[]" } }, "visibility": "internal" }], "src": "3561:14:16" }, "scope": 3608, "src": "3521:605:16", "stateMutability": "view", "virtual": false, "visibility": "public" }, { "body": { "id": 3606, "nodeType": "Block", "src": "4193:604:16", "statements": [{ "assignments": [3505], "declarations": [{ "constant": false, "id": 3505, "mutability": "mutable", "name": "nftCount", "nameLocation": "4209:8:16", "nodeType": "VariableDeclaration", "scope": 3606, "src": "4204:13:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3504, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4204:4:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 3507, "initialValue": { "id": 3506, "name": "_nftCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3010, "src": "4220:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "4204:25:16" }, { "assignments": [3509], "declarations": [{ "constant": false, "id": 3509, "mutability": "mutable", "name": "myNftCount", "nameLocation": "4245:10:16", "nodeType": "VariableDeclaration", "scope": 3606, "src": "4240:15:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3508, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4240:4:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 3511, "initialValue": { "hexValue": "30", "id": 3510, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4258:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "4240:19:16" }, { "body": { "id": 3543, "nodeType": "Block", "src": "4306:141:16", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 3537, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 3530, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "baseExpression": { "id": 3522, "name": "_idToNFT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3020, "src": "4325:8:16", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3033_storage_$", "typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)" } }, "id": 3526, "indexExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3525, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3523, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3513, "src": "4334:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "31", "id": 3524, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4338:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "4334:5:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4325:15:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage", "typeString": "struct NFTMarketplace.NFT storage ref" } }, "id": 3527, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "4341:6:16", "memberName": "seller", "nodeType": "MemberAccess", "referencedDeclaration": 3026, "src": "4325:22:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "expression": { "id": 3528, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4351:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3529, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "4355:6:16", "memberName": "sender", "nodeType": "MemberAccess", "src": "4351:10:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "4325:36:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "expression": { "baseExpression": { "id": 3531, "name": "_idToNFT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3020, "src": "4365:8:16", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3033_storage_$", "typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)" } }, "id": 3535, "indexExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3534, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3532, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3513, "src": "4374:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "31", "id": 3533, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4378:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "4374:5:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4365:15:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage", "typeString": "struct NFTMarketplace.NFT storage ref" } }, "id": 3536, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "4381:6:16", "memberName": "listed", "nodeType": "MemberAccess", "referencedDeclaration": 3032, "src": "4365:22:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "4325:62:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 3542, "nodeType": "IfStatement", "src": "4321:115:16", "trueBody": { "id": 3541, "nodeType": "Block", "src": "4389:47:16", "statements": [{ "expression": { "id": 3539, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4408:12:16", "subExpression": { "id": 3538, "name": "myNftCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3509, "src": "4408:10:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3540, "nodeType": "ExpressionStatement", "src": "4408:12:16" }] } }] }, "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3518, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3516, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3513, "src": "4287:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "id": 3517, "name": "nftCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3505, "src": "4291:8:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "4287:12:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 3544, "initializationExpression": { "assignments": [3513], "declarations": [{ "constant": false, "id": 3513, "mutability": "mutable", "name": "i", "nameLocation": "4280:1:16", "nodeType": "VariableDeclaration", "scope": 3544, "src": "4275:6:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3512, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4275:4:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 3515, "initialValue": { "hexValue": "30", "id": 3514, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4284:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "4275:10:16" }, "loopExpression": { "expression": { "id": 3520, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4301:3:16", "subExpression": { "id": 3519, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3513, "src": "4301:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3521, "nodeType": "ExpressionStatement", "src": "4301:3:16" }, "nodeType": "ForStatement", "src": "4270:177:16" }, { "assignments": [3549], "declarations": [{ "constant": false, "id": 3549, "mutability": "mutable", "name": "nfts", "nameLocation": "4472:4:16", "nodeType": "VariableDeclaration", "scope": 3606, "src": "4459:17:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "typeString": "struct NFTMarketplace.NFT[]" }, "typeName": { "baseType": { "id": 3547, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 3546, "name": "NFT", "nameLocations": ["4459:3:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3033, "src": "4459:3:16" }, "referencedDeclaration": 3033, "src": "4459:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT" } }, "id": 3548, "nodeType": "ArrayTypeName", "src": "4459:5:16", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_storage_$dyn_storage_ptr", "typeString": "struct NFTMarketplace.NFT[]" } }, "visibility": "internal" }], "id": 3556, "initialValue": { "arguments": [{ "id": 3554, "name": "myNftCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3509, "src": "4489:10:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 3553, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "4479:9:16", "typeDescriptions": { "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct NFTMarketplace.NFT memory[] memory)" }, "typeName": { "baseType": { "id": 3551, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 3550, "name": "NFT", "nameLocations": ["4483:3:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3033, "src": "4483:3:16" }, "referencedDeclaration": 3033, "src": "4483:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT" } }, "id": 3552, "nodeType": "ArrayTypeName", "src": "4483:5:16", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_storage_$dyn_storage_ptr", "typeString": "struct NFTMarketplace.NFT[]" } } }, "id": 3555, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4479:21:16", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory[] memory" } }, "nodeType": "VariableDeclarationStatement", "src": "4459:41:16" }, { "assignments": [3558], "declarations": [{ "constant": false, "id": 3558, "mutability": "mutable", "name": "nftsIndex", "nameLocation": "4516:9:16", "nodeType": "VariableDeclaration", "scope": 3606, "src": "4511:14:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3557, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4511:4:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 3560, "initialValue": { "hexValue": "30", "id": 3559, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4528:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "4511:18:16" }, { "body": { "id": 3602, "nodeType": "Block", "src": "4576:192:16", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 3586, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 3579, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "baseExpression": { "id": 3571, "name": "_idToNFT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3020, "src": "4595:8:16", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3033_storage_$", "typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)" } }, "id": 3575, "indexExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3574, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3572, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3562, "src": "4604:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "31", "id": 3573, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4608:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "4604:5:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4595:15:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage", "typeString": "struct NFTMarketplace.NFT storage ref" } }, "id": 3576, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "4611:6:16", "memberName": "seller", "nodeType": "MemberAccess", "referencedDeclaration": 3026, "src": "4595:22:16", "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "expression": { "id": 3577, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4621:3:16", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 3578, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "4625:6:16", "memberName": "sender", "nodeType": "MemberAccess", "src": "4621:10:16", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "4595:36:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "expression": { "baseExpression": { "id": 3580, "name": "_idToNFT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3020, "src": "4635:8:16", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3033_storage_$", "typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)" } }, "id": 3584, "indexExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3583, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3581, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3562, "src": "4644:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "31", "id": 3582, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4648:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "4644:5:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4635:15:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage", "typeString": "struct NFTMarketplace.NFT storage ref" } }, "id": 3585, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "4651:6:16", "memberName": "listed", "nodeType": "MemberAccess", "referencedDeclaration": 3032, "src": "4635:22:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "4595:62:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 3601, "nodeType": "IfStatement", "src": "4591:166:16", "trueBody": { "id": 3600, "nodeType": "Block", "src": "4659:98:16", "statements": [{ "expression": { "id": 3595, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 3587, "name": "nfts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3549, "src": "4678:4:16", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory[] memory" } }, "id": 3589, "indexExpression": { "id": 3588, "name": "nftsIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3558, "src": "4683:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4678:15:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "baseExpression": { "id": 3590, "name": "_idToNFT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3020, "src": "4696:8:16", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3033_storage_$", "typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)" } }, "id": 3594, "indexExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3593, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3591, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3562, "src": "4705:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "31", "id": 3592, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4709:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "4705:5:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4696:15:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage", "typeString": "struct NFTMarketplace.NFT storage ref" } }, "src": "4678:33:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory" } }, "id": 3596, "nodeType": "ExpressionStatement", "src": "4678:33:16" }, { "expression": { "id": 3598, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4730:11:16", "subExpression": { "id": 3597, "name": "nftsIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3558, "src": "4730:9:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3599, "nodeType": "ExpressionStatement", "src": "4730:11:16" }] } }] }, "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3567, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3565, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3562, "src": "4557:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "id": 3566, "name": "nftCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3505, "src": "4561:8:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "4557:12:16", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 3603, "initializationExpression": { "assignments": [3562], "declarations": [{ "constant": false, "id": 3562, "mutability": "mutable", "name": "i", "nameLocation": "4550:1:16", "nodeType": "VariableDeclaration", "scope": 3603, "src": "4545:6:16", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3561, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4545:4:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 3564, "initialValue": { "hexValue": "30", "id": 3563, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4554:1:16", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "4545:10:16" }, "loopExpression": { "expression": { "id": 3569, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4571:3:16", "subExpression": { "id": 3568, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3562, "src": "4571:1:16", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3570, "nodeType": "ExpressionStatement", "src": "4571:3:16" }, "nodeType": "ForStatement", "src": "4540:228:16" }, { "expression": { "id": 3604, "name": "nfts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3549, "src": "4785:4:16", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "typeString": "struct NFTMarketplace.NFT memory[] memory" } }, "functionReturnParameters": 3503, "id": 3605, "nodeType": "Return", "src": "4778:11:16" }] }, "functionSelector": "1a7a922e", "id": 3607, "implemented": true, "kind": "function", "modifiers": [], "name": "getMyListNFTs", "nameLocation": "4143:13:16", "nodeType": "FunctionDefinition", "parameters": { "id": 3498, "nodeType": "ParameterList", "parameters": [], "src": "4156:2:16" }, "returnParameters": { "id": 3503, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 3502, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 3607, "src": "4179:12:16", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "typeString": "struct NFTMarketplace.NFT[]" }, "typeName": { "baseType": { "id": 3500, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 3499, "name": "NFT", "nameLocations": ["4179:3:16"], "nodeType": "IdentifierPath", "referencedDeclaration": 3033, "src": "4179:3:16" }, "referencedDeclaration": 3033, "src": "4179:3:16", "typeDescriptions": { "typeIdentifier": "t_struct$_NFT_$3033_storage_ptr", "typeString": "struct NFTMarketplace.NFT" } }, "id": 3501, "nodeType": "ArrayTypeName", "src": "4179:5:16", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_NFT_$3033_storage_$dyn_storage_ptr", "typeString": "struct NFTMarketplace.NFT[]" } }, "visibility": "internal" }], "src": "4178:14:16" }, "scope": 3608, "src": "4134:663:16", "stateMutability": "view", "virtual": false, "visibility": "public" }], "scope": 3609, "src": "163:4637:16", "usedErrors": [], "usedEvents": [3045, 3057] }], "src": "33:4767:16" }, "id": 16 }, "contracts/ReentrancyGuard.sol": { "ast": { "absolutePath": "contracts/ReentrancyGuard.sol", "exportedSymbols": { "ReentrancyGuard": [3642] }, "id": 3643, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 3610, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "33:24:17" }, { "abstract": false, "baseContracts": [], "canonicalName": "ReentrancyGuard", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 3611, "nodeType": "StructuredDocumentation", "src": "61:227:17", "text": " @title Helps contracts guard against reentrancy attacks.\n @author Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>\n @dev If you mark a function `nonReentrant`, you should also\n mark it `external`." }, "fullyImplemented": true, "id": 3642, "linearizedBaseContracts": [3642], "name": "ReentrancyGuard", "nameLocation": "299:15:17", "nodeType": "ContractDefinition", "nodes": [{ "constant": false, "documentation": { "id": 3612, "nodeType": "StructuredDocumentation", "src": "322:67:17", "text": "@dev counter to allow mutex lock with only one SSTORE operation" }, "id": 3614, "mutability": "mutable", "name": "_guardCounter", "nameLocation": "411:13:17", "nodeType": "VariableDeclaration", "scope": 3642, "src": "395:29:17", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3613, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "395:7:17", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "private" }, { "body": { "id": 3621, "nodeType": "Block", "src": "448:177:17", "statements": [{ "expression": { "id": 3619, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 3617, "name": "_guardCounter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3614, "src": "600:13:17", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "hexValue": "31", "id": 3618, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "616:1:17", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "600:17:17", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3620, "nodeType": "ExpressionStatement", "src": "600:17:17" }] }, "id": 3622, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": { "id": 3615, "nodeType": "ParameterList", "parameters": [], "src": "445:2:17" }, "returnParameters": { "id": 3616, "nodeType": "ParameterList", "parameters": [], "src": "448:0:17" }, "scope": 3642, "src": "433:192:17", "stateMutability": "nonpayable", "virtual": false, "visibility": "public" }, { "body": { "id": 3640, "nodeType": "Block", "src": "1033:145:17", "statements": [{ "expression": { "id": 3627, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 3625, "name": "_guardCounter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3614, "src": "1044:13:17", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "+=", "rightHandSide": { "hexValue": "31", "id": 3626, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1061:1:17", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "1044:18:17", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 3628, "nodeType": "ExpressionStatement", "src": "1044:18:17" }, { "assignments": [3630], "declarations": [{ "constant": false, "id": 3630, "mutability": "mutable", "name": "localCounter", "nameLocation": "1081:12:17", "nodeType": "VariableDeclaration", "scope": 3640, "src": "1073:20:17", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3629, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1073:7:17", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 3632, "initialValue": { "id": 3631, "name": "_guardCounter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3614, "src": "1096:13:17", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "1073:36:17" }, { "id": 3633, "nodeType": "PlaceholderStatement", "src": "1120:1:17" }, { "expression": { "arguments": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 3637, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 3635, "name": "localCounter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3630, "src": "1140:12:17", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "id": 3636, "name": "_guardCounter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3614, "src": "1156:13:17", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "1140:29:17", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }], "id": 3634, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1132:7:17", "typeDescriptions": { "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure" } }, "id": 3638, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1132:38:17", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 3639, "nodeType": "ExpressionStatement", "src": "1132:38:17" }] }, "documentation": { "id": 3623, "nodeType": "StructuredDocumentation", "src": "633:370:17", "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work." }, "id": 3641, "name": "nonReentrant", "nameLocation": "1018:12:17", "nodeType": "ModifierDefinition", "parameters": { "id": 3624, "nodeType": "ParameterList", "parameters": [], "src": "1030:2:17" }, "src": "1009:169:17", "virtual": false, "visibility": "internal" }], "scope": 3643, "src": "290:891:17", "usedErrors": [], "usedEvents": [] }], "src": "33:1148:17" }, "id": 17 } }, "contracts": { "@openzeppelin/contracts/interfaces/IERC4906.sol": { "IERC4906": { "abi": [{ "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "approved", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "Approval", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "operator", "type": "address" }, { "indexed": false, "internalType": "bool", "name": "approved", "type": "bool" }], "name": "ApprovalForAll", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "uint256", "name": "_fromTokenId", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_toTokenId", "type": "uint256" }], "name": "BatchMetadataUpdate", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "uint256", "name": "_tokenId", "type": "uint256" }], "name": "MetadataUpdate", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "from", "type": "address" }, { "indexed": true, "internalType": "address", "name": "to", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "Transfer", "type": "event" }, { "inputs": [{ "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "approve", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "balanceOf", "outputs": [{ "internalType": "uint256", "name": "balance", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "getApproved", "outputs": [{ "internalType": "address", "name": "operator", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "operator", "type": "address" }], "name": "isApprovedForAll", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ownerOf", "outputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "bytes", "name": "data", "type": "bytes" }], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "bool", "name": "approved", "type": "bool" }], "name": "setApprovalForAll", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }], "name": "supportsInterface", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "transferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }], "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "methodIdentifiers": { "approve(address,uint256)": "095ea7b3", "balanceOf(address)": "70a08231", "getApproved(uint256)": "081812fc", "isApprovedForAll(address,address)": "e985e9c5", "ownerOf(uint256)": "6352211e", "safeTransferFrom(address,address,uint256)": "42842e0e", "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde", "setApprovalForAll(address,bool)": "a22cb465", "supportsInterface(bytes4)": "01ffc9a7", "transferFrom(address,address,uint256)": "23b872dd" } }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}" } }, "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": { "IERC1155Errors": { "abi": [{ "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }, { "internalType": "uint256", "name": "balance", "type": "uint256" }, { "internalType": "uint256", "name": "needed", "type": "uint256" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ERC1155InsufficientBalance", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "approver", "type": "address" }], "name": "ERC1155InvalidApprover", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "idsLength", "type": "uint256" }, { "internalType": "uint256", "name": "valuesLength", "type": "uint256" }], "name": "ERC1155InvalidArrayLength", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }], "name": "ERC1155InvalidOperator", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "receiver", "type": "address" }], "name": "ERC1155InvalidReceiver", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }], "name": "ERC1155InvalidSender", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "address", "name": "owner", "type": "address" }], "name": "ERC1155MissingApprovalForAll", "type": "error" }], "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "methodIdentifiers": {} }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}" }, "IERC20Errors": { "abi": [{ "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "allowance", "type": "uint256" }, { "internalType": "uint256", "name": "needed", "type": "uint256" }], "name": "ERC20InsufficientAllowance", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }, { "internalType": "uint256", "name": "balance", "type": "uint256" }, { "internalType": "uint256", "name": "needed", "type": "uint256" }], "name": "ERC20InsufficientBalance", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "approver", "type": "address" }], "name": "ERC20InvalidApprover", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "receiver", "type": "address" }], "name": "ERC20InvalidReceiver", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }], "name": "ERC20InvalidSender", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }], "name": "ERC20InvalidSpender", "type": "error" }], "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "methodIdentifiers": {} }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}" }, "IERC721Errors": { "abi": [{ "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "address", "name": "owner", "type": "address" }], "name": "ERC721IncorrectOwner", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ERC721InsufficientApproval", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "approver", "type": "address" }], "name": "ERC721InvalidApprover", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }], "name": "ERC721InvalidOperator", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "ERC721InvalidOwner", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "receiver", "type": "address" }], "name": "ERC721InvalidReceiver", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }], "name": "ERC721InvalidSender", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ERC721NonexistentToken", "type": "error" }], "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "methodIdentifiers": {} }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}" } }, "@openzeppelin/contracts/token/ERC721/ERC721.sol": { "ERC721": { "abi": [{ "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "address", "name": "owner", "type": "address" }], "name": "ERC721IncorrectOwner", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ERC721InsufficientApproval", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "approver", "type": "address" }], "name": "ERC721InvalidApprover", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }], "name": "ERC721InvalidOperator", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "ERC721InvalidOwner", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "receiver", "type": "address" }], "name": "ERC721InvalidReceiver", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }], "name": "ERC721InvalidSender", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ERC721NonexistentToken", "type": "error" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "approved", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "Approval", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "operator", "type": "address" }, { "indexed": false, "internalType": "bool", "name": "approved", "type": "bool" }], "name": "ApprovalForAll", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "from", "type": "address" }, { "indexed": true, "internalType": "address", "name": "to", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "Transfer", "type": "event" }, { "inputs": [{ "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "approve", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "balanceOf", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "getApproved", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "operator", "type": "address" }], "name": "isApprovedForAll", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "name", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ownerOf", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "bytes", "name": "data", "type": "bytes" }], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "bool", "name": "approved", "type": "bool" }], "name": "setApprovalForAll", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }], "name": "supportsInterface", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "symbol", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "tokenURI", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "transferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }], "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "methodIdentifiers": { "approve(address,uint256)": "095ea7b3", "balanceOf(address)": "70a08231", "getApproved(uint256)": "081812fc", "isApprovedForAll(address,address)": "e985e9c5", "name()": "06fdde03", "ownerOf(uint256)": "6352211e", "safeTransferFrom(address,address,uint256)": "42842e0e", "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde", "setApprovalForAll(address,bool)": "a22cb465", "supportsInterface(bytes4)": "01ffc9a7", "symbol()": "95d89b41", "tokenURI(uint256)": "c87b56dd", "transferFrom(address,address,uint256)": "23b872dd" } }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}" } }, "@openzeppelin/contracts/token/ERC721/IERC721.sol": { "IERC721": { "abi": [{ "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "approved", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "Approval", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "operator", "type": "address" }, { "indexed": false, "internalType": "bool", "name": "approved", "type": "bool" }], "name": "ApprovalForAll", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "from", "type": "address" }, { "indexed": true, "internalType": "address", "name": "to", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "Transfer", "type": "event" }, { "inputs": [{ "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "approve", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "balanceOf", "outputs": [{ "internalType": "uint256", "name": "balance", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "getApproved", "outputs": [{ "internalType": "address", "name": "operator", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "operator", "type": "address" }], "name": "isApprovedForAll", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ownerOf", "outputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "bytes", "name": "data", "type": "bytes" }], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "bool", "name": "approved", "type": "bool" }], "name": "setApprovalForAll", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }], "name": "supportsInterface", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "transferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }], "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "methodIdentifiers": { "approve(address,uint256)": "095ea7b3", "balanceOf(address)": "70a08231", "getApproved(uint256)": "081812fc", "isApprovedForAll(address,address)": "e985e9c5", "ownerOf(uint256)": "6352211e", "safeTransferFrom(address,address,uint256)": "42842e0e", "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde", "setApprovalForAll(address,bool)": "a22cb465", "supportsInterface(bytes4)": "01ffc9a7", "transferFrom(address,address,uint256)": "23b872dd" } }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}" } }, "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": { "IERC721Receiver": { "abi": [{ "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "address", "name": "from", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "bytes", "name": "data", "type": "bytes" }], "name": "onERC721Received", "outputs": [{ "internalType": "bytes4", "name": "", "type": "bytes4" }], "stateMutability": "nonpayable", "type": "function" }], "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "methodIdentifiers": { "onERC721Received(address,address,uint256,bytes)": "150b7a02" } }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}" } }, "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": { "ERC721URIStorage": { "abi": [{ "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "address", "name": "owner", "type": "address" }], "name": "ERC721IncorrectOwner", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ERC721InsufficientApproval", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "approver", "type": "address" }], "name": "ERC721InvalidApprover", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }], "name": "ERC721InvalidOperator", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "ERC721InvalidOwner", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "receiver", "type": "address" }], "name": "ERC721InvalidReceiver", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }], "name": "ERC721InvalidSender", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ERC721NonexistentToken", "type": "error" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "approved", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "Approval", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "operator", "type": "address" }, { "indexed": false, "internalType": "bool", "name": "approved", "type": "bool" }], "name": "ApprovalForAll", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "uint256", "name": "_fromTokenId", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_toTokenId", "type": "uint256" }], "name": "BatchMetadataUpdate", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "uint256", "name": "_tokenId", "type": "uint256" }], "name": "MetadataUpdate", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "from", "type": "address" }, { "indexed": true, "internalType": "address", "name": "to", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "Transfer", "type": "event" }, { "inputs": [{ "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "approve", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "balanceOf", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "getApproved", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "operator", "type": "address" }], "name": "isApprovedForAll", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "name", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ownerOf", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "bytes", "name": "data", "type": "bytes" }], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "bool", "name": "approved", "type": "bool" }], "name": "setApprovalForAll", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }], "name": "supportsInterface", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "symbol", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "tokenURI", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "transferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }], "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "methodIdentifiers": { "approve(address,uint256)": "095ea7b3", "balanceOf(address)": "70a08231", "getApproved(uint256)": "081812fc", "isApprovedForAll(address,address)": "e985e9c5", "name()": "06fdde03", "ownerOf(uint256)": "6352211e", "safeTransferFrom(address,address,uint256)": "42842e0e", "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde", "setApprovalForAll(address,bool)": "a22cb465", "supportsInterface(bytes4)": "01ffc9a7", "symbol()": "95d89b41", "tokenURI(uint256)": "c87b56dd", "transferFrom(address,address,uint256)": "23b872dd" } }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}" } }, "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": { "IERC721Metadata": { "abi": [{ "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "approved", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "Approval", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "operator", "type": "address" }, { "indexed": false, "internalType": "bool", "name": "approved", "type": "bool" }], "name": "ApprovalForAll", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "from", "type": "address" }, { "indexed": true, "internalType": "address", "name": "to", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "Transfer", "type": "event" }, { "inputs": [{ "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "approve", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "balanceOf", "outputs": [{ "internalType": "uint256", "name": "balance", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "getApproved", "outputs": [{ "internalType": "address", "name": "operator", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "operator", "type": "address" }], "name": "isApprovedForAll", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "name", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ownerOf", "outputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "bytes", "name": "data", "type": "bytes" }], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "bool", "name": "approved", "type": "bool" }], "name": "setApprovalForAll", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }], "name": "supportsInterface", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "symbol", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "tokenURI", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "transferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }], "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "methodIdentifiers": { "approve(address,uint256)": "095ea7b3", "balanceOf(address)": "70a08231", "getApproved(uint256)": "081812fc", "isApprovedForAll(address,address)": "e985e9c5", "name()": "06fdde03", "ownerOf(uint256)": "6352211e", "safeTransferFrom(address,address,uint256)": "42842e0e", "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde", "setApprovalForAll(address,bool)": "a22cb465", "supportsInterface(bytes4)": "01ffc9a7", "symbol()": "95d89b41", "tokenURI(uint256)": "c87b56dd", "transferFrom(address,address,uint256)": "23b872dd" } }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}" } }, "@openzeppelin/contracts/utils/Context.sol": { "Context": { "abi": [], "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "methodIdentifiers": {} }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}" } }, "@openzeppelin/contracts/utils/Strings.sol": { "Strings": { "abi": [{ "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }, { "internalType": "uint256", "name": "length", "type": "uint256" }], "name": "StringsInsufficientHexLength", "type": "error" }], "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033", "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ", "sourceMap": "251:2847:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033", "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ", "sourceMap": "251:2847:10:-:0;;;;;;;;" }, "methodIdentifiers": {} }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}" } }, "@openzeppelin/contracts/utils/introspection/ERC165.sol": { "ERC165": { "abi": [{ "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }], "name": "supportsInterface", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }], "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "methodIdentifiers": { "supportsInterface(bytes4)": "01ffc9a7" } }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}" } }, "@openzeppelin/contracts/utils/introspection/IERC165.sol": { "IERC165": { "abi": [{ "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }], "name": "supportsInterface", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }], "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "methodIdentifiers": { "supportsInterface(bytes4)": "01ffc9a7" } }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}" } }, "@openzeppelin/contracts/utils/math/Math.sol": { "Math": { "abi": [{ "inputs": [], "name": "MathOverflowedMulDiv", "type": "error" }], "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033", "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ", "sourceMap": "203:14914:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033", "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ", "sourceMap": "203:14914:13:-:0;;;;;;;;" }, "methodIdentifiers": {} }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}" } }, "@openzeppelin/contracts/utils/math/SignedMath.sol": { "SignedMath": { "abi": [], "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033", "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ", "sourceMap": "216:1047:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033", "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ", "sourceMap": "216:1047:14:-:0;;;;;;;;" }, "methodIdentifiers": {} }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}" } }, "contracts/IndividualNFTs.sol": { "IndividualNFTs": { "abi": [{ "inputs": [{ "internalType": "address", "name": "_marketplaceContract", "type": "address" }], "stateMutability": "nonpayable", "type": "constructor" }, { "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "address", "name": "owner", "type": "address" }], "name": "ERC721IncorrectOwner", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ERC721InsufficientApproval", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "approver", "type": "address" }], "name": "ERC721InvalidApprover", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }], "name": "ERC721InvalidOperator", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "ERC721InvalidOwner", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "receiver", "type": "address" }], "name": "ERC721InvalidReceiver", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }], "name": "ERC721InvalidSender", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ERC721NonexistentToken", "type": "error" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "approved", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "Approval", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "operator", "type": "address" }, { "indexed": false, "internalType": "bool", "name": "approved", "type": "bool" }], "name": "ApprovalForAll", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "uint256", "name": "_fromTokenId", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "_toTokenId", "type": "uint256" }], "name": "BatchMetadataUpdate", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "uint256", "name": "_tokenId", "type": "uint256" }], "name": "MetadataUpdate", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "uint256", "name": "", "type": "uint256" }], "name": "NFTMinted", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "from", "type": "address" }, { "indexed": true, "internalType": "address", "name": "to", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "Transfer", "type": "event" }, { "inputs": [{ "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "approve", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "balanceOf", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "getApproved", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "operator", "type": "address" }], "name": "isApprovedForAll", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_tokenURI", "type": "string" }], "name": "mint", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "name", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ownerOf", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "bytes", "name": "data", "type": "bytes" }], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "bool", "name": "approved", "type": "bool" }], "name": "setApprovalForAll", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }], "name": "supportsInterface", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "symbol", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "tokenURI", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "transferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }], "evm": { "bytecode": { "functionDebugData": { "@_238": { "entryPoint": null, "id": 238, "parameterSlots": 2, "returnSlots": 0 }, "@_2966": { "entryPoint": null, "id": 2966, "parameterSlots": 1, "returnSlots": 0 }, "abi_decode_t_address_fromMemory": { "entryPoint": 356, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_tuple_t_address_fromMemory": { "entryPoint": 379, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "allocate_unbounded": { "entryPoint": null, "id": null, "parameterSlots": 0, "returnSlots": 1 }, "array_dataslot_t_string_storage": { "entryPoint": 587, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_length_t_string_memory_ptr": { "entryPoint": 429, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "clean_up_bytearray_end_slots_t_string_storage": { "entryPoint": 908, "id": null, "parameterSlots": 3, "returnSlots": 0 }, "cleanup_t_address": { "entryPoint": 310, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_uint160": { "entryPoint": 278, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_uint256": { "entryPoint": 723, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "clear_storage_range_t_bytes1": { "entryPoint": 869, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "convert_t_uint256_to_t_uint256": { "entryPoint": 743, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": { "entryPoint": 1063, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "divide_by_32_ceil": { "entryPoint": 608, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "extract_byte_array_length": { "entryPoint": 534, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "extract_used_part_and_set_length_of_short_byte_array": { "entryPoint": 1033, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "identity": { "entryPoint": 733, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "mask_bytes_dynamic": { "entryPoint": 1001, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "panic_error_0x22": { "entryPoint": 487, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "panic_error_0x41": { "entryPoint": 440, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "prepare_store_t_uint256": { "entryPoint": 783, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": { "entryPoint": null, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": { "entryPoint": 273, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "shift_left_dynamic": { "entryPoint": 624, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "shift_right_unsigned_dynamic": { "entryPoint": 988, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "storage_set_to_zero_t_uint256": { "entryPoint": 841, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "update_byte_slice_dynamic32": { "entryPoint": 637, "id": null, "parameterSlots": 3, "returnSlots": 1 }, "update_storage_value_t_uint256_to_t_uint256": { "entryPoint": 793, "id": null, "parameterSlots": 3, "returnSlots": 0 }, "validator_revert_t_address": { "entryPoint": 330, "id": null, "parameterSlots": 1, "returnSlots": 0 }, "zero_value_for_split_t_uint256": { "entryPoint": 836, "id": null, "parameterSlots": 0, "returnSlots": 1 } }, "generatedSources": [{ "ast": { "nodeType": "YulBlock", "src": "0:6426:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "47:35:18", "statements": [{ "nodeType": "YulAssignment", "src": "57:19:18", "value": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "73:2:18", "type": "", "value": "64" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "67:5:18" }, "nodeType": "YulFunctionCall", "src": "67:9:18" }, "variableNames": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "57:6:18" }] }] }, "name": "allocate_unbounded", "nodeType": "YulFunctionDefinition", "returnVariables": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "40:6:18", "type": "" }], "src": "7:75:18" }, { "body": { "nodeType": "YulBlock", "src": "177:28:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "194:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "197:1:18", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "187:6:18" }, "nodeType": "YulFunctionCall", "src": "187:12:18" }, "nodeType": "YulExpressionStatement", "src": "187:12:18" }] }, "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulFunctionDefinition", "src": "88:117:18" }, { "body": { "nodeType": "YulBlock", "src": "300:28:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "317:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "320:1:18", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "310:6:18" }, "nodeType": "YulFunctionCall", "src": "310:12:18" }, "nodeType": "YulExpressionStatement", "src": "310:12:18" }] }, "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db", "nodeType": "YulFunctionDefinition", "src": "211:117:18" }, { "body": { "nodeType": "YulBlock", "src": "379:81:18", "statements": [{ "nodeType": "YulAssignment", "src": "389:65:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "404:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "411:42:18", "type": "", "value": "0xffffffffffffffffffffffffffffffffffffffff" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "400:3:18" }, "nodeType": "YulFunctionCall", "src": "400:54:18" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "389:7:18" }] }] }, "name": "cleanup_t_uint160", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "361:5:18", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "371:7:18", "type": "" }], "src": "334:126:18" }, { "body": { "nodeType": "YulBlock", "src": "511:51:18", "statements": [{ "nodeType": "YulAssignment", "src": "521:35:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "550:5:18" }], "functionName": { "name": "cleanup_t_uint160", "nodeType": "YulIdentifier", "src": "532:17:18" }, "nodeType": "YulFunctionCall", "src": "532:24:18" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "521:7:18" }] }] }, "name": "cleanup_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "493:5:18", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "503:7:18", "type": "" }], "src": "466:96:18" }, { "body": { "nodeType": "YulBlock", "src": "611:79:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "668:16:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "677:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "680:1:18", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "670:6:18" }, "nodeType": "YulFunctionCall", "src": "670:12:18" }, "nodeType": "YulExpressionStatement", "src": "670:12:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "634:5:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "659:5:18" }], "functionName": { "name": "cleanup_t_address", "nodeType": "YulIdentifier", "src": "641:17:18" }, "nodeType": "YulFunctionCall", "src": "641:24:18" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "631:2:18" }, "nodeType": "YulFunctionCall", "src": "631:35:18" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "624:6:18" }, "nodeType": "YulFunctionCall", "src": "624:43:18" }, "nodeType": "YulIf", "src": "621:63:18" }] }, "name": "validator_revert_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "604:5:18", "type": "" }], "src": "568:122:18" }, { "body": { "nodeType": "YulBlock", "src": "759:80:18", "statements": [{ "nodeType": "YulAssignment", "src": "769:22:18", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "784:6:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "778:5:18" }, "nodeType": "YulFunctionCall", "src": "778:13:18" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "769:5:18" }] }, { "expression": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "827:5:18" }], "functionName": { "name": "validator_revert_t_address", "nodeType": "YulIdentifier", "src": "800:26:18" }, "nodeType": "YulFunctionCall", "src": "800:33:18" }, "nodeType": "YulExpressionStatement", "src": "800:33:18" }] }, "name": "abi_decode_t_address_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "737:6:18", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "745:3:18", "type": "" }], "returnVariables": [{ "name": "value", "nodeType": "YulTypedName", "src": "753:5:18", "type": "" }], "src": "696:143:18" }, { "body": { "nodeType": "YulBlock", "src": "922:274:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "968:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "970:77:18" }, "nodeType": "YulFunctionCall", "src": "970:79:18" }, "nodeType": "YulExpressionStatement", "src": "970:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "943:7:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "952:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "939:3:18" }, "nodeType": "YulFunctionCall", "src": "939:23:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "964:2:18", "type": "", "value": "32" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "935:3:18" }, "nodeType": "YulFunctionCall", "src": "935:32:18" }, "nodeType": "YulIf", "src": "932:119:18" }, { "nodeType": "YulBlock", "src": "1061:128:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "1076:15:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "1090:1:18", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "1080:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "1105:74:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "1151:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "1162:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1147:3:18" }, "nodeType": "YulFunctionCall", "src": "1147:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "1171:7:18" }], "functionName": { "name": "abi_decode_t_address_fromMemory", "nodeType": "YulIdentifier", "src": "1115:31:18" }, "nodeType": "YulFunctionCall", "src": "1115:64:18" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "1105:6:18" }] }] }] }, "name": "abi_decode_tuple_t_address_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "892:9:18", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "903:7:18", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "915:6:18", "type": "" }], "src": "845:351:18" }, { "body": { "nodeType": "YulBlock", "src": "1261:40:18", "statements": [{ "nodeType": "YulAssignment", "src": "1272:22:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1288:5:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "1282:5:18" }, "nodeType": "YulFunctionCall", "src": "1282:12:18" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "1272:6:18" }] }] }, "name": "array_length_t_string_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "1244:5:18", "type": "" }], "returnVariables": [{ "name": "length", "nodeType": "YulTypedName", "src": "1254:6:18", "type": "" }], "src": "1202:99:18" }, { "body": { "nodeType": "YulBlock", "src": "1335:152:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "1352:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1355:77:18", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1345:6:18" }, "nodeType": "YulFunctionCall", "src": "1345:88:18" }, "nodeType": "YulExpressionStatement", "src": "1345:88:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "1449:1:18", "type": "", "value": "4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1452:4:18", "type": "", "value": "0x41" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1442:6:18" }, "nodeType": "YulFunctionCall", "src": "1442:15:18" }, "nodeType": "YulExpressionStatement", "src": "1442:15:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "1473:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1476:4:18", "type": "", "value": "0x24" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "1466:6:18" }, "nodeType": "YulFunctionCall", "src": "1466:15:18" }, "nodeType": "YulExpressionStatement", "src": "1466:15:18" }] }, "name": "panic_error_0x41", "nodeType": "YulFunctionDefinition", "src": "1307:180:18" }, { "body": { "nodeType": "YulBlock", "src": "1521:152:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "1538:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1541:77:18", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1531:6:18" }, "nodeType": "YulFunctionCall", "src": "1531:88:18" }, "nodeType": "YulExpressionStatement", "src": "1531:88:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "1635:1:18", "type": "", "value": "4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1638:4:18", "type": "", "value": "0x22" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1628:6:18" }, "nodeType": "YulFunctionCall", "src": "1628:15:18" }, "nodeType": "YulExpressionStatement", "src": "1628:15:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "1659:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1662:4:18", "type": "", "value": "0x24" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "1652:6:18" }, "nodeType": "YulFunctionCall", "src": "1652:15:18" }, "nodeType": "YulExpressionStatement", "src": "1652:15:18" }] }, "name": "panic_error_0x22", "nodeType": "YulFunctionDefinition", "src": "1493:180:18" }, { "body": { "nodeType": "YulBlock", "src": "1730:269:18", "statements": [{ "nodeType": "YulAssignment", "src": "1740:22:18", "value": { "arguments": [{ "name": "data", "nodeType": "YulIdentifier", "src": "1754:4:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1760:1:18", "type": "", "value": "2" }], "functionName": { "name": "div", "nodeType": "YulIdentifier", "src": "1750:3:18" }, "nodeType": "YulFunctionCall", "src": "1750:12:18" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "1740:6:18" }] }, { "nodeType": "YulVariableDeclaration", "src": "1771:38:18", "value": { "arguments": [{ "name": "data", "nodeType": "YulIdentifier", "src": "1801:4:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1807:1:18", "type": "", "value": "1" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "1797:3:18" }, "nodeType": "YulFunctionCall", "src": "1797:12:18" }, "variables": [{ "name": "outOfPlaceEncoding", "nodeType": "YulTypedName", "src": "1775:18:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "1848:51:18", "statements": [{ "nodeType": "YulAssignment", "src": "1862:27:18", "value": { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "1876:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1884:4:18", "type": "", "value": "0x7f" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "1872:3:18" }, "nodeType": "YulFunctionCall", "src": "1872:17:18" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "1862:6:18" }] }] }, "condition": { "arguments": [{ "name": "outOfPlaceEncoding", "nodeType": "YulIdentifier", "src": "1828:18:18" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "1821:6:18" }, "nodeType": "YulFunctionCall", "src": "1821:26:18" }, "nodeType": "YulIf", "src": "1818:81:18" }, { "body": { "nodeType": "YulBlock", "src": "1951:42:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x22", "nodeType": "YulIdentifier", "src": "1965:16:18" }, "nodeType": "YulFunctionCall", "src": "1965:18:18" }, "nodeType": "YulExpressionStatement", "src": "1965:18:18" }] }, "condition": { "arguments": [{ "name": "outOfPlaceEncoding", "nodeType": "YulIdentifier", "src": "1915:18:18" }, { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "1938:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1946:2:18", "type": "", "value": "32" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "1935:2:18" }, "nodeType": "YulFunctionCall", "src": "1935:14:18" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "1912:2:18" }, "nodeType": "YulFunctionCall", "src": "1912:38:18" }, "nodeType": "YulIf", "src": "1909:84:18" }] }, "name": "extract_byte_array_length", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "data", "nodeType": "YulTypedName", "src": "1714:4:18", "type": "" }], "returnVariables": [{ "name": "length", "nodeType": "YulTypedName", "src": "1723:6:18", "type": "" }], "src": "1679:320:18" }, { "body": { "nodeType": "YulBlock", "src": "2059:87:18", "statements": [{ "nodeType": "YulAssignment", "src": "2069:11:18", "value": { "name": "ptr", "nodeType": "YulIdentifier", "src": "2077:3:18" }, "variableNames": [{ "name": "data", "nodeType": "YulIdentifier", "src": "2069:4:18" }] }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "2097:1:18", "type": "", "value": "0" }, { "name": "ptr", "nodeType": "YulIdentifier", "src": "2100:3:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "2090:6:18" }, "nodeType": "YulFunctionCall", "src": "2090:14:18" }, "nodeType": "YulExpressionStatement", "src": "2090:14:18" }, { "nodeType": "YulAssignment", "src": "2113:26:18", "value": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "2131:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2134:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "keccak256", "nodeType": "YulIdentifier", "src": "2121:9:18" }, "nodeType": "YulFunctionCall", "src": "2121:18:18" }, "variableNames": [{ "name": "data", "nodeType": "YulIdentifier", "src": "2113:4:18" }] }] }, "name": "array_dataslot_t_string_storage", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "ptr", "nodeType": "YulTypedName", "src": "2046:3:18", "type": "" }], "returnVariables": [{ "name": "data", "nodeType": "YulTypedName", "src": "2054:4:18", "type": "" }], "src": "2005:141:18" }, { "body": { "nodeType": "YulBlock", "src": "2196:49:18", "statements": [{ "nodeType": "YulAssignment", "src": "2206:33:18", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2224:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2231:2:18", "type": "", "value": "31" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2220:3:18" }, "nodeType": "YulFunctionCall", "src": "2220:14:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2236:2:18", "type": "", "value": "32" }], "functionName": { "name": "div", "nodeType": "YulIdentifier", "src": "2216:3:18" }, "nodeType": "YulFunctionCall", "src": "2216:23:18" }, "variableNames": [{ "name": "result", "nodeType": "YulIdentifier", "src": "2206:6:18" }] }] }, "name": "divide_by_32_ceil", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2179:5:18", "type": "" }], "returnVariables": [{ "name": "result", "nodeType": "YulTypedName", "src": "2189:6:18", "type": "" }], "src": "2152:93:18" }, { "body": { "nodeType": "YulBlock", "src": "2304:54:18", "statements": [{ "nodeType": "YulAssignment", "src": "2314:37:18", "value": { "arguments": [{ "name": "bits", "nodeType": "YulIdentifier", "src": "2339:4:18" }, { "name": "value", "nodeType": "YulIdentifier", "src": "2345:5:18" }], "functionName": { "name": "shl", "nodeType": "YulIdentifier", "src": "2335:3:18" }, "nodeType": "YulFunctionCall", "src": "2335:16:18" }, "variableNames": [{ "name": "newValue", "nodeType": "YulIdentifier", "src": "2314:8:18" }] }] }, "name": "shift_left_dynamic", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "bits", "nodeType": "YulTypedName", "src": "2279:4:18", "type": "" }, { "name": "value", "nodeType": "YulTypedName", "src": "2285:5:18", "type": "" }], "returnVariables": [{ "name": "newValue", "nodeType": "YulTypedName", "src": "2295:8:18", "type": "" }], "src": "2251:107:18" }, { "body": { "nodeType": "YulBlock", "src": "2440:317:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "2450:35:18", "value": { "arguments": [{ "name": "shiftBytes", "nodeType": "YulIdentifier", "src": "2471:10:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2483:1:18", "type": "", "value": "8" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "2467:3:18" }, "nodeType": "YulFunctionCall", "src": "2467:18:18" }, "variables": [{ "name": "shiftBits", "nodeType": "YulTypedName", "src": "2454:9:18", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "2494:109:18", "value": { "arguments": [{ "name": "shiftBits", "nodeType": "YulIdentifier", "src": "2525:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2536:66:18", "type": "", "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff" }], "functionName": { "name": "shift_left_dynamic", "nodeType": "YulIdentifier", "src": "2506:18:18" }, "nodeType": "YulFunctionCall", "src": "2506:97:18" }, "variables": [{ "name": "mask", "nodeType": "YulTypedName", "src": "2498:4:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "2612:51:18", "value": { "arguments": [{ "name": "shiftBits", "nodeType": "YulIdentifier", "src": "2643:9:18" }, { "name": "toInsert", "nodeType": "YulIdentifier", "src": "2654:8:18" }], "functionName": { "name": "shift_left_dynamic", "nodeType": "YulIdentifier", "src": "2624:18:18" }, "nodeType": "YulFunctionCall", "src": "2624:39:18" }, "variableNames": [{ "name": "toInsert", "nodeType": "YulIdentifier", "src": "2612:8:18" }] }, { "nodeType": "YulAssignment", "src": "2672:30:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2685:5:18" }, { "arguments": [{ "name": "mask", "nodeType": "YulIdentifier", "src": "2696:4:18" }], "functionName": { "name": "not", "nodeType": "YulIdentifier", "src": "2692:3:18" }, "nodeType": "YulFunctionCall", "src": "2692:9:18" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "2681:3:18" }, "nodeType": "YulFunctionCall", "src": "2681:21:18" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2672:5:18" }] }, { "nodeType": "YulAssignment", "src": "2711:40:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2724:5:18" }, { "arguments": [{ "name": "toInsert", "nodeType": "YulIdentifier", "src": "2735:8:18" }, { "name": "mask", "nodeType": "YulIdentifier", "src": "2745:4:18" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "2731:3:18" }, "nodeType": "YulFunctionCall", "src": "2731:19:18" }], "functionName": { "name": "or", "nodeType": "YulIdentifier", "src": "2721:2:18" }, "nodeType": "YulFunctionCall", "src": "2721:30:18" }, "variableNames": [{ "name": "result", "nodeType": "YulIdentifier", "src": "2711:6:18" }] }] }, "name": "update_byte_slice_dynamic32", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2401:5:18", "type": "" }, { "name": "shiftBytes", "nodeType": "YulTypedName", "src": "2408:10:18", "type": "" }, { "name": "toInsert", "nodeType": "YulTypedName", "src": "2420:8:18", "type": "" }], "returnVariables": [{ "name": "result", "nodeType": "YulTypedName", "src": "2433:6:18", "type": "" }], "src": "2364:393:18" }, { "body": { "nodeType": "YulBlock", "src": "2808:32:18", "statements": [{ "nodeType": "YulAssignment", "src": "2818:16:18", "value": { "name": "value", "nodeType": "YulIdentifier", "src": "2829:5:18" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "2818:7:18" }] }] }, "name": "cleanup_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2790:5:18", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "2800:7:18", "type": "" }], "src": "2763:77:18" }, { "body": { "nodeType": "YulBlock", "src": "2878:28:18", "statements": [{ "nodeType": "YulAssignment", "src": "2888:12:18", "value": { "name": "value", "nodeType": "YulIdentifier", "src": "2895:5:18" }, "variableNames": [{ "name": "ret", "nodeType": "YulIdentifier", "src": "2888:3:18" }] }] }, "name": "identity", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2864:5:18", "type": "" }], "returnVariables": [{ "name": "ret", "nodeType": "YulTypedName", "src": "2874:3:18", "type": "" }], "src": "2846:60:18" }, { "body": { "nodeType": "YulBlock", "src": "2972:82:18", "statements": [{ "nodeType": "YulAssignment", "src": "2982:66:18", "value": { "arguments": [{ "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3040:5:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "3022:17:18" }, "nodeType": "YulFunctionCall", "src": "3022:24:18" }], "functionName": { "name": "identity", "nodeType": "YulIdentifier", "src": "3013:8:18" }, "nodeType": "YulFunctionCall", "src": "3013:34:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "2995:17:18" }, "nodeType": "YulFunctionCall", "src": "2995:53:18" }, "variableNames": [{ "name": "converted", "nodeType": "YulIdentifier", "src": "2982:9:18" }] }] }, "name": "convert_t_uint256_to_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2952:5:18", "type": "" }], "returnVariables": [{ "name": "converted", "nodeType": "YulTypedName", "src": "2962:9:18", "type": "" }], "src": "2912:142:18" }, { "body": { "nodeType": "YulBlock", "src": "3107:28:18", "statements": [{ "nodeType": "YulAssignment", "src": "3117:12:18", "value": { "name": "value", "nodeType": "YulIdentifier", "src": "3124:5:18" }, "variableNames": [{ "name": "ret", "nodeType": "YulIdentifier", "src": "3117:3:18" }] }] }, "name": "prepare_store_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "3093:5:18", "type": "" }], "returnVariables": [{ "name": "ret", "nodeType": "YulTypedName", "src": "3103:3:18", "type": "" }], "src": "3060:75:18" }, { "body": { "nodeType": "YulBlock", "src": "3217:193:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "3227:63:18", "value": { "arguments": [{ "name": "value_0", "nodeType": "YulIdentifier", "src": "3282:7:18" }], "functionName": { "name": "convert_t_uint256_to_t_uint256", "nodeType": "YulIdentifier", "src": "3251:30:18" }, "nodeType": "YulFunctionCall", "src": "3251:39:18" }, "variables": [{ "name": "convertedValue_0", "nodeType": "YulTypedName", "src": "3231:16:18", "type": "" }] }, { "expression": { "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "3306:4:18" }, { "arguments": [{ "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "3346:4:18" }], "functionName": { "name": "sload", "nodeType": "YulIdentifier", "src": "3340:5:18" }, "nodeType": "YulFunctionCall", "src": "3340:11:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "3353:6:18" }, { "arguments": [{ "name": "convertedValue_0", "nodeType": "YulIdentifier", "src": "3385:16:18" }], "functionName": { "name": "prepare_store_t_uint256", "nodeType": "YulIdentifier", "src": "3361:23:18" }, "nodeType": "YulFunctionCall", "src": "3361:41:18" }], "functionName": { "name": "update_byte_slice_dynamic32", "nodeType": "YulIdentifier", "src": "3312:27:18" }, "nodeType": "YulFunctionCall", "src": "3312:91:18" }], "functionName": { "name": "sstore", "nodeType": "YulIdentifier", "src": "3299:6:18" }, "nodeType": "YulFunctionCall", "src": "3299:105:18" }, "nodeType": "YulExpressionStatement", "src": "3299:105:18" }] }, "name": "update_storage_value_t_uint256_to_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "slot", "nodeType": "YulTypedName", "src": "3194:4:18", "type": "" }, { "name": "offset", "nodeType": "YulTypedName", "src": "3200:6:18", "type": "" }, { "name": "value_0", "nodeType": "YulTypedName", "src": "3208:7:18", "type": "" }], "src": "3141:269:18" }, { "body": { "nodeType": "YulBlock", "src": "3465:24:18", "statements": [{ "nodeType": "YulAssignment", "src": "3475:8:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "3482:1:18", "type": "", "value": "0" }, "variableNames": [{ "name": "ret", "nodeType": "YulIdentifier", "src": "3475:3:18" }] }] }, "name": "zero_value_for_split_t_uint256", "nodeType": "YulFunctionDefinition", "returnVariables": [{ "name": "ret", "nodeType": "YulTypedName", "src": "3461:3:18", "type": "" }], "src": "3416:73:18" }, { "body": { "nodeType": "YulBlock", "src": "3548:136:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "3558:46:18", "value": { "arguments": [], "functionName": { "name": "zero_value_for_split_t_uint256", "nodeType": "YulIdentifier", "src": "3572:30:18" }, "nodeType": "YulFunctionCall", "src": "3572:32:18" }, "variables": [{ "name": "zero_0", "nodeType": "YulTypedName", "src": "3562:6:18", "type": "" }] }, { "expression": { "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "3657:4:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "3663:6:18" }, { "name": "zero_0", "nodeType": "YulIdentifier", "src": "3671:6:18" }], "functionName": { "name": "update_storage_value_t_uint256_to_t_uint256", "nodeType": "YulIdentifier", "src": "3613:43:18" }, "nodeType": "YulFunctionCall", "src": "3613:65:18" }, "nodeType": "YulExpressionStatement", "src": "3613:65:18" }] }, "name": "storage_set_to_zero_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "slot", "nodeType": "YulTypedName", "src": "3534:4:18", "type": "" }, { "name": "offset", "nodeType": "YulTypedName", "src": "3540:6:18", "type": "" }], "src": "3495:189:18" }, { "body": { "nodeType": "YulBlock", "src": "3740:136:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "3807:63:18", "statements": [{ "expression": { "arguments": [{ "name": "start", "nodeType": "YulIdentifier", "src": "3851:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3858:1:18", "type": "", "value": "0" }], "functionName": { "name": "storage_set_to_zero_t_uint256", "nodeType": "YulIdentifier", "src": "3821:29:18" }, "nodeType": "YulFunctionCall", "src": "3821:39:18" }, "nodeType": "YulExpressionStatement", "src": "3821:39:18" }] }, "condition": { "arguments": [{ "name": "start", "nodeType": "YulIdentifier", "src": "3760:5:18" }, { "name": "end", "nodeType": "YulIdentifier", "src": "3767:3:18" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "3757:2:18" }, "nodeType": "YulFunctionCall", "src": "3757:14:18" }, "nodeType": "YulForLoop", "post": { "nodeType": "YulBlock", "src": "3772:26:18", "statements": [{ "nodeType": "YulAssignment", "src": "3774:22:18", "value": { "arguments": [{ "name": "start", "nodeType": "YulIdentifier", "src": "3787:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3794:1:18", "type": "", "value": "1" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3783:3:18" }, "nodeType": "YulFunctionCall", "src": "3783:13:18" }, "variableNames": [{ "name": "start", "nodeType": "YulIdentifier", "src": "3774:5:18" }] }] }, "pre": { "nodeType": "YulBlock", "src": "3754:2:18", "statements": [] }, "src": "3750:120:18" }] }, "name": "clear_storage_range_t_bytes1", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "start", "nodeType": "YulTypedName", "src": "3728:5:18", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "3735:3:18", "type": "" }], "src": "3690:186:18" }, { "body": { "nodeType": "YulBlock", "src": "3961:464:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "3987:431:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "4001:54:18", "value": { "arguments": [{ "name": "array", "nodeType": "YulIdentifier", "src": "4049:5:18" }], "functionName": { "name": "array_dataslot_t_string_storage", "nodeType": "YulIdentifier", "src": "4017:31:18" }, "nodeType": "YulFunctionCall", "src": "4017:38:18" }, "variables": [{ "name": "dataArea", "nodeType": "YulTypedName", "src": "4005:8:18", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "4068:63:18", "value": { "arguments": [{ "name": "dataArea", "nodeType": "YulIdentifier", "src": "4091:8:18" }, { "arguments": [{ "name": "startIndex", "nodeType": "YulIdentifier", "src": "4119:10:18" }], "functionName": { "name": "divide_by_32_ceil", "nodeType": "YulIdentifier", "src": "4101:17:18" }, "nodeType": "YulFunctionCall", "src": "4101:29:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4087:3:18" }, "nodeType": "YulFunctionCall", "src": "4087:44:18" }, "variables": [{ "name": "deleteStart", "nodeType": "YulTypedName", "src": "4072:11:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "4288:27:18", "statements": [{ "nodeType": "YulAssignment", "src": "4290:23:18", "value": { "name": "dataArea", "nodeType": "YulIdentifier", "src": "4305:8:18" }, "variableNames": [{ "name": "deleteStart", "nodeType": "YulIdentifier", "src": "4290:11:18" }] }] }, "condition": { "arguments": [{ "name": "startIndex", "nodeType": "YulIdentifier", "src": "4272:10:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4284:2:18", "type": "", "value": "32" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "4269:2:18" }, "nodeType": "YulFunctionCall", "src": "4269:18:18" }, "nodeType": "YulIf", "src": "4266:49:18" }, { "expression": { "arguments": [{ "name": "deleteStart", "nodeType": "YulIdentifier", "src": "4357:11:18" }, { "arguments": [{ "name": "dataArea", "nodeType": "YulIdentifier", "src": "4374:8:18" }, { "arguments": [{ "name": "len", "nodeType": "YulIdentifier", "src": "4402:3:18" }], "functionName": { "name": "divide_by_32_ceil", "nodeType": "YulIdentifier", "src": "4384:17:18" }, "nodeType": "YulFunctionCall", "src": "4384:22:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4370:3:18" }, "nodeType": "YulFunctionCall", "src": "4370:37:18" }], "functionName": { "name": "clear_storage_range_t_bytes1", "nodeType": "YulIdentifier", "src": "4328:28:18" }, "nodeType": "YulFunctionCall", "src": "4328:80:18" }, "nodeType": "YulExpressionStatement", "src": "4328:80:18" }] }, "condition": { "arguments": [{ "name": "len", "nodeType": "YulIdentifier", "src": "3978:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3983:2:18", "type": "", "value": "31" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "3975:2:18" }, "nodeType": "YulFunctionCall", "src": "3975:11:18" }, "nodeType": "YulIf", "src": "3972:446:18" }] }, "name": "clean_up_bytearray_end_slots_t_string_storage", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "array", "nodeType": "YulTypedName", "src": "3937:5:18", "type": "" }, { "name": "len", "nodeType": "YulTypedName", "src": "3944:3:18", "type": "" }, { "name": "startIndex", "nodeType": "YulTypedName", "src": "3949:10:18", "type": "" }], "src": "3882:543:18" }, { "body": { "nodeType": "YulBlock", "src": "4494:54:18", "statements": [{ "nodeType": "YulAssignment", "src": "4504:37:18", "value": { "arguments": [{ "name": "bits", "nodeType": "YulIdentifier", "src": "4529:4:18" }, { "name": "value", "nodeType": "YulIdentifier", "src": "4535:5:18" }], "functionName": { "name": "shr", "nodeType": "YulIdentifier", "src": "4525:3:18" }, "nodeType": "YulFunctionCall", "src": "4525:16:18" }, "variableNames": [{ "name": "newValue", "nodeType": "YulIdentifier", "src": "4504:8:18" }] }] }, "name": "shift_right_unsigned_dynamic", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "bits", "nodeType": "YulTypedName", "src": "4469:4:18", "type": "" }, { "name": "value", "nodeType": "YulTypedName", "src": "4475:5:18", "type": "" }], "returnVariables": [{ "name": "newValue", "nodeType": "YulTypedName", "src": "4485:8:18", "type": "" }], "src": "4431:117:18" }, { "body": { "nodeType": "YulBlock", "src": "4605:118:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "4615:68:18", "value": { "arguments": [{ "arguments": [{ "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "4664:1:18", "type": "", "value": "8" }, { "name": "bytes", "nodeType": "YulIdentifier", "src": "4667:5:18" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "4660:3:18" }, "nodeType": "YulFunctionCall", "src": "4660:13:18" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "4679:1:18", "type": "", "value": "0" }], "functionName": { "name": "not", "nodeType": "YulIdentifier", "src": "4675:3:18" }, "nodeType": "YulFunctionCall", "src": "4675:6:18" }], "functionName": { "name": "shift_right_unsigned_dynamic", "nodeType": "YulIdentifier", "src": "4631:28:18" }, "nodeType": "YulFunctionCall", "src": "4631:51:18" }], "functionName": { "name": "not", "nodeType": "YulIdentifier", "src": "4627:3:18" }, "nodeType": "YulFunctionCall", "src": "4627:56:18" }, "variables": [{ "name": "mask", "nodeType": "YulTypedName", "src": "4619:4:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "4692:25:18", "value": { "arguments": [{ "name": "data", "nodeType": "YulIdentifier", "src": "4706:4:18" }, { "name": "mask", "nodeType": "YulIdentifier", "src": "4712:4:18" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "4702:3:18" }, "nodeType": "YulFunctionCall", "src": "4702:15:18" }, "variableNames": [{ "name": "result", "nodeType": "YulIdentifier", "src": "4692:6:18" }] }] }, "name": "mask_bytes_dynamic", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "data", "nodeType": "YulTypedName", "src": "4582:4:18", "type": "" }, { "name": "bytes", "nodeType": "YulTypedName", "src": "4588:5:18", "type": "" }], "returnVariables": [{ "name": "result", "nodeType": "YulTypedName", "src": "4598:6:18", "type": "" }], "src": "4554:169:18" }, { "body": { "nodeType": "YulBlock", "src": "4809:214:18", "statements": [{ "nodeType": "YulAssignment", "src": "4942:37:18", "value": { "arguments": [{ "name": "data", "nodeType": "YulIdentifier", "src": "4969:4:18" }, { "name": "len", "nodeType": "YulIdentifier", "src": "4975:3:18" }], "functionName": { "name": "mask_bytes_dynamic", "nodeType": "YulIdentifier", "src": "4950:18:18" }, "nodeType": "YulFunctionCall", "src": "4950:29:18" }, "variableNames": [{ "name": "data", "nodeType": "YulIdentifier", "src": "4942:4:18" }] }, { "nodeType": "YulAssignment", "src": "4988:29:18", "value": { "arguments": [{ "name": "data", "nodeType": "YulIdentifier", "src": "4999:4:18" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "5009:1:18", "type": "", "value": "2" }, { "name": "len", "nodeType": "YulIdentifier", "src": "5012:3:18" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "5005:3:18" }, "nodeType": "YulFunctionCall", "src": "5005:11:18" }], "functionName": { "name": "or", "nodeType": "YulIdentifier", "src": "4996:2:18" }, "nodeType": "YulFunctionCall", "src": "4996:21:18" }, "variableNames": [{ "name": "used", "nodeType": "YulIdentifier", "src": "4988:4:18" }] }] }, "name": "extract_used_part_and_set_length_of_short_byte_array", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "data", "nodeType": "YulTypedName", "src": "4790:4:18", "type": "" }, { "name": "len", "nodeType": "YulTypedName", "src": "4796:3:18", "type": "" }], "returnVariables": [{ "name": "used", "nodeType": "YulTypedName", "src": "4804:4:18", "type": "" }], "src": "4728:295:18" }, { "body": { "nodeType": "YulBlock", "src": "5120:1303:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "5131:51:18", "value": { "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "5178:3:18" }], "functionName": { "name": "array_length_t_string_memory_ptr", "nodeType": "YulIdentifier", "src": "5145:32:18" }, "nodeType": "YulFunctionCall", "src": "5145:37:18" }, "variables": [{ "name": "newLen", "nodeType": "YulTypedName", "src": "5135:6:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "5267:22:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x41", "nodeType": "YulIdentifier", "src": "5269:16:18" }, "nodeType": "YulFunctionCall", "src": "5269:18:18" }, "nodeType": "YulExpressionStatement", "src": "5269:18:18" }] }, "condition": { "arguments": [{ "name": "newLen", "nodeType": "YulIdentifier", "src": "5239:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "5247:18:18", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "5236:2:18" }, "nodeType": "YulFunctionCall", "src": "5236:30:18" }, "nodeType": "YulIf", "src": "5233:56:18" }, { "nodeType": "YulVariableDeclaration", "src": "5299:52:18", "value": { "arguments": [{ "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "5345:4:18" }], "functionName": { "name": "sload", "nodeType": "YulIdentifier", "src": "5339:5:18" }, "nodeType": "YulFunctionCall", "src": "5339:11:18" }], "functionName": { "name": "extract_byte_array_length", "nodeType": "YulIdentifier", "src": "5313:25:18" }, "nodeType": "YulFunctionCall", "src": "5313:38:18" }, "variables": [{ "name": "oldLen", "nodeType": "YulTypedName", "src": "5303:6:18", "type": "" }] }, { "expression": { "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "5444:4:18" }, { "name": "oldLen", "nodeType": "YulIdentifier", "src": "5450:6:18" }, { "name": "newLen", "nodeType": "YulIdentifier", "src": "5458:6:18" }], "functionName": { "name": "clean_up_bytearray_end_slots_t_string_storage", "nodeType": "YulIdentifier", "src": "5398:45:18" }, "nodeType": "YulFunctionCall", "src": "5398:67:18" }, "nodeType": "YulExpressionStatement", "src": "5398:67:18" }, { "nodeType": "YulVariableDeclaration", "src": "5475:18:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "5492:1:18", "type": "", "value": "0" }, "variables": [{ "name": "srcOffset", "nodeType": "YulTypedName", "src": "5479:9:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "5503:17:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "5516:4:18", "type": "", "value": "0x20" }, "variableNames": [{ "name": "srcOffset", "nodeType": "YulIdentifier", "src": "5503:9:18" }] }, { "cases": [{ "body": { "nodeType": "YulBlock", "src": "5567:611:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "5581:37:18", "value": { "arguments": [{ "name": "newLen", "nodeType": "YulIdentifier", "src": "5600:6:18" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "5612:4:18", "type": "", "value": "0x1f" }], "functionName": { "name": "not", "nodeType": "YulIdentifier", "src": "5608:3:18" }, "nodeType": "YulFunctionCall", "src": "5608:9:18" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "5596:3:18" }, "nodeType": "YulFunctionCall", "src": "5596:22:18" }, "variables": [{ "name": "loopEnd", "nodeType": "YulTypedName", "src": "5585:7:18", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "5632:51:18", "value": { "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "5678:4:18" }], "functionName": { "name": "array_dataslot_t_string_storage", "nodeType": "YulIdentifier", "src": "5646:31:18" }, "nodeType": "YulFunctionCall", "src": "5646:37:18" }, "variables": [{ "name": "dstPtr", "nodeType": "YulTypedName", "src": "5636:6:18", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "5696:10:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "5705:1:18", "type": "", "value": "0" }, "variables": [{ "name": "i", "nodeType": "YulTypedName", "src": "5700:1:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "5764:163:18", "statements": [{ "expression": { "arguments": [{ "name": "dstPtr", "nodeType": "YulIdentifier", "src": "5789:6:18" }, { "arguments": [{ "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "5807:3:18" }, { "name": "srcOffset", "nodeType": "YulIdentifier", "src": "5812:9:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "5803:3:18" }, "nodeType": "YulFunctionCall", "src": "5803:19:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "5797:5:18" }, "nodeType": "YulFunctionCall", "src": "5797:26:18" }], "functionName": { "name": "sstore", "nodeType": "YulIdentifier", "src": "5782:6:18" }, "nodeType": "YulFunctionCall", "src": "5782:42:18" }, "nodeType": "YulExpressionStatement", "src": "5782:42:18" }, { "nodeType": "YulAssignment", "src": "5841:24:18", "value": { "arguments": [{ "name": "dstPtr", "nodeType": "YulIdentifier", "src": "5855:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "5863:1:18", "type": "", "value": "1" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "5851:3:18" }, "nodeType": "YulFunctionCall", "src": "5851:14:18" }, "variableNames": [{ "name": "dstPtr", "nodeType": "YulIdentifier", "src": "5841:6:18" }] }, { "nodeType": "YulAssignment", "src": "5882:31:18", "value": { "arguments": [{ "name": "srcOffset", "nodeType": "YulIdentifier", "src": "5899:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "5910:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "5895:3:18" }, "nodeType": "YulFunctionCall", "src": "5895:18:18" }, "variableNames": [{ "name": "srcOffset", "nodeType": "YulIdentifier", "src": "5882:9:18" }] }] }, "condition": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "5730:1:18" }, { "name": "loopEnd", "nodeType": "YulIdentifier", "src": "5733:7:18" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "5727:2:18" }, "nodeType": "YulFunctionCall", "src": "5727:14:18" }, "nodeType": "YulForLoop", "post": { "nodeType": "YulBlock", "src": "5742:21:18", "statements": [{ "nodeType": "YulAssignment", "src": "5744:17:18", "value": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "5753:1:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "5756:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "5749:3:18" }, "nodeType": "YulFunctionCall", "src": "5749:12:18" }, "variableNames": [{ "name": "i", "nodeType": "YulIdentifier", "src": "5744:1:18" }] }] }, "pre": { "nodeType": "YulBlock", "src": "5723:3:18", "statements": [] }, "src": "5719:208:18" }, { "body": { "nodeType": "YulBlock", "src": "5963:156:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "5981:43:18", "value": { "arguments": [{ "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "6008:3:18" }, { "name": "srcOffset", "nodeType": "YulIdentifier", "src": "6013:9:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6004:3:18" }, "nodeType": "YulFunctionCall", "src": "6004:19:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "5998:5:18" }, "nodeType": "YulFunctionCall", "src": "5998:26:18" }, "variables": [{ "name": "lastValue", "nodeType": "YulTypedName", "src": "5985:9:18", "type": "" }] }, { "expression": { "arguments": [{ "name": "dstPtr", "nodeType": "YulIdentifier", "src": "6048:6:18" }, { "arguments": [{ "name": "lastValue", "nodeType": "YulIdentifier", "src": "6075:9:18" }, { "arguments": [{ "name": "newLen", "nodeType": "YulIdentifier", "src": "6090:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6098:4:18", "type": "", "value": "0x1f" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "6086:3:18" }, "nodeType": "YulFunctionCall", "src": "6086:17:18" }], "functionName": { "name": "mask_bytes_dynamic", "nodeType": "YulIdentifier", "src": "6056:18:18" }, "nodeType": "YulFunctionCall", "src": "6056:48:18" }], "functionName": { "name": "sstore", "nodeType": "YulIdentifier", "src": "6041:6:18" }, "nodeType": "YulFunctionCall", "src": "6041:64:18" }, "nodeType": "YulExpressionStatement", "src": "6041:64:18" }] }, "condition": { "arguments": [{ "name": "loopEnd", "nodeType": "YulIdentifier", "src": "5946:7:18" }, { "name": "newLen", "nodeType": "YulIdentifier", "src": "5955:6:18" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "5943:2:18" }, "nodeType": "YulFunctionCall", "src": "5943:19:18" }, "nodeType": "YulIf", "src": "5940:179:18" }, { "expression": { "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "6139:4:18" }, { "arguments": [{ "arguments": [{ "name": "newLen", "nodeType": "YulIdentifier", "src": "6153:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6161:1:18", "type": "", "value": "2" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "6149:3:18" }, "nodeType": "YulFunctionCall", "src": "6149:14:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6165:1:18", "type": "", "value": "1" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6145:3:18" }, "nodeType": "YulFunctionCall", "src": "6145:22:18" }], "functionName": { "name": "sstore", "nodeType": "YulIdentifier", "src": "6132:6:18" }, "nodeType": "YulFunctionCall", "src": "6132:36:18" }, "nodeType": "YulExpressionStatement", "src": "6132:36:18" }] }, "nodeType": "YulCase", "src": "5560:618:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "5565:1:18", "type": "", "value": "1" } }, { "body": { "nodeType": "YulBlock", "src": "6195:222:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "6209:14:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "6222:1:18", "type": "", "value": "0" }, "variables": [{ "name": "value", "nodeType": "YulTypedName", "src": "6213:5:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "6246:67:18", "statements": [{ "nodeType": "YulAssignment", "src": "6264:35:18", "value": { "arguments": [{ "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "6283:3:18" }, { "name": "srcOffset", "nodeType": "YulIdentifier", "src": "6288:9:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6279:3:18" }, "nodeType": "YulFunctionCall", "src": "6279:19:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "6273:5:18" }, "nodeType": "YulFunctionCall", "src": "6273:26:18" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "6264:5:18" }] }] }, "condition": { "name": "newLen", "nodeType": "YulIdentifier", "src": "6239:6:18" }, "nodeType": "YulIf", "src": "6236:77:18" }, { "expression": { "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "6333:4:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "6392:5:18" }, { "name": "newLen", "nodeType": "YulIdentifier", "src": "6399:6:18" }], "functionName": { "name": "extract_used_part_and_set_length_of_short_byte_array", "nodeType": "YulIdentifier", "src": "6339:52:18" }, "nodeType": "YulFunctionCall", "src": "6339:67:18" }], "functionName": { "name": "sstore", "nodeType": "YulIdentifier", "src": "6326:6:18" }, "nodeType": "YulFunctionCall", "src": "6326:81:18" }, "nodeType": "YulExpressionStatement", "src": "6326:81:18" }] }, "nodeType": "YulCase", "src": "6187:230:18", "value": "default" }], "expression": { "arguments": [{ "name": "newLen", "nodeType": "YulIdentifier", "src": "5540:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "5548:2:18", "type": "", "value": "31" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "5537:2:18" }, "nodeType": "YulFunctionCall", "src": "5537:14:18" }, "nodeType": "YulSwitch", "src": "5530:887:18" }] }, "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "slot", "nodeType": "YulTypedName", "src": "5109:4:18", "type": "" }, { "name": "src", "nodeType": "YulTypedName", "src": "5115:3:18", "type": "" }], "src": "5028:1395:18" }] }, "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n", "id": 18, "language": "Yul", "name": "#utility.yul" }], "linkReferences": {}, "object": "60806040523480156200001157600080fd5b506040516200294e3803806200294e83398181016040528101906200003791906200017b565b6040518060400160405280601581526020017f426f726564205065747320596163687420436c756200000000000000000000008152506040518060400160405280600481526020017f42505943000000000000000000000000000000000000000000000000000000008152508160009081620000b4919062000427565b508060019081620000c6919062000427565b50505080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200050e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001438262000116565b9050919050565b620001558162000136565b81146200016157600080fd5b50565b60008151905062000175816200014a565b92915050565b60006020828403121562000194576200019362000111565b5b6000620001a48482850162000164565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200022f57607f821691505b602082108103620002455762000244620001e7565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002af7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000270565b620002bb868362000270565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200030862000302620002fc84620002d3565b620002dd565b620002d3565b9050919050565b6000819050919050565b6200032483620002e7565b6200033c62000333826200030f565b8484546200027d565b825550505050565b600090565b6200035362000344565b6200036081848462000319565b505050565b5b8181101562000388576200037c60008262000349565b60018101905062000366565b5050565b601f821115620003d757620003a1816200024b565b620003ac8462000260565b81016020851015620003bc578190505b620003d4620003cb8562000260565b83018262000365565b50505b505050565b600082821c905092915050565b6000620003fc60001984600802620003dc565b1980831691505092915050565b6000620004178383620003e9565b9150826002028217905092915050565b6200043282620001ad565b67ffffffffffffffff8111156200044e576200044d620001b8565b5b6200045a825462000216565b620004678282856200038c565b600060209050601f8311600181146200049f57600084156200048a578287015190505b62000496858262000409565b86555062000506565b601f198416620004af866200024b565b60005b82811015620004d957848901518255600182019150602085019450602081019050620004b2565b86831015620004f95784890151620004f5601f891682620003e9565b8355505b6001600288020188555050505b505050505050565b612430806200051e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063b88d4fde11610066578063b88d4fde1461025b578063c87b56dd14610277578063d85d3d27146102a7578063e985e9c5146102c3576100ea565b806370a08231146101f157806395d89b4114610221578063a22cb4651461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806323b872dd1461018957806342842e0e146101a55780636352211e146101c1576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b6101096004803603810190610104919061189b565b6102f3565b60405161011691906118e3565b60405180910390f35b610127610354565b604051610134919061198e565b60405180910390f35b610157600480360381019061015291906119e6565b6103e6565b6040516101649190611a54565b60405180910390f35b61018760048036038101906101829190611a9b565b610402565b005b6101a3600480360381019061019e9190611adb565b610418565b005b6101bf60048036038101906101ba9190611adb565b61051a565b005b6101db60048036038101906101d691906119e6565b61053a565b6040516101e89190611a54565b60405180910390f35b61020b60048036038101906102069190611b2e565b61054c565b6040516102189190611b6a565b60405180910390f35b610229610606565b604051610236919061198e565b60405180910390f35b61025960048036038101906102549190611bb1565b610698565b005b61027560048036038101906102709190611d26565b6106ae565b005b610291600480360381019061028c91906119e6565b6106cb565b60405161029e919061198e565b60405180910390f35b6102c160048036038101906102bc9190611e4a565b6107de565b005b6102dd60048036038101906102d89190611e93565b610879565b6040516102ea91906118e3565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061034d575061034c8261090d565b5b9050919050565b60606000805461036390611f02565b80601f016020809104026020016040519081016040528092919081815260200182805461038f90611f02565b80156103dc5780601f106103b1576101008083540402835291602001916103dc565b820191906000526020600020905b8154815290600101906020018083116103bf57829003601f168201915b5050505050905090565b60006103f1826109ef565b506103fb82610a77565b9050919050565b610414828261040f610ab4565b610abc565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361048a5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104819190611a54565b60405180910390fd5b600061049e8383610499610ab4565b610ace565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610514578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161050b93929190611f33565b60405180910390fd5b50505050565b610535838383604051806020016040528060008152506106ae565b505050565b6000610545826109ef565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105bf5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016105b69190611a54565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461061590611f02565b80601f016020809104026020016040519081016040528092919081815260200182805461064190611f02565b801561068e5780601f106106635761010080835404028352916020019161068e565b820191906000526020600020905b81548152906001019060200180831161067157829003601f168201915b5050505050905090565b6106aa6106a3610ab4565b8383610ce8565b5050565b6106b9848484610418565b6106c584848484610e57565b50505050565b60606106d6826109ef565b5060006006600084815260200190815260200160002080546106f790611f02565b80601f016020809104026020016040519081016040528092919081815260200182805461072390611f02565b80156107705780601f1061074557610100808354040283529160200191610770565b820191906000526020600020905b81548152906001019060200180831161075357829003601f168201915b50505050509050600061078161100e565b905060008151036107965781925050506107d9565b6000825111156107cb5780826040516020016107b3929190611fa6565b604051602081830303815290604052925050506107d9565b6107d484611025565b925050505b919050565b600760008154809291906107f190611ff9565b919050555060006007549050610807338261108e565b61081181836110ac565b61083e600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001610698565b7fd9dc24857f317ed9abbbb42e920ede0104231eb1d3d70236a74887ffaf1598688160405161086d9190611b6a565b60405180910390a15050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109d857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806109e857506109e782611108565b5b9050919050565b6000806109fb83611172565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a6e57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a659190611b6a565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610ac983838360016111af565b505050565b600080610ada84611172565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b1c57610b1b818486611374565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bad57610b5e6000856000806111af565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610c30576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d5957816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610d509190611a54565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e4a91906118e3565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611008578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610e9b610ab4565b8685856040518563ffffffff1660e01b8152600401610ebd9493929190612096565b6020604051808303816000875af1925050508015610ef957506040513d601f19601f82011682018060405250810190610ef691906120f7565b60015b610f7d573d8060008114610f29576040519150601f19603f3d011682016040523d82523d6000602084013e610f2e565b606091505b506000815103610f7557836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610f6c9190611a54565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461100657836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610ffd9190611a54565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b6060611030826109ef565b50600061103b61100e565b9050600081511161105b5760405180602001604052806000815250611086565b8061106584611438565b604051602001611076929190611fa6565b6040516020818303038152906040525b915050919050565b6110a8828260405180602001604052806000815250611506565b5050565b806006600084815260200190815260200160002090816110cc91906122d0565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516110fc9190611b6a565b60405180910390a15050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806111e85750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561131c5760006111f8846109ef565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561126357508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561127657506112748184610879565b155b156112b857826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016112af9190611a54565b60405180910390fd5b811561131a57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61137f838383611522565b61143357600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113f457806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016113eb9190611b6a565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161142a9291906123a2565b60405180910390fd5b505050565b606060006001611447846115e3565b01905060008167ffffffffffffffff81111561146657611465611bfb565b5b6040519080825280601f01601f1916602001820160405280156114985781602001600182028036833780820191505090505b509050600082602001820190505b6001156114fb578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816114ef576114ee6123cb565b5b049450600085036114a6575b819350505050919050565b6115108383611736565b61151d6000848484610e57565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115da57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061159b575061159a8484610879565b5b806115d957508273ffffffffffffffffffffffffffffffffffffffff166115c183610a77565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611641577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611637576116366123cb565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061167e576d04ee2d6d415b85acef81000000008381611674576116736123cb565b5b0492506020810190505b662386f26fc1000083106116ad57662386f26fc1000083816116a3576116a26123cb565b5b0492506010810190505b6305f5e10083106116d6576305f5e10083816116cc576116cb6123cb565b5b0492506008810190505b61271083106116fb5761271083816116f1576116f06123cb565b5b0492506004810190505b6064831061171e5760648381611714576117136123cb565b5b0492506002810190505b600a831061172d576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117a85760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161179f9190611a54565b60405180910390fd5b60006117b683836000610ace565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461182a5760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016118219190611a54565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61187881611843565b811461188357600080fd5b50565b6000813590506118958161186f565b92915050565b6000602082840312156118b1576118b0611839565b5b60006118bf84828501611886565b91505092915050565b60008115159050919050565b6118dd816118c8565b82525050565b60006020820190506118f860008301846118d4565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561193857808201518184015260208101905061191d565b60008484015250505050565b6000601f19601f8301169050919050565b6000611960826118fe565b61196a8185611909565b935061197a81856020860161191a565b61198381611944565b840191505092915050565b600060208201905081810360008301526119a88184611955565b905092915050565b6000819050919050565b6119c3816119b0565b81146119ce57600080fd5b50565b6000813590506119e0816119ba565b92915050565b6000602082840312156119fc576119fb611839565b5b6000611a0a848285016119d1565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a3e82611a13565b9050919050565b611a4e81611a33565b82525050565b6000602082019050611a696000830184611a45565b92915050565b611a7881611a33565b8114611a8357600080fd5b50565b600081359050611a9581611a6f565b92915050565b60008060408385031215611ab257611ab1611839565b5b6000611ac085828601611a86565b9250506020611ad1858286016119d1565b9150509250929050565b600080600060608486031215611af457611af3611839565b5b6000611b0286828701611a86565b9350506020611b1386828701611a86565b9250506040611b24868287016119d1565b9150509250925092565b600060208284031215611b4457611b43611839565b5b6000611b5284828501611a86565b91505092915050565b611b64816119b0565b82525050565b6000602082019050611b7f6000830184611b5b565b92915050565b611b8e816118c8565b8114611b9957600080fd5b50565b600081359050611bab81611b85565b92915050565b60008060408385031215611bc857611bc7611839565b5b6000611bd685828601611a86565b9250506020611be785828601611b9c565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c3382611944565b810181811067ffffffffffffffff82111715611c5257611c51611bfb565b5b80604052505050565b6000611c6561182f565b9050611c718282611c2a565b919050565b600067ffffffffffffffff821115611c9157611c90611bfb565b5b611c9a82611944565b9050602081019050919050565b82818337600083830152505050565b6000611cc9611cc484611c76565b611c5b565b905082815260208101848484011115611ce557611ce4611bf6565b5b611cf0848285611ca7565b509392505050565b600082601f830112611d0d57611d0c611bf1565b5b8135611d1d848260208601611cb6565b91505092915050565b60008060008060808587031215611d4057611d3f611839565b5b6000611d4e87828801611a86565b9450506020611d5f87828801611a86565b9350506040611d70878288016119d1565b925050606085013567ffffffffffffffff811115611d9157611d9061183e565b5b611d9d87828801611cf8565b91505092959194509250565b600067ffffffffffffffff821115611dc457611dc3611bfb565b5b611dcd82611944565b9050602081019050919050565b6000611ded611de884611da9565b611c5b565b905082815260208101848484011115611e0957611e08611bf6565b5b611e14848285611ca7565b509392505050565b600082601f830112611e3157611e30611bf1565b5b8135611e41848260208601611dda565b91505092915050565b600060208284031215611e6057611e5f611839565b5b600082013567ffffffffffffffff811115611e7e57611e7d61183e565b5b611e8a84828501611e1c565b91505092915050565b60008060408385031215611eaa57611ea9611839565b5b6000611eb885828601611a86565b9250506020611ec985828601611a86565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f1a57607f821691505b602082108103611f2d57611f2c611ed3565b5b50919050565b6000606082019050611f486000830186611a45565b611f556020830185611b5b565b611f626040830184611a45565b949350505050565b600081905092915050565b6000611f80826118fe565b611f8a8185611f6a565b9350611f9a81856020860161191a565b80840191505092915050565b6000611fb28285611f75565b9150611fbe8284611f75565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612004826119b0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361203657612035611fca565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b600061206882612041565b612072818561204c565b935061208281856020860161191a565b61208b81611944565b840191505092915050565b60006080820190506120ab6000830187611a45565b6120b86020830186611a45565b6120c56040830185611b5b565b81810360608301526120d7818461205d565b905095945050505050565b6000815190506120f18161186f565b92915050565b60006020828403121561210d5761210c611839565b5b600061211b848285016120e2565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026121867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612149565b6121908683612149565b95508019841693508086168417925050509392505050565b6000819050919050565b60006121cd6121c86121c3846119b0565b6121a8565b6119b0565b9050919050565b6000819050919050565b6121e7836121b2565b6121fb6121f3826121d4565b848454612156565b825550505050565b600090565b612210612203565b61221b8184846121de565b505050565b5b8181101561223f57612234600082612208565b600181019050612221565b5050565b601f8211156122845761225581612124565b61225e84612139565b8101602085101561226d578190505b61228161227985612139565b830182612220565b50505b505050565b600082821c905092915050565b60006122a760001984600802612289565b1980831691505092915050565b60006122c08383612296565b9150826002028217905092915050565b6122d9826118fe565b67ffffffffffffffff8111156122f2576122f1611bfb565b5b6122fc8254611f02565b612307828285612243565b600060209050601f83116001811461233a5760008415612328578287015190505b61233285826122b4565b86555061239a565b601f19841661234886612124565b60005b828110156123705784890151825560018201915060208501945060208101905061234b565b8683101561238d5784890151612389601f891682612296565b8355505b6001600288020188555050505b505050505050565b60006040820190506123b76000830185611a45565b6123c46020830184611b5b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122038f2bcd45226c56756d85279035b110105c2acbeaa65d14ae2c73646ea70826064736f6c63430008140033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x294E CODESIZE SUB DUP1 PUSH3 0x294E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x17B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426F726564205065747320596163687420436C75620000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4250594300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0x427 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x427 JUMP JUMPDEST POP POP POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x50E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x143 DUP3 PUSH3 0x116 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x155 DUP2 PUSH3 0x136 JUMP JUMPDEST DUP2 EQ PUSH3 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x175 DUP2 PUSH3 0x14A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x194 JUMPI PUSH3 0x193 PUSH3 0x111 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1A4 DUP5 DUP3 DUP6 ADD PUSH3 0x164 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x22F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x245 JUMPI PUSH3 0x244 PUSH3 0x1E7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x2AF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x270 JUMP JUMPDEST PUSH3 0x2BB DUP7 DUP4 PUSH3 0x270 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x308 PUSH3 0x302 PUSH3 0x2FC DUP5 PUSH3 0x2D3 JUMP JUMPDEST PUSH3 0x2DD JUMP JUMPDEST PUSH3 0x2D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x324 DUP4 PUSH3 0x2E7 JUMP JUMPDEST PUSH3 0x33C PUSH3 0x333 DUP3 PUSH3 0x30F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x27D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x353 PUSH3 0x344 JUMP JUMPDEST PUSH3 0x360 DUP2 DUP5 DUP5 PUSH3 0x319 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x388 JUMPI PUSH3 0x37C PUSH1 0x0 DUP3 PUSH3 0x349 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x366 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3D7 JUMPI PUSH3 0x3A1 DUP2 PUSH3 0x24B JUMP JUMPDEST PUSH3 0x3AC DUP5 PUSH3 0x260 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3BC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x3D4 PUSH3 0x3CB DUP6 PUSH3 0x260 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x365 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3FC PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x3DC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x417 DUP4 DUP4 PUSH3 0x3E9 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x432 DUP3 PUSH3 0x1AD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x44E JUMPI PUSH3 0x44D PUSH3 0x1B8 JUMP JUMPDEST JUMPDEST PUSH3 0x45A DUP3 SLOAD PUSH3 0x216 JUMP JUMPDEST PUSH3 0x467 DUP3 DUP3 DUP6 PUSH3 0x38C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x49F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x48A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x496 DUP6 DUP3 PUSH3 0x409 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x506 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4AF DUP7 PUSH3 0x24B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4D9 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4B2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x4F9 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x4F5 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x3E9 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2430 DUP1 PUSH3 0x51E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xD85D3D27 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH2 0x51A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x1E93 JUMP JUMPDEST PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x34D JUMPI POP PUSH2 0x34C DUP3 PUSH2 0x90D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x363 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38F SWAP1 PUSH2 0x1F02 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F1 DUP3 PUSH2 0x9EF JUMP JUMPDEST POP PUSH2 0x3FB DUP3 PUSH2 0xA77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x414 DUP3 DUP3 PUSH2 0x40F PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0xABC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x48A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x49E DUP4 DUP4 PUSH2 0x499 PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0xACE JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x514 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x535 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545 DUP3 PUSH2 0x9EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5BF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B6 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x615 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x641 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x68E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x663 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x68E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x671 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6AA PUSH2 0x6A3 PUSH2 0xAB4 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xCE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6B9 DUP5 DUP5 DUP5 PUSH2 0x418 JUMP JUMPDEST PUSH2 0x6C5 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE57 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6D6 DUP3 PUSH2 0x9EF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x6F7 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x723 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x770 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x745 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x770 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x753 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x781 PUSH2 0x100E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x796 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x7CB JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B3 SWAP3 SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x7D4 DUP5 PUSH2 0x1025 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7F1 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x807 CALLER DUP3 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x811 DUP2 DUP4 PUSH2 0x10AC JUMP JUMPDEST PUSH2 0x83E PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH2 0x698 JUMP JUMPDEST PUSH32 0xD9DC24857F317ED9ABBBB42E920EDE0104231EB1D3D70236A74887FFAF159868 DUP2 PUSH1 0x40 MLOAD PUSH2 0x86D SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x9D8 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x9E8 JUMPI POP PUSH2 0x9E7 DUP3 PUSH2 0x1108 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9FB DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAC9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xADA DUP5 PUSH2 0x1172 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB1C JUMPI PUSH2 0xB1B DUP2 DUP5 DUP7 PUSH2 0x1374 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAD JUMPI PUSH2 0xB5E PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC30 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD59 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE4A SWAP2 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1008 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xE9B PUSH2 0xAB4 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEF9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF6 SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF7D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xF75 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6C SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1006 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFD SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1030 DUP3 PUSH2 0x9EF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x103B PUSH2 0x100E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x105B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1086 JUMP JUMPDEST DUP1 PUSH2 0x1065 DUP5 PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1076 SWAP3 SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A8 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1506 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x10CC SWAP2 SWAP1 PUSH2 0x22D0 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10FC SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11E8 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x131C JUMPI PUSH1 0x0 PUSH2 0x11F8 DUP5 PUSH2 0x9EF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1263 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1276 JUMPI POP PUSH2 0x1274 DUP2 DUP5 PUSH2 0x879 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x12B8 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12AF SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x131A JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x137F DUP4 DUP4 DUP4 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x1433 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13F4 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EB SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142A SWAP3 SWAP2 SWAP1 PUSH2 0x23A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1447 DUP5 PUSH2 0x15E3 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1466 JUMPI PUSH2 0x1465 PUSH2 0x1BFB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1498 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x14FB JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x23CB JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x14A6 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1510 DUP4 DUP4 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x151D PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xE57 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15DA JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x159B JUMPI POP PUSH2 0x159A DUP5 DUP5 PUSH2 0x879 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x15D9 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15C1 DUP4 PUSH2 0xA77 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1641 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1637 JUMPI PUSH2 0x1636 PUSH2 0x23CB JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x167E JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1674 JUMPI PUSH2 0x1673 PUSH2 0x23CB JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x16AD JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x16A3 JUMPI PUSH2 0x16A2 PUSH2 0x23CB JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x16D6 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x16CC JUMPI PUSH2 0x16CB PUSH2 0x23CB JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x16FB JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x16F1 JUMPI PUSH2 0x16F0 PUSH2 0x23CB JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x171E JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1714 JUMPI PUSH2 0x1713 PUSH2 0x23CB JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x172D JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17A8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179F SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17B6 DUP4 DUP4 PUSH1 0x0 PUSH2 0xACE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x182A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1821 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1878 DUP2 PUSH2 0x1843 JUMP JUMPDEST DUP2 EQ PUSH2 0x1883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1895 DUP2 PUSH2 0x186F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B1 JUMPI PUSH2 0x18B0 PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18BF DUP5 DUP3 DUP6 ADD PUSH2 0x1886 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18DD DUP2 PUSH2 0x18C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1938 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x191D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1960 DUP3 PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x196A DUP2 DUP6 PUSH2 0x1909 JUMP JUMPDEST SWAP4 POP PUSH2 0x197A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x191A JUMP JUMPDEST PUSH2 0x1983 DUP2 PUSH2 0x1944 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19A8 DUP2 DUP5 PUSH2 0x1955 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C3 DUP2 PUSH2 0x19B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x19CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19E0 DUP2 PUSH2 0x19BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19FC JUMPI PUSH2 0x19FB PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A0A DUP5 DUP3 DUP6 ADD PUSH2 0x19D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3E DUP3 PUSH2 0x1A13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4E DUP2 PUSH2 0x1A33 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A69 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A78 DUP2 PUSH2 0x1A33 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A95 DUP2 PUSH2 0x1A6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB2 JUMPI PUSH2 0x1AB1 PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AC0 DUP6 DUP3 DUP7 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AD1 DUP6 DUP3 DUP7 ADD PUSH2 0x19D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AF4 JUMPI PUSH2 0x1AF3 PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B02 DUP7 DUP3 DUP8 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B13 DUP7 DUP3 DUP8 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B24 DUP7 DUP3 DUP8 ADD PUSH2 0x19D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B44 JUMPI PUSH2 0x1B43 PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B52 DUP5 DUP3 DUP6 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B64 DUP2 PUSH2 0x19B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B8E DUP2 PUSH2 0x18C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BAB DUP2 PUSH2 0x1B85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BC8 JUMPI PUSH2 0x1BC7 PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BD6 DUP6 DUP3 DUP7 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BE7 DUP6 DUP3 DUP7 ADD PUSH2 0x1B9C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1C33 DUP3 PUSH2 0x1944 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C52 JUMPI PUSH2 0x1C51 PUSH2 0x1BFB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C65 PUSH2 0x182F JUMP JUMPDEST SWAP1 POP PUSH2 0x1C71 DUP3 DUP3 PUSH2 0x1C2A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C91 JUMPI PUSH2 0x1C90 PUSH2 0x1BFB JUMP JUMPDEST JUMPDEST PUSH2 0x1C9A DUP3 PUSH2 0x1944 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC9 PUSH2 0x1CC4 DUP5 PUSH2 0x1C76 JUMP JUMPDEST PUSH2 0x1C5B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CE5 JUMPI PUSH2 0x1CE4 PUSH2 0x1BF6 JUMP JUMPDEST JUMPDEST PUSH2 0x1CF0 DUP5 DUP3 DUP6 PUSH2 0x1CA7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D0D JUMPI PUSH2 0x1D0C PUSH2 0x1BF1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D1D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D40 JUMPI PUSH2 0x1D3F PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D4E DUP8 DUP3 DUP9 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D5F DUP8 DUP3 DUP9 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D70 DUP8 DUP3 DUP9 ADD PUSH2 0x19D1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D91 JUMPI PUSH2 0x1D90 PUSH2 0x183E JUMP JUMPDEST JUMPDEST PUSH2 0x1D9D DUP8 DUP3 DUP9 ADD PUSH2 0x1CF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DC4 JUMPI PUSH2 0x1DC3 PUSH2 0x1BFB JUMP JUMPDEST JUMPDEST PUSH2 0x1DCD DUP3 PUSH2 0x1944 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DED PUSH2 0x1DE8 DUP5 PUSH2 0x1DA9 JUMP JUMPDEST PUSH2 0x1C5B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E09 JUMPI PUSH2 0x1E08 PUSH2 0x1BF6 JUMP JUMPDEST JUMPDEST PUSH2 0x1E14 DUP5 DUP3 DUP6 PUSH2 0x1CA7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E31 JUMPI PUSH2 0x1E30 PUSH2 0x1BF1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E41 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E60 JUMPI PUSH2 0x1E5F PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E7E JUMPI PUSH2 0x1E7D PUSH2 0x183E JUMP JUMPDEST JUMPDEST PUSH2 0x1E8A DUP5 DUP3 DUP6 ADD PUSH2 0x1E1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EAA JUMPI PUSH2 0x1EA9 PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EB8 DUP6 DUP3 DUP7 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EC9 DUP6 DUP3 DUP7 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F1A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F2D JUMPI PUSH2 0x1F2C PUSH2 0x1ED3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F48 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x1F55 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B5B JUMP JUMPDEST PUSH2 0x1F62 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A45 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F80 DUP3 PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x1F8A DUP2 DUP6 PUSH2 0x1F6A JUMP JUMPDEST SWAP4 POP PUSH2 0x1F9A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x191A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB2 DUP3 DUP6 PUSH2 0x1F75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBE DUP3 DUP5 PUSH2 0x1F75 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2004 DUP3 PUSH2 0x19B0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2036 JUMPI PUSH2 0x2035 PUSH2 0x1FCA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2068 DUP3 PUSH2 0x2041 JUMP JUMPDEST PUSH2 0x2072 DUP2 DUP6 PUSH2 0x204C JUMP JUMPDEST SWAP4 POP PUSH2 0x2082 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x191A JUMP JUMPDEST PUSH2 0x208B DUP2 PUSH2 0x1944 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20AB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x20B8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x20C5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B5B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x20D7 DUP2 DUP5 PUSH2 0x205D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20F1 DUP2 PUSH2 0x186F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x210D JUMPI PUSH2 0x210C PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x211B DUP5 DUP3 DUP6 ADD PUSH2 0x20E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2186 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2149 JUMP JUMPDEST PUSH2 0x2190 DUP7 DUP4 PUSH2 0x2149 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CD PUSH2 0x21C8 PUSH2 0x21C3 DUP5 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x19B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21E7 DUP4 PUSH2 0x21B2 JUMP JUMPDEST PUSH2 0x21FB PUSH2 0x21F3 DUP3 PUSH2 0x21D4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2156 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2210 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x221B DUP2 DUP5 DUP5 PUSH2 0x21DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x223F JUMPI PUSH2 0x2234 PUSH1 0x0 DUP3 PUSH2 0x2208 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2221 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2284 JUMPI PUSH2 0x2255 DUP2 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x225E DUP5 PUSH2 0x2139 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x226D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2281 PUSH2 0x2279 DUP6 PUSH2 0x2139 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2220 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22A7 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2289 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C0 DUP4 DUP4 PUSH2 0x2296 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22D9 DUP3 PUSH2 0x18FE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22F2 JUMPI PUSH2 0x22F1 PUSH2 0x1BFB JUMP JUMPDEST JUMPDEST PUSH2 0x22FC DUP3 SLOAD PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x2307 DUP3 DUP3 DUP6 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x233A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2328 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2332 DUP6 DUP3 PUSH2 0x22B4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x239A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2348 DUP7 PUSH2 0x2124 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2370 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x234B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x238D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2389 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2296 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23B7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x23C4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B5B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE CALLCODE 0xBC 0xD4 MSTORE 0x26 0xC5 PUSH8 0x56D85279035B1101 SDIV 0xC2 0xAC 0xBE 0xAA PUSH6 0xD14AE2C73646 0xEA PUSH17 0x826064736F6C6343000814003300000000 ", "sourceMap": "202:561:15:-:0;;;344:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1381:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;455:20:15::1;433:19;;:42;;;;;;;;;;;;;;;;;;344:137:::0;202:561;;88:117:18;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;202:561:15:-;;;;;;;" }, "deployedBytecode": { "functionDebugData": { "@_approve_1046": { "entryPoint": 4527, "id": 1046, "parameterSlots": 4, "returnSlots": 0 }, "@_approve_980": { "entryPoint": 2748, "id": 980, "parameterSlots": 3, "returnSlots": 0 }, "@_baseURI_373": { "entryPoint": 4110, "id": 373, "parameterSlots": 0, "returnSlots": 1 }, "@_checkAuthorized_628": { "entryPoint": 4980, "id": 628, "parameterSlots": 3, "returnSlots": 0 }, "@_checkOnERC721Received_1176": { "entryPoint": 3671, "id": 1176, "parameterSlots": 4, "returnSlots": 0 }, "@_getApproved_555": { "entryPoint": 2679, "id": 555, "parameterSlots": 1, "returnSlots": 1 }, "@_isAuthorized_591": { "entryPoint": 5410, "id": 591, "parameterSlots": 3, "returnSlots": 1 }, "@_mint_784": { "entryPoint": 5942, "id": 784, "parameterSlots": 2, "returnSlots": 0 }, "@_msgSender_1478": { "entryPoint": 2740, "id": 1478, "parameterSlots": 0, "returnSlots": 1 }, "@_ownerOf_542": { "entryPoint": 4466, "id": 542, "parameterSlots": 1, "returnSlots": 1 }, "@_requireOwned_1112": { "entryPoint": 2543, "id": 1112, "parameterSlots": 1, "returnSlots": 1 }, "@_safeMint_799": { "entryPoint": 4238, "id": 799, "parameterSlots": 2, "returnSlots": 0 }, "@_safeMint_825": { "entryPoint": 5382, "id": 825, "parameterSlots": 3, "returnSlots": 0 }, "@_setApprovalForAll_1083": { "entryPoint": 3304, "id": 1083, "parameterSlots": 3, "returnSlots": 0 }, "@_setTokenURI_1437": { "entryPoint": 4268, "id": 1437, "parameterSlots": 2, "returnSlots": 0 }, "@_update_734": { "entryPoint": 2766, "id": 734, "parameterSlots": 3, "returnSlots": 1 }, "@approve_389": { "entryPoint": 1026, "id": 389, "parameterSlots": 2, "returnSlots": 0 }, "@balanceOf_297": { "entryPoint": 1356, "id": 297, "parameterSlots": 1, "returnSlots": 1 }, "@getApproved_406": { "entryPoint": 998, "id": 406, "parameterSlots": 1, "returnSlots": 1 }, "@isApprovedForAll_439": { "entryPoint": 2169, "id": 439, "parameterSlots": 2, "returnSlots": 1 }, "@log10_2653": { "entryPoint": 5603, "id": 2653, "parameterSlots": 1, "returnSlots": 1 }, "@mint_2999": { "entryPoint": 2014, "id": 2999, "parameterSlots": 1, "returnSlots": 0 }, "@name_319": { "entryPoint": 852, "id": 319, "parameterSlots": 0, "returnSlots": 1 }, "@ownerOf_310": { "entryPoint": 1338, "id": 310, "parameterSlots": 1, "returnSlots": 1 }, "@safeTransferFrom_503": { "entryPoint": 1306, "id": 503, "parameterSlots": 3, "returnSlots": 0 }, "@safeTransferFrom_529": { "entryPoint": 1710, "id": 529, "parameterSlots": 4, "returnSlots": 0 }, "@setApprovalForAll_422": { "entryPoint": 1688, "id": 422, "parameterSlots": 2, "returnSlots": 0 }, "@supportsInterface_1361": { "entryPoint": 755, "id": 1361, "parameterSlots": 1, "returnSlots": 1 }, "@supportsInterface_1766": { "entryPoint": 4360, "id": 1766, "parameterSlots": 1, "returnSlots": 1 }, "@supportsInterface_269": { "entryPoint": 2317, "id": 269, "parameterSlots": 1, "returnSlots": 1 }, "@symbol_328": { "entryPoint": 1542, "id": 328, "parameterSlots": 0, "returnSlots": 1 }, "@toString_1556": { "entryPoint": 5176, "id": 1556, "parameterSlots": 1, "returnSlots": 1 }, "@tokenURI_1418": { "entryPoint": 1739, "id": 1418, "parameterSlots": 1, "returnSlots": 1 }, "@tokenURI_364": { "entryPoint": 4133, "id": 364, "parameterSlots": 1, "returnSlots": 1 }, "@transferFrom_485": { "entryPoint": 1048, "id": 485, "parameterSlots": 3, "returnSlots": 0 }, "abi_decode_available_length_t_bytes_memory_ptr": { "entryPoint": 7350, "id": null, "parameterSlots": 3, "returnSlots": 1 }, "abi_decode_available_length_t_string_memory_ptr": { "entryPoint": 7642, "id": null, "parameterSlots": 3, "returnSlots": 1 }, "abi_decode_t_address": { "entryPoint": 6790, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_t_bool": { "entryPoint": 7068, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_t_bytes4": { "entryPoint": 6278, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_t_bytes4_fromMemory": { "entryPoint": 8418, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_t_bytes_memory_ptr": { "entryPoint": 7416, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_t_string_memory_ptr": { "entryPoint": 7708, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_t_uint256": { "entryPoint": 6609, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_tuple_t_address": { "entryPoint": 6958, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_tuple_t_addresst_address": { "entryPoint": 7827, "id": null, "parameterSlots": 2, "returnSlots": 2 }, "abi_decode_tuple_t_addresst_addresst_uint256": { "entryPoint": 6875, "id": null, "parameterSlots": 2, "returnSlots": 3 }, "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": { "entryPoint": 7462, "id": null, "parameterSlots": 2, "returnSlots": 4 }, "abi_decode_tuple_t_addresst_bool": { "entryPoint": 7089, "id": null, "parameterSlots": 2, "returnSlots": 2 }, "abi_decode_tuple_t_addresst_uint256": { "entryPoint": 6811, "id": null, "parameterSlots": 2, "returnSlots": 2 }, "abi_decode_tuple_t_bytes4": { "entryPoint": 6299, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_tuple_t_bytes4_fromMemory": { "entryPoint": 8439, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_tuple_t_string_memory_ptr": { "entryPoint": 7754, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_tuple_t_uint256": { "entryPoint": 6630, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_address_to_t_address_fromStack": { "entryPoint": 6725, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_t_bool_to_t_bool_fromStack": { "entryPoint": 6356, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": { "entryPoint": 8285, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": { "entryPoint": 6485, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": { "entryPoint": 8053, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_uint256_to_t_uint256_fromStack": { "entryPoint": 7003, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": { "entryPoint": 8102, "id": null, "parameterSlots": 3, "returnSlots": 1 }, "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": { "entryPoint": 6740, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": { "entryPoint": 8342, "id": null, "parameterSlots": 5, "returnSlots": 1 }, "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": { "entryPoint": 9122, "id": null, "parameterSlots": 3, "returnSlots": 1 }, "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": { "entryPoint": 7987, "id": null, "parameterSlots": 4, "returnSlots": 1 }, "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": { "entryPoint": 6371, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": { "entryPoint": 6542, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": { "entryPoint": 7018, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "allocate_memory": { "entryPoint": 7259, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "allocate_unbounded": { "entryPoint": 6191, "id": null, "parameterSlots": 0, "returnSlots": 1 }, "array_allocation_size_t_bytes_memory_ptr": { "entryPoint": 7286, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_allocation_size_t_string_memory_ptr": { "entryPoint": 7593, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_dataslot_t_string_storage": { "entryPoint": 8484, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_length_t_bytes_memory_ptr": { "entryPoint": 8257, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_length_t_string_memory_ptr": { "entryPoint": 6398, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": { "entryPoint": 8268, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": { "entryPoint": 6409, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": { "entryPoint": 8042, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "clean_up_bytearray_end_slots_t_string_storage": { "entryPoint": 8771, "id": null, "parameterSlots": 3, "returnSlots": 0 }, "cleanup_t_address": { "entryPoint": 6707, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_bool": { "entryPoint": 6344, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_bytes4": { "entryPoint": 6211, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_uint160": { "entryPoint": 6675, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_uint256": { "entryPoint": 6576, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "clear_storage_range_t_bytes1": { "entryPoint": 8736, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "convert_t_uint256_to_t_uint256": { "entryPoint": 8626, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": { "entryPoint": 8912, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "copy_calldata_to_memory_with_cleanup": { "entryPoint": 7335, "id": null, "parameterSlots": 3, "returnSlots": 0 }, "copy_memory_to_memory_with_cleanup": { "entryPoint": 6426, "id": null, "parameterSlots": 3, "returnSlots": 0 }, "divide_by_32_ceil": { "entryPoint": 8505, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "extract_byte_array_length": { "entryPoint": 7938, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "extract_used_part_and_set_length_of_short_byte_array": { "entryPoint": 8884, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "finalize_allocation": { "entryPoint": 7210, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "identity": { "entryPoint": 8616, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "increment_t_uint256": { "entryPoint": 8185, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "mask_bytes_dynamic": { "entryPoint": 8854, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "panic_error_0x11": { "entryPoint": 8138, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "panic_error_0x12": { "entryPoint": 9163, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "panic_error_0x22": { "entryPoint": 7891, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "panic_error_0x41": { "entryPoint": 7163, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "prepare_store_t_uint256": { "entryPoint": 8660, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": { "entryPoint": 7153, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": { "entryPoint": 7158, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": { "entryPoint": 6206, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": { "entryPoint": 6201, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "round_up_to_mul_of_32": { "entryPoint": 6468, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "shift_left_dynamic": { "entryPoint": 8521, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "shift_right_unsigned_dynamic": { "entryPoint": 8841, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "storage_set_to_zero_t_uint256": { "entryPoint": 8712, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "update_byte_slice_dynamic32": { "entryPoint": 8534, "id": null, "parameterSlots": 3, "returnSlots": 1 }, "update_storage_value_t_uint256_to_t_uint256": { "entryPoint": 8670, "id": null, "parameterSlots": 3, "returnSlots": 0 }, "validator_revert_t_address": { "entryPoint": 6767, "id": null, "parameterSlots": 1, "returnSlots": 0 }, "validator_revert_t_bool": { "entryPoint": 7045, "id": null, "parameterSlots": 1, "returnSlots": 0 }, "validator_revert_t_bytes4": { "entryPoint": 6255, "id": null, "parameterSlots": 1, "returnSlots": 0 }, "validator_revert_t_uint256": { "entryPoint": 6586, "id": null, "parameterSlots": 1, "returnSlots": 0 }, "zero_value_for_split_t_uint256": { "entryPoint": 8707, "id": null, "parameterSlots": 0, "returnSlots": 1 } }, "generatedSources": [{ "ast": { "nodeType": "YulBlock", "src": "0:21134:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "47:35:18", "statements": [{ "nodeType": "YulAssignment", "src": "57:19:18", "value": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "73:2:18", "type": "", "value": "64" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "67:5:18" }, "nodeType": "YulFunctionCall", "src": "67:9:18" }, "variableNames": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "57:6:18" }] }] }, "name": "allocate_unbounded", "nodeType": "YulFunctionDefinition", "returnVariables": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "40:6:18", "type": "" }], "src": "7:75:18" }, { "body": { "nodeType": "YulBlock", "src": "177:28:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "194:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "197:1:18", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "187:6:18" }, "nodeType": "YulFunctionCall", "src": "187:12:18" }, "nodeType": "YulExpressionStatement", "src": "187:12:18" }] }, "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulFunctionDefinition", "src": "88:117:18" }, { "body": { "nodeType": "YulBlock", "src": "300:28:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "317:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "320:1:18", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "310:6:18" }, "nodeType": "YulFunctionCall", "src": "310:12:18" }, "nodeType": "YulExpressionStatement", "src": "310:12:18" }] }, "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db", "nodeType": "YulFunctionDefinition", "src": "211:117:18" }, { "body": { "nodeType": "YulBlock", "src": "378:105:18", "statements": [{ "nodeType": "YulAssignment", "src": "388:89:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "403:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "410:66:18", "type": "", "value": "0xffffffff00000000000000000000000000000000000000000000000000000000" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "399:3:18" }, "nodeType": "YulFunctionCall", "src": "399:78:18" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "388:7:18" }] }] }, "name": "cleanup_t_bytes4", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "360:5:18", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "370:7:18", "type": "" }], "src": "334:149:18" }, { "body": { "nodeType": "YulBlock", "src": "531:78:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "587:16:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "596:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "599:1:18", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "589:6:18" }, "nodeType": "YulFunctionCall", "src": "589:12:18" }, "nodeType": "YulExpressionStatement", "src": "589:12:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "554:5:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "578:5:18" }], "functionName": { "name": "cleanup_t_bytes4", "nodeType": "YulIdentifier", "src": "561:16:18" }, "nodeType": "YulFunctionCall", "src": "561:23:18" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "551:2:18" }, "nodeType": "YulFunctionCall", "src": "551:34:18" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "544:6:18" }, "nodeType": "YulFunctionCall", "src": "544:42:18" }, "nodeType": "YulIf", "src": "541:62:18" }] }, "name": "validator_revert_t_bytes4", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "524:5:18", "type": "" }], "src": "489:120:18" }, { "body": { "nodeType": "YulBlock", "src": "666:86:18", "statements": [{ "nodeType": "YulAssignment", "src": "676:29:18", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "698:6:18" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "685:12:18" }, "nodeType": "YulFunctionCall", "src": "685:20:18" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "676:5:18" }] }, { "expression": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "740:5:18" }], "functionName": { "name": "validator_revert_t_bytes4", "nodeType": "YulIdentifier", "src": "714:25:18" }, "nodeType": "YulFunctionCall", "src": "714:32:18" }, "nodeType": "YulExpressionStatement", "src": "714:32:18" }] }, "name": "abi_decode_t_bytes4", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "644:6:18", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "652:3:18", "type": "" }], "returnVariables": [{ "name": "value", "nodeType": "YulTypedName", "src": "660:5:18", "type": "" }], "src": "615:137:18" }, { "body": { "nodeType": "YulBlock", "src": "823:262:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "869:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "871:77:18" }, "nodeType": "YulFunctionCall", "src": "871:79:18" }, "nodeType": "YulExpressionStatement", "src": "871:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "844:7:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "853:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "840:3:18" }, "nodeType": "YulFunctionCall", "src": "840:23:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "865:2:18", "type": "", "value": "32" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "836:3:18" }, "nodeType": "YulFunctionCall", "src": "836:32:18" }, "nodeType": "YulIf", "src": "833:119:18" }, { "nodeType": "YulBlock", "src": "962:116:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "977:15:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "991:1:18", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "981:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "1006:62:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "1040:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "1051:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1036:3:18" }, "nodeType": "YulFunctionCall", "src": "1036:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "1060:7:18" }], "functionName": { "name": "abi_decode_t_bytes4", "nodeType": "YulIdentifier", "src": "1016:19:18" }, "nodeType": "YulFunctionCall", "src": "1016:52:18" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "1006:6:18" }] }] }] }, "name": "abi_decode_tuple_t_bytes4", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "793:9:18", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "804:7:18", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "816:6:18", "type": "" }], "src": "758:327:18" }, { "body": { "nodeType": "YulBlock", "src": "1133:48:18", "statements": [{ "nodeType": "YulAssignment", "src": "1143:32:18", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1168:5:18" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "1161:6:18" }, "nodeType": "YulFunctionCall", "src": "1161:13:18" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "1154:6:18" }, "nodeType": "YulFunctionCall", "src": "1154:21:18" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "1143:7:18" }] }] }, "name": "cleanup_t_bool", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "1115:5:18", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "1125:7:18", "type": "" }], "src": "1091:90:18" }, { "body": { "nodeType": "YulBlock", "src": "1246:50:18", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "1263:3:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1283:5:18" }], "functionName": { "name": "cleanup_t_bool", "nodeType": "YulIdentifier", "src": "1268:14:18" }, "nodeType": "YulFunctionCall", "src": "1268:21:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1256:6:18" }, "nodeType": "YulFunctionCall", "src": "1256:34:18" }, "nodeType": "YulExpressionStatement", "src": "1256:34:18" }] }, "name": "abi_encode_t_bool_to_t_bool_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "1234:5:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "1241:3:18", "type": "" }], "src": "1187:109:18" }, { "body": { "nodeType": "YulBlock", "src": "1394:118:18", "statements": [{ "nodeType": "YulAssignment", "src": "1404:26:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "1416:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1427:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1412:3:18" }, "nodeType": "YulFunctionCall", "src": "1412:18:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "1404:4:18" }] }, { "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "1478:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "1491:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1502:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1487:3:18" }, "nodeType": "YulFunctionCall", "src": "1487:17:18" }], "functionName": { "name": "abi_encode_t_bool_to_t_bool_fromStack", "nodeType": "YulIdentifier", "src": "1440:37:18" }, "nodeType": "YulFunctionCall", "src": "1440:65:18" }, "nodeType": "YulExpressionStatement", "src": "1440:65:18" }] }, "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "1366:9:18", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "1378:6:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "1389:4:18", "type": "" }], "src": "1302:210:18" }, { "body": { "nodeType": "YulBlock", "src": "1577:40:18", "statements": [{ "nodeType": "YulAssignment", "src": "1588:22:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1604:5:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "1598:5:18" }, "nodeType": "YulFunctionCall", "src": "1598:12:18" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "1588:6:18" }] }] }, "name": "array_length_t_string_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "1560:5:18", "type": "" }], "returnVariables": [{ "name": "length", "nodeType": "YulTypedName", "src": "1570:6:18", "type": "" }], "src": "1518:99:18" }, { "body": { "nodeType": "YulBlock", "src": "1719:73:18", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "1736:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "1741:6:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1729:6:18" }, "nodeType": "YulFunctionCall", "src": "1729:19:18" }, "nodeType": "YulExpressionStatement", "src": "1729:19:18" }, { "nodeType": "YulAssignment", "src": "1757:29:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "1776:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1781:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1772:3:18" }, "nodeType": "YulFunctionCall", "src": "1772:14:18" }, "variableNames": [{ "name": "updated_pos", "nodeType": "YulIdentifier", "src": "1757:11:18" }] }] }, "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "1691:3:18", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "1696:6:18", "type": "" }], "returnVariables": [{ "name": "updated_pos", "nodeType": "YulTypedName", "src": "1707:11:18", "type": "" }], "src": "1623:169:18" }, { "body": { "nodeType": "YulBlock", "src": "1860:184:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "1870:10:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "1879:1:18", "type": "", "value": "0" }, "variables": [{ "name": "i", "nodeType": "YulTypedName", "src": "1874:1:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "1939:63:18", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "name": "dst", "nodeType": "YulIdentifier", "src": "1964:3:18" }, { "name": "i", "nodeType": "YulIdentifier", "src": "1969:1:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1960:3:18" }, "nodeType": "YulFunctionCall", "src": "1960:11:18" }, { "arguments": [{ "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "1983:3:18" }, { "name": "i", "nodeType": "YulIdentifier", "src": "1988:1:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1979:3:18" }, "nodeType": "YulFunctionCall", "src": "1979:11:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "1973:5:18" }, "nodeType": "YulFunctionCall", "src": "1973:18:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1953:6:18" }, "nodeType": "YulFunctionCall", "src": "1953:39:18" }, "nodeType": "YulExpressionStatement", "src": "1953:39:18" }] }, "condition": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "1900:1:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "1903:6:18" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "1897:2:18" }, "nodeType": "YulFunctionCall", "src": "1897:13:18" }, "nodeType": "YulForLoop", "post": { "nodeType": "YulBlock", "src": "1911:19:18", "statements": [{ "nodeType": "YulAssignment", "src": "1913:15:18", "value": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "1922:1:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1925:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1918:3:18" }, "nodeType": "YulFunctionCall", "src": "1918:10:18" }, "variableNames": [{ "name": "i", "nodeType": "YulIdentifier", "src": "1913:1:18" }] }] }, "pre": { "nodeType": "YulBlock", "src": "1893:3:18", "statements": [] }, "src": "1889:113:18" }, { "expression": { "arguments": [{ "arguments": [{ "name": "dst", "nodeType": "YulIdentifier", "src": "2022:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "2027:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2018:3:18" }, "nodeType": "YulFunctionCall", "src": "2018:16:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2036:1:18", "type": "", "value": "0" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "2011:6:18" }, "nodeType": "YulFunctionCall", "src": "2011:27:18" }, "nodeType": "YulExpressionStatement", "src": "2011:27:18" }] }, "name": "copy_memory_to_memory_with_cleanup", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "src", "nodeType": "YulTypedName", "src": "1842:3:18", "type": "" }, { "name": "dst", "nodeType": "YulTypedName", "src": "1847:3:18", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "1852:6:18", "type": "" }], "src": "1798:246:18" }, { "body": { "nodeType": "YulBlock", "src": "2098:54:18", "statements": [{ "nodeType": "YulAssignment", "src": "2108:38:18", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2126:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2133:2:18", "type": "", "value": "31" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2122:3:18" }, "nodeType": "YulFunctionCall", "src": "2122:14:18" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "2142:2:18", "type": "", "value": "31" }], "functionName": { "name": "not", "nodeType": "YulIdentifier", "src": "2138:3:18" }, "nodeType": "YulFunctionCall", "src": "2138:7:18" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "2118:3:18" }, "nodeType": "YulFunctionCall", "src": "2118:28:18" }, "variableNames": [{ "name": "result", "nodeType": "YulIdentifier", "src": "2108:6:18" }] }] }, "name": "round_up_to_mul_of_32", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2081:5:18", "type": "" }], "returnVariables": [{ "name": "result", "nodeType": "YulTypedName", "src": "2091:6:18", "type": "" }], "src": "2050:102:18" }, { "body": { "nodeType": "YulBlock", "src": "2250:285:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "2260:53:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2307:5:18" }], "functionName": { "name": "array_length_t_string_memory_ptr", "nodeType": "YulIdentifier", "src": "2274:32:18" }, "nodeType": "YulFunctionCall", "src": "2274:39:18" }, "variables": [{ "name": "length", "nodeType": "YulTypedName", "src": "2264:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "2322:78:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2388:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "2393:6:18" }], "functionName": { "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "2329:58:18" }, "nodeType": "YulFunctionCall", "src": "2329:71:18" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2322:3:18" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2448:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2455:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2444:3:18" }, "nodeType": "YulFunctionCall", "src": "2444:16:18" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "2462:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "2467:6:18" }], "functionName": { "name": "copy_memory_to_memory_with_cleanup", "nodeType": "YulIdentifier", "src": "2409:34:18" }, "nodeType": "YulFunctionCall", "src": "2409:65:18" }, "nodeType": "YulExpressionStatement", "src": "2409:65:18" }, { "nodeType": "YulAssignment", "src": "2483:46:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2494:3:18" }, { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "2521:6:18" }], "functionName": { "name": "round_up_to_mul_of_32", "nodeType": "YulIdentifier", "src": "2499:21:18" }, "nodeType": "YulFunctionCall", "src": "2499:29:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2490:3:18" }, "nodeType": "YulFunctionCall", "src": "2490:39:18" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "2483:3:18" }] }] }, "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2231:5:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "2238:3:18", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "2246:3:18", "type": "" }], "src": "2158:377:18" }, { "body": { "nodeType": "YulBlock", "src": "2659:195:18", "statements": [{ "nodeType": "YulAssignment", "src": "2669:26:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "2681:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2692:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2677:3:18" }, "nodeType": "YulFunctionCall", "src": "2677:18:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "2669:4:18" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "2716:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2727:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2712:3:18" }, "nodeType": "YulFunctionCall", "src": "2712:17:18" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "2735:4:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "2741:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "2731:3:18" }, "nodeType": "YulFunctionCall", "src": "2731:20:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "2705:6:18" }, "nodeType": "YulFunctionCall", "src": "2705:47:18" }, "nodeType": "YulExpressionStatement", "src": "2705:47:18" }, { "nodeType": "YulAssignment", "src": "2761:86:18", "value": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "2833:6:18" }, { "name": "tail", "nodeType": "YulIdentifier", "src": "2842:4:18" }], "functionName": { "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "2769:63:18" }, "nodeType": "YulFunctionCall", "src": "2769:78:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "2761:4:18" }] }] }, "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "2631:9:18", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "2643:6:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "2654:4:18", "type": "" }], "src": "2541:313:18" }, { "body": { "nodeType": "YulBlock", "src": "2905:32:18", "statements": [{ "nodeType": "YulAssignment", "src": "2915:16:18", "value": { "name": "value", "nodeType": "YulIdentifier", "src": "2926:5:18" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "2915:7:18" }] }] }, "name": "cleanup_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2887:5:18", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "2897:7:18", "type": "" }], "src": "2860:77:18" }, { "body": { "nodeType": "YulBlock", "src": "2986:79:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "3043:16:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "3052:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3055:1:18", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "3045:6:18" }, "nodeType": "YulFunctionCall", "src": "3045:12:18" }, "nodeType": "YulExpressionStatement", "src": "3045:12:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3009:5:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3034:5:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "3016:17:18" }, "nodeType": "YulFunctionCall", "src": "3016:24:18" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "3006:2:18" }, "nodeType": "YulFunctionCall", "src": "3006:35:18" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "2999:6:18" }, "nodeType": "YulFunctionCall", "src": "2999:43:18" }, "nodeType": "YulIf", "src": "2996:63:18" }] }, "name": "validator_revert_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2979:5:18", "type": "" }], "src": "2943:122:18" }, { "body": { "nodeType": "YulBlock", "src": "3123:87:18", "statements": [{ "nodeType": "YulAssignment", "src": "3133:29:18", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "3155:6:18" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "3142:12:18" }, "nodeType": "YulFunctionCall", "src": "3142:20:18" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3133:5:18" }] }, { "expression": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3198:5:18" }], "functionName": { "name": "validator_revert_t_uint256", "nodeType": "YulIdentifier", "src": "3171:26:18" }, "nodeType": "YulFunctionCall", "src": "3171:33:18" }, "nodeType": "YulExpressionStatement", "src": "3171:33:18" }] }, "name": "abi_decode_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "3101:6:18", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "3109:3:18", "type": "" }], "returnVariables": [{ "name": "value", "nodeType": "YulTypedName", "src": "3117:5:18", "type": "" }], "src": "3071:139:18" }, { "body": { "nodeType": "YulBlock", "src": "3282:263:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "3328:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "3330:77:18" }, "nodeType": "YulFunctionCall", "src": "3330:79:18" }, "nodeType": "YulExpressionStatement", "src": "3330:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "3303:7:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "3312:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "3299:3:18" }, "nodeType": "YulFunctionCall", "src": "3299:23:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3324:2:18", "type": "", "value": "32" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "3295:3:18" }, "nodeType": "YulFunctionCall", "src": "3295:32:18" }, "nodeType": "YulIf", "src": "3292:119:18" }, { "nodeType": "YulBlock", "src": "3421:117:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "3436:15:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "3450:1:18", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "3440:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "3465:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "3500:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "3511:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3496:3:18" }, "nodeType": "YulFunctionCall", "src": "3496:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "3520:7:18" }], "functionName": { "name": "abi_decode_t_uint256", "nodeType": "YulIdentifier", "src": "3475:20:18" }, "nodeType": "YulFunctionCall", "src": "3475:53:18" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "3465:6:18" }] }] }] }, "name": "abi_decode_tuple_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "3252:9:18", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "3263:7:18", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "3275:6:18", "type": "" }], "src": "3216:329:18" }, { "body": { "nodeType": "YulBlock", "src": "3596:81:18", "statements": [{ "nodeType": "YulAssignment", "src": "3606:65:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3621:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3628:42:18", "type": "", "value": "0xffffffffffffffffffffffffffffffffffffffff" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "3617:3:18" }, "nodeType": "YulFunctionCall", "src": "3617:54:18" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "3606:7:18" }] }] }, "name": "cleanup_t_uint160", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "3578:5:18", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "3588:7:18", "type": "" }], "src": "3551:126:18" }, { "body": { "nodeType": "YulBlock", "src": "3728:51:18", "statements": [{ "nodeType": "YulAssignment", "src": "3738:35:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3767:5:18" }], "functionName": { "name": "cleanup_t_uint160", "nodeType": "YulIdentifier", "src": "3749:17:18" }, "nodeType": "YulFunctionCall", "src": "3749:24:18" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "3738:7:18" }] }] }, "name": "cleanup_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "3710:5:18", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "3720:7:18", "type": "" }], "src": "3683:96:18" }, { "body": { "nodeType": "YulBlock", "src": "3850:53:18", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "3867:3:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3890:5:18" }], "functionName": { "name": "cleanup_t_address", "nodeType": "YulIdentifier", "src": "3872:17:18" }, "nodeType": "YulFunctionCall", "src": "3872:24:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "3860:6:18" }, "nodeType": "YulFunctionCall", "src": "3860:37:18" }, "nodeType": "YulExpressionStatement", "src": "3860:37:18" }] }, "name": "abi_encode_t_address_to_t_address_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "3838:5:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "3845:3:18", "type": "" }], "src": "3785:118:18" }, { "body": { "nodeType": "YulBlock", "src": "4007:124:18", "statements": [{ "nodeType": "YulAssignment", "src": "4017:26:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "4029:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4040:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4025:3:18" }, "nodeType": "YulFunctionCall", "src": "4025:18:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "4017:4:18" }] }, { "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "4097:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "4110:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4121:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4106:3:18" }, "nodeType": "YulFunctionCall", "src": "4106:17:18" }], "functionName": { "name": "abi_encode_t_address_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "4053:43:18" }, "nodeType": "YulFunctionCall", "src": "4053:71:18" }, "nodeType": "YulExpressionStatement", "src": "4053:71:18" }] }, "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "3979:9:18", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "3991:6:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "4002:4:18", "type": "" }], "src": "3909:222:18" }, { "body": { "nodeType": "YulBlock", "src": "4180:79:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "4237:16:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "4246:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4249:1:18", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "4239:6:18" }, "nodeType": "YulFunctionCall", "src": "4239:12:18" }, "nodeType": "YulExpressionStatement", "src": "4239:12:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "4203:5:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "4228:5:18" }], "functionName": { "name": "cleanup_t_address", "nodeType": "YulIdentifier", "src": "4210:17:18" }, "nodeType": "YulFunctionCall", "src": "4210:24:18" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "4200:2:18" }, "nodeType": "YulFunctionCall", "src": "4200:35:18" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "4193:6:18" }, "nodeType": "YulFunctionCall", "src": "4193:43:18" }, "nodeType": "YulIf", "src": "4190:63:18" }] }, "name": "validator_revert_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "4173:5:18", "type": "" }], "src": "4137:122:18" }, { "body": { "nodeType": "YulBlock", "src": "4317:87:18", "statements": [{ "nodeType": "YulAssignment", "src": "4327:29:18", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "4349:6:18" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "4336:12:18" }, "nodeType": "YulFunctionCall", "src": "4336:20:18" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "4327:5:18" }] }, { "expression": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "4392:5:18" }], "functionName": { "name": "validator_revert_t_address", "nodeType": "YulIdentifier", "src": "4365:26:18" }, "nodeType": "YulFunctionCall", "src": "4365:33:18" }, "nodeType": "YulExpressionStatement", "src": "4365:33:18" }] }, "name": "abi_decode_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "4295:6:18", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "4303:3:18", "type": "" }], "returnVariables": [{ "name": "value", "nodeType": "YulTypedName", "src": "4311:5:18", "type": "" }], "src": "4265:139:18" }, { "body": { "nodeType": "YulBlock", "src": "4493:391:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "4539:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "4541:77:18" }, "nodeType": "YulFunctionCall", "src": "4541:79:18" }, "nodeType": "YulExpressionStatement", "src": "4541:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "4514:7:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "4523:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "4510:3:18" }, "nodeType": "YulFunctionCall", "src": "4510:23:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4535:2:18", "type": "", "value": "64" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "4506:3:18" }, "nodeType": "YulFunctionCall", "src": "4506:32:18" }, "nodeType": "YulIf", "src": "4503:119:18" }, { "nodeType": "YulBlock", "src": "4632:117:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "4647:15:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "4661:1:18", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "4651:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "4676:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "4711:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "4722:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4707:3:18" }, "nodeType": "YulFunctionCall", "src": "4707:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "4731:7:18" }], "functionName": { "name": "abi_decode_t_address", "nodeType": "YulIdentifier", "src": "4686:20:18" }, "nodeType": "YulFunctionCall", "src": "4686:53:18" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "4676:6:18" }] }] }, { "nodeType": "YulBlock", "src": "4759:118:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "4774:16:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "4788:2:18", "type": "", "value": "32" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "4778:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "4804:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "4839:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "4850:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4835:3:18" }, "nodeType": "YulFunctionCall", "src": "4835:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "4859:7:18" }], "functionName": { "name": "abi_decode_t_uint256", "nodeType": "YulIdentifier", "src": "4814:20:18" }, "nodeType": "YulFunctionCall", "src": "4814:53:18" }, "variableNames": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "4804:6:18" }] }] }] }, "name": "abi_decode_tuple_t_addresst_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "4455:9:18", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "4466:7:18", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "4478:6:18", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "4486:6:18", "type": "" }], "src": "4410:474:18" }, { "body": { "nodeType": "YulBlock", "src": "4990:519:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "5036:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "5038:77:18" }, "nodeType": "YulFunctionCall", "src": "5038:79:18" }, "nodeType": "YulExpressionStatement", "src": "5038:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "5011:7:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "5020:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "5007:3:18" }, "nodeType": "YulFunctionCall", "src": "5007:23:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "5032:2:18", "type": "", "value": "96" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "5003:3:18" }, "nodeType": "YulFunctionCall", "src": "5003:32:18" }, "nodeType": "YulIf", "src": "5000:119:18" }, { "nodeType": "YulBlock", "src": "5129:117:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "5144:15:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "5158:1:18", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "5148:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "5173:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "5208:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "5219:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "5204:3:18" }, "nodeType": "YulFunctionCall", "src": "5204:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "5228:7:18" }], "functionName": { "name": "abi_decode_t_address", "nodeType": "YulIdentifier", "src": "5183:20:18" }, "nodeType": "YulFunctionCall", "src": "5183:53:18" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "5173:6:18" }] }] }, { "nodeType": "YulBlock", "src": "5256:118:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "5271:16:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "5285:2:18", "type": "", "value": "32" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "5275:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "5301:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "5336:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "5347:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "5332:3:18" }, "nodeType": "YulFunctionCall", "src": "5332:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "5356:7:18" }], "functionName": { "name": "abi_decode_t_address", "nodeType": "YulIdentifier", "src": "5311:20:18" }, "nodeType": "YulFunctionCall", "src": "5311:53:18" }, "variableNames": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "5301:6:18" }] }] }, { "nodeType": "YulBlock", "src": "5384:118:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "5399:16:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "5413:2:18", "type": "", "value": "64" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "5403:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "5429:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "5464:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "5475:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "5460:3:18" }, "nodeType": "YulFunctionCall", "src": "5460:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "5484:7:18" }], "functionName": { "name": "abi_decode_t_uint256", "nodeType": "YulIdentifier", "src": "5439:20:18" }, "nodeType": "YulFunctionCall", "src": "5439:53:18" }, "variableNames": [{ "name": "value2", "nodeType": "YulIdentifier", "src": "5429:6:18" }] }] }] }, "name": "abi_decode_tuple_t_addresst_addresst_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "4944:9:18", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "4955:7:18", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "4967:6:18", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "4975:6:18", "type": "" }, { "name": "value2", "nodeType": "YulTypedName", "src": "4983:6:18", "type": "" }], "src": "4890:619:18" }, { "body": { "nodeType": "YulBlock", "src": "5581:263:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "5627:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "5629:77:18" }, "nodeType": "YulFunctionCall", "src": "5629:79:18" }, "nodeType": "YulExpressionStatement", "src": "5629:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "5602:7:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "5611:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "5598:3:18" }, "nodeType": "YulFunctionCall", "src": "5598:23:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "5623:2:18", "type": "", "value": "32" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "5594:3:18" }, "nodeType": "YulFunctionCall", "src": "5594:32:18" }, "nodeType": "YulIf", "src": "5591:119:18" }, { "nodeType": "YulBlock", "src": "5720:117:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "5735:15:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "5749:1:18", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "5739:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "5764:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "5799:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "5810:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "5795:3:18" }, "nodeType": "YulFunctionCall", "src": "5795:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "5819:7:18" }], "functionName": { "name": "abi_decode_t_address", "nodeType": "YulIdentifier", "src": "5774:20:18" }, "nodeType": "YulFunctionCall", "src": "5774:53:18" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "5764:6:18" }] }] }] }, "name": "abi_decode_tuple_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "5551:9:18", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "5562:7:18", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "5574:6:18", "type": "" }], "src": "5515:329:18" }, { "body": { "nodeType": "YulBlock", "src": "5915:53:18", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "5932:3:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "5955:5:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "5937:17:18" }, "nodeType": "YulFunctionCall", "src": "5937:24:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "5925:6:18" }, "nodeType": "YulFunctionCall", "src": "5925:37:18" }, "nodeType": "YulExpressionStatement", "src": "5925:37:18" }] }, "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "5903:5:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "5910:3:18", "type": "" }], "src": "5850:118:18" }, { "body": { "nodeType": "YulBlock", "src": "6072:124:18", "statements": [{ "nodeType": "YulAssignment", "src": "6082:26:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "6094:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6105:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6090:3:18" }, "nodeType": "YulFunctionCall", "src": "6090:18:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "6082:4:18" }] }, { "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "6162:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "6175:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6186:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6171:3:18" }, "nodeType": "YulFunctionCall", "src": "6171:17:18" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "6118:43:18" }, "nodeType": "YulFunctionCall", "src": "6118:71:18" }, "nodeType": "YulExpressionStatement", "src": "6118:71:18" }] }, "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "6044:9:18", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "6056:6:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "6067:4:18", "type": "" }], "src": "5974:222:18" }, { "body": { "nodeType": "YulBlock", "src": "6242:76:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "6296:16:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "6305:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6308:1:18", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "6298:6:18" }, "nodeType": "YulFunctionCall", "src": "6298:12:18" }, "nodeType": "YulExpressionStatement", "src": "6298:12:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "6265:5:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "6287:5:18" }], "functionName": { "name": "cleanup_t_bool", "nodeType": "YulIdentifier", "src": "6272:14:18" }, "nodeType": "YulFunctionCall", "src": "6272:21:18" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "6262:2:18" }, "nodeType": "YulFunctionCall", "src": "6262:32:18" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "6255:6:18" }, "nodeType": "YulFunctionCall", "src": "6255:40:18" }, "nodeType": "YulIf", "src": "6252:60:18" }] }, "name": "validator_revert_t_bool", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "6235:5:18", "type": "" }], "src": "6202:116:18" }, { "body": { "nodeType": "YulBlock", "src": "6373:84:18", "statements": [{ "nodeType": "YulAssignment", "src": "6383:29:18", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "6405:6:18" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "6392:12:18" }, "nodeType": "YulFunctionCall", "src": "6392:20:18" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "6383:5:18" }] }, { "expression": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "6445:5:18" }], "functionName": { "name": "validator_revert_t_bool", "nodeType": "YulIdentifier", "src": "6421:23:18" }, "nodeType": "YulFunctionCall", "src": "6421:30:18" }, "nodeType": "YulExpressionStatement", "src": "6421:30:18" }] }, "name": "abi_decode_t_bool", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "6351:6:18", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "6359:3:18", "type": "" }], "returnVariables": [{ "name": "value", "nodeType": "YulTypedName", "src": "6367:5:18", "type": "" }], "src": "6324:133:18" }, { "body": { "nodeType": "YulBlock", "src": "6543:388:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "6589:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "6591:77:18" }, "nodeType": "YulFunctionCall", "src": "6591:79:18" }, "nodeType": "YulExpressionStatement", "src": "6591:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "6564:7:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "6573:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "6560:3:18" }, "nodeType": "YulFunctionCall", "src": "6560:23:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6585:2:18", "type": "", "value": "64" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "6556:3:18" }, "nodeType": "YulFunctionCall", "src": "6556:32:18" }, "nodeType": "YulIf", "src": "6553:119:18" }, { "nodeType": "YulBlock", "src": "6682:117:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "6697:15:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "6711:1:18", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "6701:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "6726:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "6761:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "6772:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6757:3:18" }, "nodeType": "YulFunctionCall", "src": "6757:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "6781:7:18" }], "functionName": { "name": "abi_decode_t_address", "nodeType": "YulIdentifier", "src": "6736:20:18" }, "nodeType": "YulFunctionCall", "src": "6736:53:18" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "6726:6:18" }] }] }, { "nodeType": "YulBlock", "src": "6809:115:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "6824:16:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "6838:2:18", "type": "", "value": "32" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "6828:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "6854:60:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "6886:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "6897:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6882:3:18" }, "nodeType": "YulFunctionCall", "src": "6882:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "6906:7:18" }], "functionName": { "name": "abi_decode_t_bool", "nodeType": "YulIdentifier", "src": "6864:17:18" }, "nodeType": "YulFunctionCall", "src": "6864:50:18" }, "variableNames": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "6854:6:18" }] }] }] }, "name": "abi_decode_tuple_t_addresst_bool", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "6505:9:18", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "6516:7:18", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "6528:6:18", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "6536:6:18", "type": "" }], "src": "6463:468:18" }, { "body": { "nodeType": "YulBlock", "src": "7026:28:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7043:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7046:1:18", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "7036:6:18" }, "nodeType": "YulFunctionCall", "src": "7036:12:18" }, "nodeType": "YulExpressionStatement", "src": "7036:12:18" }] }, "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d", "nodeType": "YulFunctionDefinition", "src": "6937:117:18" }, { "body": { "nodeType": "YulBlock", "src": "7149:28:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7166:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7169:1:18", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "7159:6:18" }, "nodeType": "YulFunctionCall", "src": "7159:12:18" }, "nodeType": "YulExpressionStatement", "src": "7159:12:18" }] }, "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae", "nodeType": "YulFunctionDefinition", "src": "7060:117:18" }, { "body": { "nodeType": "YulBlock", "src": "7211:152:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7228:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7231:77:18", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "7221:6:18" }, "nodeType": "YulFunctionCall", "src": "7221:88:18" }, "nodeType": "YulExpressionStatement", "src": "7221:88:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7325:1:18", "type": "", "value": "4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7328:4:18", "type": "", "value": "0x41" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "7318:6:18" }, "nodeType": "YulFunctionCall", "src": "7318:15:18" }, "nodeType": "YulExpressionStatement", "src": "7318:15:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7349:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7352:4:18", "type": "", "value": "0x24" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "7342:6:18" }, "nodeType": "YulFunctionCall", "src": "7342:15:18" }, "nodeType": "YulExpressionStatement", "src": "7342:15:18" }] }, "name": "panic_error_0x41", "nodeType": "YulFunctionDefinition", "src": "7183:180:18" }, { "body": { "nodeType": "YulBlock", "src": "7412:238:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "7422:58:18", "value": { "arguments": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "7444:6:18" }, { "arguments": [{ "name": "size", "nodeType": "YulIdentifier", "src": "7474:4:18" }], "functionName": { "name": "round_up_to_mul_of_32", "nodeType": "YulIdentifier", "src": "7452:21:18" }, "nodeType": "YulFunctionCall", "src": "7452:27:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "7440:3:18" }, "nodeType": "YulFunctionCall", "src": "7440:40:18" }, "variables": [{ "name": "newFreePtr", "nodeType": "YulTypedName", "src": "7426:10:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "7591:22:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x41", "nodeType": "YulIdentifier", "src": "7593:16:18" }, "nodeType": "YulFunctionCall", "src": "7593:18:18" }, "nodeType": "YulExpressionStatement", "src": "7593:18:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "newFreePtr", "nodeType": "YulIdentifier", "src": "7534:10:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7546:18:18", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "7531:2:18" }, "nodeType": "YulFunctionCall", "src": "7531:34:18" }, { "arguments": [{ "name": "newFreePtr", "nodeType": "YulIdentifier", "src": "7570:10:18" }, { "name": "memPtr", "nodeType": "YulIdentifier", "src": "7582:6:18" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "7567:2:18" }, "nodeType": "YulFunctionCall", "src": "7567:22:18" }], "functionName": { "name": "or", "nodeType": "YulIdentifier", "src": "7528:2:18" }, "nodeType": "YulFunctionCall", "src": "7528:62:18" }, "nodeType": "YulIf", "src": "7525:88:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7629:2:18", "type": "", "value": "64" }, { "name": "newFreePtr", "nodeType": "YulIdentifier", "src": "7633:10:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "7622:6:18" }, "nodeType": "YulFunctionCall", "src": "7622:22:18" }, "nodeType": "YulExpressionStatement", "src": "7622:22:18" }] }, "name": "finalize_allocation", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "7398:6:18", "type": "" }, { "name": "size", "nodeType": "YulTypedName", "src": "7406:4:18", "type": "" }], "src": "7369:281:18" }, { "body": { "nodeType": "YulBlock", "src": "7697:88:18", "statements": [{ "nodeType": "YulAssignment", "src": "7707:30:18", "value": { "arguments": [], "functionName": { "name": "allocate_unbounded", "nodeType": "YulIdentifier", "src": "7717:18:18" }, "nodeType": "YulFunctionCall", "src": "7717:20:18" }, "variableNames": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "7707:6:18" }] }, { "expression": { "arguments": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "7766:6:18" }, { "name": "size", "nodeType": "YulIdentifier", "src": "7774:4:18" }], "functionName": { "name": "finalize_allocation", "nodeType": "YulIdentifier", "src": "7746:19:18" }, "nodeType": "YulFunctionCall", "src": "7746:33:18" }, "nodeType": "YulExpressionStatement", "src": "7746:33:18" }] }, "name": "allocate_memory", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "size", "nodeType": "YulTypedName", "src": "7681:4:18", "type": "" }], "returnVariables": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "7690:6:18", "type": "" }], "src": "7656:129:18" }, { "body": { "nodeType": "YulBlock", "src": "7857:241:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "7962:22:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x41", "nodeType": "YulIdentifier", "src": "7964:16:18" }, "nodeType": "YulFunctionCall", "src": "7964:18:18" }, "nodeType": "YulExpressionStatement", "src": "7964:18:18" }] }, "condition": { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "7934:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7942:18:18", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "7931:2:18" }, "nodeType": "YulFunctionCall", "src": "7931:30:18" }, "nodeType": "YulIf", "src": "7928:56:18" }, { "nodeType": "YulAssignment", "src": "7994:37:18", "value": { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "8024:6:18" }], "functionName": { "name": "round_up_to_mul_of_32", "nodeType": "YulIdentifier", "src": "8002:21:18" }, "nodeType": "YulFunctionCall", "src": "8002:29:18" }, "variableNames": [{ "name": "size", "nodeType": "YulIdentifier", "src": "7994:4:18" }] }, { "nodeType": "YulAssignment", "src": "8068:23:18", "value": { "arguments": [{ "name": "size", "nodeType": "YulIdentifier", "src": "8080:4:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8086:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8076:3:18" }, "nodeType": "YulFunctionCall", "src": "8076:15:18" }, "variableNames": [{ "name": "size", "nodeType": "YulIdentifier", "src": "8068:4:18" }] }] }, "name": "array_allocation_size_t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "length", "nodeType": "YulTypedName", "src": "7841:6:18", "type": "" }], "returnVariables": [{ "name": "size", "nodeType": "YulTypedName", "src": "7852:4:18", "type": "" }], "src": "7791:307:18" }, { "body": { "nodeType": "YulBlock", "src": "8168:82:18", "statements": [{ "expression": { "arguments": [{ "name": "dst", "nodeType": "YulIdentifier", "src": "8191:3:18" }, { "name": "src", "nodeType": "YulIdentifier", "src": "8196:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "8201:6:18" }], "functionName": { "name": "calldatacopy", "nodeType": "YulIdentifier", "src": "8178:12:18" }, "nodeType": "YulFunctionCall", "src": "8178:30:18" }, "nodeType": "YulExpressionStatement", "src": "8178:30:18" }, { "expression": { "arguments": [{ "arguments": [{ "name": "dst", "nodeType": "YulIdentifier", "src": "8228:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "8233:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8224:3:18" }, "nodeType": "YulFunctionCall", "src": "8224:16:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8242:1:18", "type": "", "value": "0" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "8217:6:18" }, "nodeType": "YulFunctionCall", "src": "8217:27:18" }, "nodeType": "YulExpressionStatement", "src": "8217:27:18" }] }, "name": "copy_calldata_to_memory_with_cleanup", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "src", "nodeType": "YulTypedName", "src": "8150:3:18", "type": "" }, { "name": "dst", "nodeType": "YulTypedName", "src": "8155:3:18", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "8160:6:18", "type": "" }], "src": "8104:146:18" }, { "body": { "nodeType": "YulBlock", "src": "8339:340:18", "statements": [{ "nodeType": "YulAssignment", "src": "8349:74:18", "value": { "arguments": [{ "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "8415:6:18" }], "functionName": { "name": "array_allocation_size_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "8374:40:18" }, "nodeType": "YulFunctionCall", "src": "8374:48:18" }], "functionName": { "name": "allocate_memory", "nodeType": "YulIdentifier", "src": "8358:15:18" }, "nodeType": "YulFunctionCall", "src": "8358:65:18" }, "variableNames": [{ "name": "array", "nodeType": "YulIdentifier", "src": "8349:5:18" }] }, { "expression": { "arguments": [{ "name": "array", "nodeType": "YulIdentifier", "src": "8439:5:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "8446:6:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "8432:6:18" }, "nodeType": "YulFunctionCall", "src": "8432:21:18" }, "nodeType": "YulExpressionStatement", "src": "8432:21:18" }, { "nodeType": "YulVariableDeclaration", "src": "8462:27:18", "value": { "arguments": [{ "name": "array", "nodeType": "YulIdentifier", "src": "8477:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8484:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8473:3:18" }, "nodeType": "YulFunctionCall", "src": "8473:16:18" }, "variables": [{ "name": "dst", "nodeType": "YulTypedName", "src": "8466:3:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "8527:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae", "nodeType": "YulIdentifier", "src": "8529:77:18" }, "nodeType": "YulFunctionCall", "src": "8529:79:18" }, "nodeType": "YulExpressionStatement", "src": "8529:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "8508:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "8513:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8504:3:18" }, "nodeType": "YulFunctionCall", "src": "8504:16:18" }, { "name": "end", "nodeType": "YulIdentifier", "src": "8522:3:18" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "8501:2:18" }, "nodeType": "YulFunctionCall", "src": "8501:25:18" }, "nodeType": "YulIf", "src": "8498:112:18" }, { "expression": { "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "8656:3:18" }, { "name": "dst", "nodeType": "YulIdentifier", "src": "8661:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "8666:6:18" }], "functionName": { "name": "copy_calldata_to_memory_with_cleanup", "nodeType": "YulIdentifier", "src": "8619:36:18" }, "nodeType": "YulFunctionCall", "src": "8619:54:18" }, "nodeType": "YulExpressionStatement", "src": "8619:54:18" }] }, "name": "abi_decode_available_length_t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "src", "nodeType": "YulTypedName", "src": "8312:3:18", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "8317:6:18", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "8325:3:18", "type": "" }], "returnVariables": [{ "name": "array", "nodeType": "YulTypedName", "src": "8333:5:18", "type": "" }], "src": "8256:423:18" }, { "body": { "nodeType": "YulBlock", "src": "8759:277:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "8808:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d", "nodeType": "YulIdentifier", "src": "8810:77:18" }, "nodeType": "YulFunctionCall", "src": "8810:79:18" }, "nodeType": "YulExpressionStatement", "src": "8810:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "8787:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8795:4:18", "type": "", "value": "0x1f" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8783:3:18" }, "nodeType": "YulFunctionCall", "src": "8783:17:18" }, { "name": "end", "nodeType": "YulIdentifier", "src": "8802:3:18" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "8779:3:18" }, "nodeType": "YulFunctionCall", "src": "8779:27:18" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "8772:6:18" }, "nodeType": "YulFunctionCall", "src": "8772:35:18" }, "nodeType": "YulIf", "src": "8769:122:18" }, { "nodeType": "YulVariableDeclaration", "src": "8900:34:18", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "8927:6:18" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "8914:12:18" }, "nodeType": "YulFunctionCall", "src": "8914:20:18" }, "variables": [{ "name": "length", "nodeType": "YulTypedName", "src": "8904:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "8943:87:18", "value": { "arguments": [{ "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "9003:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9011:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8999:3:18" }, "nodeType": "YulFunctionCall", "src": "8999:17:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "9018:6:18" }, { "name": "end", "nodeType": "YulIdentifier", "src": "9026:3:18" }], "functionName": { "name": "abi_decode_available_length_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "8952:46:18" }, "nodeType": "YulFunctionCall", "src": "8952:78:18" }, "variableNames": [{ "name": "array", "nodeType": "YulIdentifier", "src": "8943:5:18" }] }] }, "name": "abi_decode_t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "8737:6:18", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "8745:3:18", "type": "" }], "returnVariables": [{ "name": "array", "nodeType": "YulTypedName", "src": "8753:5:18", "type": "" }], "src": "8698:338:18" }, { "body": { "nodeType": "YulBlock", "src": "9168:817:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "9215:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "9217:77:18" }, "nodeType": "YulFunctionCall", "src": "9217:79:18" }, "nodeType": "YulExpressionStatement", "src": "9217:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "9189:7:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "9198:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "9185:3:18" }, "nodeType": "YulFunctionCall", "src": "9185:23:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9210:3:18", "type": "", "value": "128" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "9181:3:18" }, "nodeType": "YulFunctionCall", "src": "9181:33:18" }, "nodeType": "YulIf", "src": "9178:120:18" }, { "nodeType": "YulBlock", "src": "9308:117:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "9323:15:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "9337:1:18", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "9327:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "9352:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "9387:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "9398:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "9383:3:18" }, "nodeType": "YulFunctionCall", "src": "9383:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "9407:7:18" }], "functionName": { "name": "abi_decode_t_address", "nodeType": "YulIdentifier", "src": "9362:20:18" }, "nodeType": "YulFunctionCall", "src": "9362:53:18" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "9352:6:18" }] }] }, { "nodeType": "YulBlock", "src": "9435:118:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "9450:16:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "9464:2:18", "type": "", "value": "32" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "9454:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "9480:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "9515:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "9526:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "9511:3:18" }, "nodeType": "YulFunctionCall", "src": "9511:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "9535:7:18" }], "functionName": { "name": "abi_decode_t_address", "nodeType": "YulIdentifier", "src": "9490:20:18" }, "nodeType": "YulFunctionCall", "src": "9490:53:18" }, "variableNames": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "9480:6:18" }] }] }, { "nodeType": "YulBlock", "src": "9563:118:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "9578:16:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "9592:2:18", "type": "", "value": "64" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "9582:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "9608:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "9643:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "9654:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "9639:3:18" }, "nodeType": "YulFunctionCall", "src": "9639:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "9663:7:18" }], "functionName": { "name": "abi_decode_t_uint256", "nodeType": "YulIdentifier", "src": "9618:20:18" }, "nodeType": "YulFunctionCall", "src": "9618:53:18" }, "variableNames": [{ "name": "value2", "nodeType": "YulIdentifier", "src": "9608:6:18" }] }] }, { "nodeType": "YulBlock", "src": "9691:287:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "9706:46:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "9737:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9748:2:18", "type": "", "value": "96" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "9733:3:18" }, "nodeType": "YulFunctionCall", "src": "9733:18:18" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "9720:12:18" }, "nodeType": "YulFunctionCall", "src": "9720:32:18" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "9710:6:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "9799:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db", "nodeType": "YulIdentifier", "src": "9801:77:18" }, "nodeType": "YulFunctionCall", "src": "9801:79:18" }, "nodeType": "YulExpressionStatement", "src": "9801:79:18" }] }, "condition": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "9771:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9779:18:18", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "9768:2:18" }, "nodeType": "YulFunctionCall", "src": "9768:30:18" }, "nodeType": "YulIf", "src": "9765:117:18" }, { "nodeType": "YulAssignment", "src": "9896:72:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "9940:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "9951:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "9936:3:18" }, "nodeType": "YulFunctionCall", "src": "9936:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "9960:7:18" }], "functionName": { "name": "abi_decode_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "9906:29:18" }, "nodeType": "YulFunctionCall", "src": "9906:62:18" }, "variableNames": [{ "name": "value3", "nodeType": "YulIdentifier", "src": "9896:6:18" }] }] }] }, "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "9114:9:18", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "9125:7:18", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "9137:6:18", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "9145:6:18", "type": "" }, { "name": "value2", "nodeType": "YulTypedName", "src": "9153:6:18", "type": "" }, { "name": "value3", "nodeType": "YulTypedName", "src": "9161:6:18", "type": "" }], "src": "9042:943:18" }, { "body": { "nodeType": "YulBlock", "src": "10058:241:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "10163:22:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x41", "nodeType": "YulIdentifier", "src": "10165:16:18" }, "nodeType": "YulFunctionCall", "src": "10165:18:18" }, "nodeType": "YulExpressionStatement", "src": "10165:18:18" }] }, "condition": { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "10135:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10143:18:18", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "10132:2:18" }, "nodeType": "YulFunctionCall", "src": "10132:30:18" }, "nodeType": "YulIf", "src": "10129:56:18" }, { "nodeType": "YulAssignment", "src": "10195:37:18", "value": { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "10225:6:18" }], "functionName": { "name": "round_up_to_mul_of_32", "nodeType": "YulIdentifier", "src": "10203:21:18" }, "nodeType": "YulFunctionCall", "src": "10203:29:18" }, "variableNames": [{ "name": "size", "nodeType": "YulIdentifier", "src": "10195:4:18" }] }, { "nodeType": "YulAssignment", "src": "10269:23:18", "value": { "arguments": [{ "name": "size", "nodeType": "YulIdentifier", "src": "10281:4:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10287:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "10277:3:18" }, "nodeType": "YulFunctionCall", "src": "10277:15:18" }, "variableNames": [{ "name": "size", "nodeType": "YulIdentifier", "src": "10269:4:18" }] }] }, "name": "array_allocation_size_t_string_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "length", "nodeType": "YulTypedName", "src": "10042:6:18", "type": "" }], "returnVariables": [{ "name": "size", "nodeType": "YulTypedName", "src": "10053:4:18", "type": "" }], "src": "9991:308:18" }, { "body": { "nodeType": "YulBlock", "src": "10389:341:18", "statements": [{ "nodeType": "YulAssignment", "src": "10399:75:18", "value": { "arguments": [{ "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "10466:6:18" }], "functionName": { "name": "array_allocation_size_t_string_memory_ptr", "nodeType": "YulIdentifier", "src": "10424:41:18" }, "nodeType": "YulFunctionCall", "src": "10424:49:18" }], "functionName": { "name": "allocate_memory", "nodeType": "YulIdentifier", "src": "10408:15:18" }, "nodeType": "YulFunctionCall", "src": "10408:66:18" }, "variableNames": [{ "name": "array", "nodeType": "YulIdentifier", "src": "10399:5:18" }] }, { "expression": { "arguments": [{ "name": "array", "nodeType": "YulIdentifier", "src": "10490:5:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "10497:6:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "10483:6:18" }, "nodeType": "YulFunctionCall", "src": "10483:21:18" }, "nodeType": "YulExpressionStatement", "src": "10483:21:18" }, { "nodeType": "YulVariableDeclaration", "src": "10513:27:18", "value": { "arguments": [{ "name": "array", "nodeType": "YulIdentifier", "src": "10528:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10535:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "10524:3:18" }, "nodeType": "YulFunctionCall", "src": "10524:16:18" }, "variables": [{ "name": "dst", "nodeType": "YulTypedName", "src": "10517:3:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "10578:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae", "nodeType": "YulIdentifier", "src": "10580:77:18" }, "nodeType": "YulFunctionCall", "src": "10580:79:18" }, "nodeType": "YulExpressionStatement", "src": "10580:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "10559:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "10564:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "10555:3:18" }, "nodeType": "YulFunctionCall", "src": "10555:16:18" }, { "name": "end", "nodeType": "YulIdentifier", "src": "10573:3:18" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "10552:2:18" }, "nodeType": "YulFunctionCall", "src": "10552:25:18" }, "nodeType": "YulIf", "src": "10549:112:18" }, { "expression": { "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "10707:3:18" }, { "name": "dst", "nodeType": "YulIdentifier", "src": "10712:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "10717:6:18" }], "functionName": { "name": "copy_calldata_to_memory_with_cleanup", "nodeType": "YulIdentifier", "src": "10670:36:18" }, "nodeType": "YulFunctionCall", "src": "10670:54:18" }, "nodeType": "YulExpressionStatement", "src": "10670:54:18" }] }, "name": "abi_decode_available_length_t_string_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "src", "nodeType": "YulTypedName", "src": "10362:3:18", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "10367:6:18", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "10375:3:18", "type": "" }], "returnVariables": [{ "name": "array", "nodeType": "YulTypedName", "src": "10383:5:18", "type": "" }], "src": "10305:425:18" }, { "body": { "nodeType": "YulBlock", "src": "10812:278:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "10861:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d", "nodeType": "YulIdentifier", "src": "10863:77:18" }, "nodeType": "YulFunctionCall", "src": "10863:79:18" }, "nodeType": "YulExpressionStatement", "src": "10863:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "10840:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10848:4:18", "type": "", "value": "0x1f" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "10836:3:18" }, "nodeType": "YulFunctionCall", "src": "10836:17:18" }, { "name": "end", "nodeType": "YulIdentifier", "src": "10855:3:18" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "10832:3:18" }, "nodeType": "YulFunctionCall", "src": "10832:27:18" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "10825:6:18" }, "nodeType": "YulFunctionCall", "src": "10825:35:18" }, "nodeType": "YulIf", "src": "10822:122:18" }, { "nodeType": "YulVariableDeclaration", "src": "10953:34:18", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "10980:6:18" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "10967:12:18" }, "nodeType": "YulFunctionCall", "src": "10967:20:18" }, "variables": [{ "name": "length", "nodeType": "YulTypedName", "src": "10957:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "10996:88:18", "value": { "arguments": [{ "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "11057:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11065:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "11053:3:18" }, "nodeType": "YulFunctionCall", "src": "11053:17:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "11072:6:18" }, { "name": "end", "nodeType": "YulIdentifier", "src": "11080:3:18" }], "functionName": { "name": "abi_decode_available_length_t_string_memory_ptr", "nodeType": "YulIdentifier", "src": "11005:47:18" }, "nodeType": "YulFunctionCall", "src": "11005:79:18" }, "variableNames": [{ "name": "array", "nodeType": "YulIdentifier", "src": "10996:5:18" }] }] }, "name": "abi_decode_t_string_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "10790:6:18", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "10798:3:18", "type": "" }], "returnVariables": [{ "name": "array", "nodeType": "YulTypedName", "src": "10806:5:18", "type": "" }], "src": "10750:340:18" }, { "body": { "nodeType": "YulBlock", "src": "11172:433:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "11218:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "11220:77:18" }, "nodeType": "YulFunctionCall", "src": "11220:79:18" }, "nodeType": "YulExpressionStatement", "src": "11220:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "11193:7:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "11202:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "11189:3:18" }, "nodeType": "YulFunctionCall", "src": "11189:23:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11214:2:18", "type": "", "value": "32" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "11185:3:18" }, "nodeType": "YulFunctionCall", "src": "11185:32:18" }, "nodeType": "YulIf", "src": "11182:119:18" }, { "nodeType": "YulBlock", "src": "11311:287:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "11326:45:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "11357:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11368:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "11353:3:18" }, "nodeType": "YulFunctionCall", "src": "11353:17:18" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "11340:12:18" }, "nodeType": "YulFunctionCall", "src": "11340:31:18" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "11330:6:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "11418:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db", "nodeType": "YulIdentifier", "src": "11420:77:18" }, "nodeType": "YulFunctionCall", "src": "11420:79:18" }, "nodeType": "YulExpressionStatement", "src": "11420:79:18" }] }, "condition": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "11390:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11398:18:18", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "11387:2:18" }, "nodeType": "YulFunctionCall", "src": "11387:30:18" }, "nodeType": "YulIf", "src": "11384:117:18" }, { "nodeType": "YulAssignment", "src": "11515:73:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "11560:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "11571:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "11556:3:18" }, "nodeType": "YulFunctionCall", "src": "11556:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "11580:7:18" }], "functionName": { "name": "abi_decode_t_string_memory_ptr", "nodeType": "YulIdentifier", "src": "11525:30:18" }, "nodeType": "YulFunctionCall", "src": "11525:63:18" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "11515:6:18" }] }] }] }, "name": "abi_decode_tuple_t_string_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "11142:9:18", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "11153:7:18", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "11165:6:18", "type": "" }], "src": "11096:509:18" }, { "body": { "nodeType": "YulBlock", "src": "11694:391:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "11740:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "11742:77:18" }, "nodeType": "YulFunctionCall", "src": "11742:79:18" }, "nodeType": "YulExpressionStatement", "src": "11742:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "11715:7:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "11724:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "11711:3:18" }, "nodeType": "YulFunctionCall", "src": "11711:23:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11736:2:18", "type": "", "value": "64" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "11707:3:18" }, "nodeType": "YulFunctionCall", "src": "11707:32:18" }, "nodeType": "YulIf", "src": "11704:119:18" }, { "nodeType": "YulBlock", "src": "11833:117:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "11848:15:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "11862:1:18", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "11852:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "11877:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "11912:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "11923:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "11908:3:18" }, "nodeType": "YulFunctionCall", "src": "11908:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "11932:7:18" }], "functionName": { "name": "abi_decode_t_address", "nodeType": "YulIdentifier", "src": "11887:20:18" }, "nodeType": "YulFunctionCall", "src": "11887:53:18" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "11877:6:18" }] }] }, { "nodeType": "YulBlock", "src": "11960:118:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "11975:16:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "11989:2:18", "type": "", "value": "32" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "11979:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "12005:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "12040:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "12051:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "12036:3:18" }, "nodeType": "YulFunctionCall", "src": "12036:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "12060:7:18" }], "functionName": { "name": "abi_decode_t_address", "nodeType": "YulIdentifier", "src": "12015:20:18" }, "nodeType": "YulFunctionCall", "src": "12015:53:18" }, "variableNames": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "12005:6:18" }] }] }] }, "name": "abi_decode_tuple_t_addresst_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "11656:9:18", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "11667:7:18", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "11679:6:18", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "11687:6:18", "type": "" }], "src": "11611:474:18" }, { "body": { "nodeType": "YulBlock", "src": "12119:152:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "12136:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12139:77:18", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "12129:6:18" }, "nodeType": "YulFunctionCall", "src": "12129:88:18" }, "nodeType": "YulExpressionStatement", "src": "12129:88:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "12233:1:18", "type": "", "value": "4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12236:4:18", "type": "", "value": "0x22" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "12226:6:18" }, "nodeType": "YulFunctionCall", "src": "12226:15:18" }, "nodeType": "YulExpressionStatement", "src": "12226:15:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "12257:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12260:4:18", "type": "", "value": "0x24" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "12250:6:18" }, "nodeType": "YulFunctionCall", "src": "12250:15:18" }, "nodeType": "YulExpressionStatement", "src": "12250:15:18" }] }, "name": "panic_error_0x22", "nodeType": "YulFunctionDefinition", "src": "12091:180:18" }, { "body": { "nodeType": "YulBlock", "src": "12328:269:18", "statements": [{ "nodeType": "YulAssignment", "src": "12338:22:18", "value": { "arguments": [{ "name": "data", "nodeType": "YulIdentifier", "src": "12352:4:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12358:1:18", "type": "", "value": "2" }], "functionName": { "name": "div", "nodeType": "YulIdentifier", "src": "12348:3:18" }, "nodeType": "YulFunctionCall", "src": "12348:12:18" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "12338:6:18" }] }, { "nodeType": "YulVariableDeclaration", "src": "12369:38:18", "value": { "arguments": [{ "name": "data", "nodeType": "YulIdentifier", "src": "12399:4:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12405:1:18", "type": "", "value": "1" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "12395:3:18" }, "nodeType": "YulFunctionCall", "src": "12395:12:18" }, "variables": [{ "name": "outOfPlaceEncoding", "nodeType": "YulTypedName", "src": "12373:18:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "12446:51:18", "statements": [{ "nodeType": "YulAssignment", "src": "12460:27:18", "value": { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "12474:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12482:4:18", "type": "", "value": "0x7f" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "12470:3:18" }, "nodeType": "YulFunctionCall", "src": "12470:17:18" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "12460:6:18" }] }] }, "condition": { "arguments": [{ "name": "outOfPlaceEncoding", "nodeType": "YulIdentifier", "src": "12426:18:18" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "12419:6:18" }, "nodeType": "YulFunctionCall", "src": "12419:26:18" }, "nodeType": "YulIf", "src": "12416:81:18" }, { "body": { "nodeType": "YulBlock", "src": "12549:42:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x22", "nodeType": "YulIdentifier", "src": "12563:16:18" }, "nodeType": "YulFunctionCall", "src": "12563:18:18" }, "nodeType": "YulExpressionStatement", "src": "12563:18:18" }] }, "condition": { "arguments": [{ "name": "outOfPlaceEncoding", "nodeType": "YulIdentifier", "src": "12513:18:18" }, { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "12536:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12544:2:18", "type": "", "value": "32" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "12533:2:18" }, "nodeType": "YulFunctionCall", "src": "12533:14:18" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "12510:2:18" }, "nodeType": "YulFunctionCall", "src": "12510:38:18" }, "nodeType": "YulIf", "src": "12507:84:18" }] }, "name": "extract_byte_array_length", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "data", "nodeType": "YulTypedName", "src": "12312:4:18", "type": "" }], "returnVariables": [{ "name": "length", "nodeType": "YulTypedName", "src": "12321:6:18", "type": "" }], "src": "12277:320:18" }, { "body": { "nodeType": "YulBlock", "src": "12757:288:18", "statements": [{ "nodeType": "YulAssignment", "src": "12767:26:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "12779:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12790:2:18", "type": "", "value": "96" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "12775:3:18" }, "nodeType": "YulFunctionCall", "src": "12775:18:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "12767:4:18" }] }, { "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "12847:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "12860:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12871:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "12856:3:18" }, "nodeType": "YulFunctionCall", "src": "12856:17:18" }], "functionName": { "name": "abi_encode_t_address_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "12803:43:18" }, "nodeType": "YulFunctionCall", "src": "12803:71:18" }, "nodeType": "YulExpressionStatement", "src": "12803:71:18" }, { "expression": { "arguments": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "12928:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "12941:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12952:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "12937:3:18" }, "nodeType": "YulFunctionCall", "src": "12937:18:18" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "12884:43:18" }, "nodeType": "YulFunctionCall", "src": "12884:72:18" }, "nodeType": "YulExpressionStatement", "src": "12884:72:18" }, { "expression": { "arguments": [{ "name": "value2", "nodeType": "YulIdentifier", "src": "13010:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "13023:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "13034:2:18", "type": "", "value": "64" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "13019:3:18" }, "nodeType": "YulFunctionCall", "src": "13019:18:18" }], "functionName": { "name": "abi_encode_t_address_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "12966:43:18" }, "nodeType": "YulFunctionCall", "src": "12966:72:18" }, "nodeType": "YulExpressionStatement", "src": "12966:72:18" }] }, "name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "12713:9:18", "type": "" }, { "name": "value2", "nodeType": "YulTypedName", "src": "12725:6:18", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "12733:6:18", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "12741:6:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "12752:4:18", "type": "" }], "src": "12603:442:18" }, { "body": { "nodeType": "YulBlock", "src": "13165:34:18", "statements": [{ "nodeType": "YulAssignment", "src": "13175:18:18", "value": { "name": "pos", "nodeType": "YulIdentifier", "src": "13190:3:18" }, "variableNames": [{ "name": "updated_pos", "nodeType": "YulIdentifier", "src": "13175:11:18" }] }] }, "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "13137:3:18", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "13142:6:18", "type": "" }], "returnVariables": [{ "name": "updated_pos", "nodeType": "YulTypedName", "src": "13153:11:18", "type": "" }], "src": "13051:148:18" }, { "body": { "nodeType": "YulBlock", "src": "13315:280:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "13325:53:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "13372:5:18" }], "functionName": { "name": "array_length_t_string_memory_ptr", "nodeType": "YulIdentifier", "src": "13339:32:18" }, "nodeType": "YulFunctionCall", "src": "13339:39:18" }, "variables": [{ "name": "length", "nodeType": "YulTypedName", "src": "13329:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "13387:96:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "13471:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "13476:6:18" }], "functionName": { "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulIdentifier", "src": "13394:76:18" }, "nodeType": "YulFunctionCall", "src": "13394:89:18" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "13387:3:18" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "13531:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "13538:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "13527:3:18" }, "nodeType": "YulFunctionCall", "src": "13527:16:18" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "13545:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "13550:6:18" }], "functionName": { "name": "copy_memory_to_memory_with_cleanup", "nodeType": "YulIdentifier", "src": "13492:34:18" }, "nodeType": "YulFunctionCall", "src": "13492:65:18" }, "nodeType": "YulExpressionStatement", "src": "13492:65:18" }, { "nodeType": "YulAssignment", "src": "13566:23:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "13577:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "13582:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "13573:3:18" }, "nodeType": "YulFunctionCall", "src": "13573:16:18" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "13566:3:18" }] }] }, "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "13296:5:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "13303:3:18", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "13311:3:18", "type": "" }], "src": "13205:390:18" }, { "body": { "nodeType": "YulBlock", "src": "13785:251:18", "statements": [{ "nodeType": "YulAssignment", "src": "13796:102:18", "value": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "13885:6:18" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "13894:3:18" }], "functionName": { "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulIdentifier", "src": "13803:81:18" }, "nodeType": "YulFunctionCall", "src": "13803:95:18" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "13796:3:18" }] }, { "nodeType": "YulAssignment", "src": "13908:102:18", "value": { "arguments": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "13997:6:18" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "14006:3:18" }], "functionName": { "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulIdentifier", "src": "13915:81:18" }, "nodeType": "YulFunctionCall", "src": "13915:95:18" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "13908:3:18" }] }, { "nodeType": "YulAssignment", "src": "14020:10:18", "value": { "name": "pos", "nodeType": "YulIdentifier", "src": "14027:3:18" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "14020:3:18" }] }] }, "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "13756:3:18", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "13762:6:18", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "13770:6:18", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "13781:3:18", "type": "" }], "src": "13601:435:18" }, { "body": { "nodeType": "YulBlock", "src": "14070:152:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "14087:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14090:77:18", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "14080:6:18" }, "nodeType": "YulFunctionCall", "src": "14080:88:18" }, "nodeType": "YulExpressionStatement", "src": "14080:88:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "14184:1:18", "type": "", "value": "4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14187:4:18", "type": "", "value": "0x11" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "14177:6:18" }, "nodeType": "YulFunctionCall", "src": "14177:15:18" }, "nodeType": "YulExpressionStatement", "src": "14177:15:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "14208:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14211:4:18", "type": "", "value": "0x24" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "14201:6:18" }, "nodeType": "YulFunctionCall", "src": "14201:15:18" }, "nodeType": "YulExpressionStatement", "src": "14201:15:18" }] }, "name": "panic_error_0x11", "nodeType": "YulFunctionDefinition", "src": "14042:180:18" }, { "body": { "nodeType": "YulBlock", "src": "14271:190:18", "statements": [{ "nodeType": "YulAssignment", "src": "14281:33:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "14308:5:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "14290:17:18" }, "nodeType": "YulFunctionCall", "src": "14290:24:18" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "14281:5:18" }] }, { "body": { "nodeType": "YulBlock", "src": "14404:22:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x11", "nodeType": "YulIdentifier", "src": "14406:16:18" }, "nodeType": "YulFunctionCall", "src": "14406:18:18" }, "nodeType": "YulExpressionStatement", "src": "14406:18:18" }] }, "condition": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "14329:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14336:66:18", "type": "", "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "14326:2:18" }, "nodeType": "YulFunctionCall", "src": "14326:77:18" }, "nodeType": "YulIf", "src": "14323:103:18" }, { "nodeType": "YulAssignment", "src": "14435:20:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "14446:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14453:1:18", "type": "", "value": "1" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "14442:3:18" }, "nodeType": "YulFunctionCall", "src": "14442:13:18" }, "variableNames": [{ "name": "ret", "nodeType": "YulIdentifier", "src": "14435:3:18" }] }] }, "name": "increment_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "14257:5:18", "type": "" }], "returnVariables": [{ "name": "ret", "nodeType": "YulTypedName", "src": "14267:3:18", "type": "" }], "src": "14228:233:18" }, { "body": { "nodeType": "YulBlock", "src": "14525:40:18", "statements": [{ "nodeType": "YulAssignment", "src": "14536:22:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "14552:5:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "14546:5:18" }, "nodeType": "YulFunctionCall", "src": "14546:12:18" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "14536:6:18" }] }] }, "name": "array_length_t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "14508:5:18", "type": "" }], "returnVariables": [{ "name": "length", "nodeType": "YulTypedName", "src": "14518:6:18", "type": "" }], "src": "14467:98:18" }, { "body": { "nodeType": "YulBlock", "src": "14666:73:18", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "14683:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "14688:6:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "14676:6:18" }, "nodeType": "YulFunctionCall", "src": "14676:19:18" }, "nodeType": "YulExpressionStatement", "src": "14676:19:18" }, { "nodeType": "YulAssignment", "src": "14704:29:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "14723:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14728:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "14719:3:18" }, "nodeType": "YulFunctionCall", "src": "14719:14:18" }, "variableNames": [{ "name": "updated_pos", "nodeType": "YulIdentifier", "src": "14704:11:18" }] }] }, "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "14638:3:18", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "14643:6:18", "type": "" }], "returnVariables": [{ "name": "updated_pos", "nodeType": "YulTypedName", "src": "14654:11:18", "type": "" }], "src": "14571:168:18" }, { "body": { "nodeType": "YulBlock", "src": "14835:283:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "14845:52:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "14891:5:18" }], "functionName": { "name": "array_length_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "14859:31:18" }, "nodeType": "YulFunctionCall", "src": "14859:38:18" }, "variables": [{ "name": "length", "nodeType": "YulTypedName", "src": "14849:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "14906:77:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "14971:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "14976:6:18" }], "functionName": { "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "14913:57:18" }, "nodeType": "YulFunctionCall", "src": "14913:70:18" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "14906:3:18" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "15031:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "15038:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "15027:3:18" }, "nodeType": "YulFunctionCall", "src": "15027:16:18" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "15045:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "15050:6:18" }], "functionName": { "name": "copy_memory_to_memory_with_cleanup", "nodeType": "YulIdentifier", "src": "14992:34:18" }, "nodeType": "YulFunctionCall", "src": "14992:65:18" }, "nodeType": "YulExpressionStatement", "src": "14992:65:18" }, { "nodeType": "YulAssignment", "src": "15066:46:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "15077:3:18" }, { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "15104:6:18" }], "functionName": { "name": "round_up_to_mul_of_32", "nodeType": "YulIdentifier", "src": "15082:21:18" }, "nodeType": "YulFunctionCall", "src": "15082:29:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "15073:3:18" }, "nodeType": "YulFunctionCall", "src": "15073:39:18" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "15066:3:18" }] }] }, "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "14816:5:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "14823:3:18", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "14831:3:18", "type": "" }], "src": "14745:373:18" }, { "body": { "nodeType": "YulBlock", "src": "15324:440:18", "statements": [{ "nodeType": "YulAssignment", "src": "15334:27:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "15346:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "15357:3:18", "type": "", "value": "128" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "15342:3:18" }, "nodeType": "YulFunctionCall", "src": "15342:19:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "15334:4:18" }] }, { "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "15415:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "15428:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "15439:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "15424:3:18" }, "nodeType": "YulFunctionCall", "src": "15424:17:18" }], "functionName": { "name": "abi_encode_t_address_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "15371:43:18" }, "nodeType": "YulFunctionCall", "src": "15371:71:18" }, "nodeType": "YulExpressionStatement", "src": "15371:71:18" }, { "expression": { "arguments": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "15496:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "15509:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "15520:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "15505:3:18" }, "nodeType": "YulFunctionCall", "src": "15505:18:18" }], "functionName": { "name": "abi_encode_t_address_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "15452:43:18" }, "nodeType": "YulFunctionCall", "src": "15452:72:18" }, "nodeType": "YulExpressionStatement", "src": "15452:72:18" }, { "expression": { "arguments": [{ "name": "value2", "nodeType": "YulIdentifier", "src": "15578:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "15591:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "15602:2:18", "type": "", "value": "64" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "15587:3:18" }, "nodeType": "YulFunctionCall", "src": "15587:18:18" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "15534:43:18" }, "nodeType": "YulFunctionCall", "src": "15534:72:18" }, "nodeType": "YulExpressionStatement", "src": "15534:72:18" }, { "expression": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "15627:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "15638:2:18", "type": "", "value": "96" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "15623:3:18" }, "nodeType": "YulFunctionCall", "src": "15623:18:18" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "15647:4:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "15653:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "15643:3:18" }, "nodeType": "YulFunctionCall", "src": "15643:20:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "15616:6:18" }, "nodeType": "YulFunctionCall", "src": "15616:48:18" }, "nodeType": "YulExpressionStatement", "src": "15616:48:18" }, { "nodeType": "YulAssignment", "src": "15673:84:18", "value": { "arguments": [{ "name": "value3", "nodeType": "YulIdentifier", "src": "15743:6:18" }, { "name": "tail", "nodeType": "YulIdentifier", "src": "15752:4:18" }], "functionName": { "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "15681:61:18" }, "nodeType": "YulFunctionCall", "src": "15681:76:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "15673:4:18" }] }] }, "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "15272:9:18", "type": "" }, { "name": "value3", "nodeType": "YulTypedName", "src": "15284:6:18", "type": "" }, { "name": "value2", "nodeType": "YulTypedName", "src": "15292:6:18", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "15300:6:18", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "15308:6:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "15319:4:18", "type": "" }], "src": "15124:640:18" }, { "body": { "nodeType": "YulBlock", "src": "15832:79:18", "statements": [{ "nodeType": "YulAssignment", "src": "15842:22:18", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "15857:6:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "15851:5:18" }, "nodeType": "YulFunctionCall", "src": "15851:13:18" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "15842:5:18" }] }, { "expression": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "15899:5:18" }], "functionName": { "name": "validator_revert_t_bytes4", "nodeType": "YulIdentifier", "src": "15873:25:18" }, "nodeType": "YulFunctionCall", "src": "15873:32:18" }, "nodeType": "YulExpressionStatement", "src": "15873:32:18" }] }, "name": "abi_decode_t_bytes4_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "15810:6:18", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "15818:3:18", "type": "" }], "returnVariables": [{ "name": "value", "nodeType": "YulTypedName", "src": "15826:5:18", "type": "" }], "src": "15770:141:18" }, { "body": { "nodeType": "YulBlock", "src": "15993:273:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "16039:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "16041:77:18" }, "nodeType": "YulFunctionCall", "src": "16041:79:18" }, "nodeType": "YulExpressionStatement", "src": "16041:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "16014:7:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "16023:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "16010:3:18" }, "nodeType": "YulFunctionCall", "src": "16010:23:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "16035:2:18", "type": "", "value": "32" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "16006:3:18" }, "nodeType": "YulFunctionCall", "src": "16006:32:18" }, "nodeType": "YulIf", "src": "16003:119:18" }, { "nodeType": "YulBlock", "src": "16132:127:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "16147:15:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "16161:1:18", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "16151:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "16176:73:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "16221:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "16232:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "16217:3:18" }, "nodeType": "YulFunctionCall", "src": "16217:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "16241:7:18" }], "functionName": { "name": "abi_decode_t_bytes4_fromMemory", "nodeType": "YulIdentifier", "src": "16186:30:18" }, "nodeType": "YulFunctionCall", "src": "16186:63:18" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "16176:6:18" }] }] }] }, "name": "abi_decode_tuple_t_bytes4_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "15963:9:18", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "15974:7:18", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "15986:6:18", "type": "" }], "src": "15917:349:18" }, { "body": { "nodeType": "YulBlock", "src": "16326:87:18", "statements": [{ "nodeType": "YulAssignment", "src": "16336:11:18", "value": { "name": "ptr", "nodeType": "YulIdentifier", "src": "16344:3:18" }, "variableNames": [{ "name": "data", "nodeType": "YulIdentifier", "src": "16336:4:18" }] }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "16364:1:18", "type": "", "value": "0" }, { "name": "ptr", "nodeType": "YulIdentifier", "src": "16367:3:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "16357:6:18" }, "nodeType": "YulFunctionCall", "src": "16357:14:18" }, "nodeType": "YulExpressionStatement", "src": "16357:14:18" }, { "nodeType": "YulAssignment", "src": "16380:26:18", "value": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "16398:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "16401:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "keccak256", "nodeType": "YulIdentifier", "src": "16388:9:18" }, "nodeType": "YulFunctionCall", "src": "16388:18:18" }, "variableNames": [{ "name": "data", "nodeType": "YulIdentifier", "src": "16380:4:18" }] }] }, "name": "array_dataslot_t_string_storage", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "ptr", "nodeType": "YulTypedName", "src": "16313:3:18", "type": "" }], "returnVariables": [{ "name": "data", "nodeType": "YulTypedName", "src": "16321:4:18", "type": "" }], "src": "16272:141:18" }, { "body": { "nodeType": "YulBlock", "src": "16463:49:18", "statements": [{ "nodeType": "YulAssignment", "src": "16473:33:18", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "16491:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "16498:2:18", "type": "", "value": "31" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "16487:3:18" }, "nodeType": "YulFunctionCall", "src": "16487:14:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "16503:2:18", "type": "", "value": "32" }], "functionName": { "name": "div", "nodeType": "YulIdentifier", "src": "16483:3:18" }, "nodeType": "YulFunctionCall", "src": "16483:23:18" }, "variableNames": [{ "name": "result", "nodeType": "YulIdentifier", "src": "16473:6:18" }] }] }, "name": "divide_by_32_ceil", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "16446:5:18", "type": "" }], "returnVariables": [{ "name": "result", "nodeType": "YulTypedName", "src": "16456:6:18", "type": "" }], "src": "16419:93:18" }, { "body": { "nodeType": "YulBlock", "src": "16571:54:18", "statements": [{ "nodeType": "YulAssignment", "src": "16581:37:18", "value": { "arguments": [{ "name": "bits", "nodeType": "YulIdentifier", "src": "16606:4:18" }, { "name": "value", "nodeType": "YulIdentifier", "src": "16612:5:18" }], "functionName": { "name": "shl", "nodeType": "YulIdentifier", "src": "16602:3:18" }, "nodeType": "YulFunctionCall", "src": "16602:16:18" }, "variableNames": [{ "name": "newValue", "nodeType": "YulIdentifier", "src": "16581:8:18" }] }] }, "name": "shift_left_dynamic", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "bits", "nodeType": "YulTypedName", "src": "16546:4:18", "type": "" }, { "name": "value", "nodeType": "YulTypedName", "src": "16552:5:18", "type": "" }], "returnVariables": [{ "name": "newValue", "nodeType": "YulTypedName", "src": "16562:8:18", "type": "" }], "src": "16518:107:18" }, { "body": { "nodeType": "YulBlock", "src": "16707:317:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "16717:35:18", "value": { "arguments": [{ "name": "shiftBytes", "nodeType": "YulIdentifier", "src": "16738:10:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "16750:1:18", "type": "", "value": "8" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "16734:3:18" }, "nodeType": "YulFunctionCall", "src": "16734:18:18" }, "variables": [{ "name": "shiftBits", "nodeType": "YulTypedName", "src": "16721:9:18", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "16761:109:18", "value": { "arguments": [{ "name": "shiftBits", "nodeType": "YulIdentifier", "src": "16792:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "16803:66:18", "type": "", "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff" }], "functionName": { "name": "shift_left_dynamic", "nodeType": "YulIdentifier", "src": "16773:18:18" }, "nodeType": "YulFunctionCall", "src": "16773:97:18" }, "variables": [{ "name": "mask", "nodeType": "YulTypedName", "src": "16765:4:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "16879:51:18", "value": { "arguments": [{ "name": "shiftBits", "nodeType": "YulIdentifier", "src": "16910:9:18" }, { "name": "toInsert", "nodeType": "YulIdentifier", "src": "16921:8:18" }], "functionName": { "name": "shift_left_dynamic", "nodeType": "YulIdentifier", "src": "16891:18:18" }, "nodeType": "YulFunctionCall", "src": "16891:39:18" }, "variableNames": [{ "name": "toInsert", "nodeType": "YulIdentifier", "src": "16879:8:18" }] }, { "nodeType": "YulAssignment", "src": "16939:30:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "16952:5:18" }, { "arguments": [{ "name": "mask", "nodeType": "YulIdentifier", "src": "16963:4:18" }], "functionName": { "name": "not", "nodeType": "YulIdentifier", "src": "16959:3:18" }, "nodeType": "YulFunctionCall", "src": "16959:9:18" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "16948:3:18" }, "nodeType": "YulFunctionCall", "src": "16948:21:18" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "16939:5:18" }] }, { "nodeType": "YulAssignment", "src": "16978:40:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "16991:5:18" }, { "arguments": [{ "name": "toInsert", "nodeType": "YulIdentifier", "src": "17002:8:18" }, { "name": "mask", "nodeType": "YulIdentifier", "src": "17012:4:18" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "16998:3:18" }, "nodeType": "YulFunctionCall", "src": "16998:19:18" }], "functionName": { "name": "or", "nodeType": "YulIdentifier", "src": "16988:2:18" }, "nodeType": "YulFunctionCall", "src": "16988:30:18" }, "variableNames": [{ "name": "result", "nodeType": "YulIdentifier", "src": "16978:6:18" }] }] }, "name": "update_byte_slice_dynamic32", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "16668:5:18", "type": "" }, { "name": "shiftBytes", "nodeType": "YulTypedName", "src": "16675:10:18", "type": "" }, { "name": "toInsert", "nodeType": "YulTypedName", "src": "16687:8:18", "type": "" }], "returnVariables": [{ "name": "result", "nodeType": "YulTypedName", "src": "16700:6:18", "type": "" }], "src": "16631:393:18" }, { "body": { "nodeType": "YulBlock", "src": "17062:28:18", "statements": [{ "nodeType": "YulAssignment", "src": "17072:12:18", "value": { "name": "value", "nodeType": "YulIdentifier", "src": "17079:5:18" }, "variableNames": [{ "name": "ret", "nodeType": "YulIdentifier", "src": "17072:3:18" }] }] }, "name": "identity", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "17048:5:18", "type": "" }], "returnVariables": [{ "name": "ret", "nodeType": "YulTypedName", "src": "17058:3:18", "type": "" }], "src": "17030:60:18" }, { "body": { "nodeType": "YulBlock", "src": "17156:82:18", "statements": [{ "nodeType": "YulAssignment", "src": "17166:66:18", "value": { "arguments": [{ "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "17224:5:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "17206:17:18" }, "nodeType": "YulFunctionCall", "src": "17206:24:18" }], "functionName": { "name": "identity", "nodeType": "YulIdentifier", "src": "17197:8:18" }, "nodeType": "YulFunctionCall", "src": "17197:34:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "17179:17:18" }, "nodeType": "YulFunctionCall", "src": "17179:53:18" }, "variableNames": [{ "name": "converted", "nodeType": "YulIdentifier", "src": "17166:9:18" }] }] }, "name": "convert_t_uint256_to_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "17136:5:18", "type": "" }], "returnVariables": [{ "name": "converted", "nodeType": "YulTypedName", "src": "17146:9:18", "type": "" }], "src": "17096:142:18" }, { "body": { "nodeType": "YulBlock", "src": "17291:28:18", "statements": [{ "nodeType": "YulAssignment", "src": "17301:12:18", "value": { "name": "value", "nodeType": "YulIdentifier", "src": "17308:5:18" }, "variableNames": [{ "name": "ret", "nodeType": "YulIdentifier", "src": "17301:3:18" }] }] }, "name": "prepare_store_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "17277:5:18", "type": "" }], "returnVariables": [{ "name": "ret", "nodeType": "YulTypedName", "src": "17287:3:18", "type": "" }], "src": "17244:75:18" }, { "body": { "nodeType": "YulBlock", "src": "17401:193:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "17411:63:18", "value": { "arguments": [{ "name": "value_0", "nodeType": "YulIdentifier", "src": "17466:7:18" }], "functionName": { "name": "convert_t_uint256_to_t_uint256", "nodeType": "YulIdentifier", "src": "17435:30:18" }, "nodeType": "YulFunctionCall", "src": "17435:39:18" }, "variables": [{ "name": "convertedValue_0", "nodeType": "YulTypedName", "src": "17415:16:18", "type": "" }] }, { "expression": { "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "17490:4:18" }, { "arguments": [{ "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "17530:4:18" }], "functionName": { "name": "sload", "nodeType": "YulIdentifier", "src": "17524:5:18" }, "nodeType": "YulFunctionCall", "src": "17524:11:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "17537:6:18" }, { "arguments": [{ "name": "convertedValue_0", "nodeType": "YulIdentifier", "src": "17569:16:18" }], "functionName": { "name": "prepare_store_t_uint256", "nodeType": "YulIdentifier", "src": "17545:23:18" }, "nodeType": "YulFunctionCall", "src": "17545:41:18" }], "functionName": { "name": "update_byte_slice_dynamic32", "nodeType": "YulIdentifier", "src": "17496:27:18" }, "nodeType": "YulFunctionCall", "src": "17496:91:18" }], "functionName": { "name": "sstore", "nodeType": "YulIdentifier", "src": "17483:6:18" }, "nodeType": "YulFunctionCall", "src": "17483:105:18" }, "nodeType": "YulExpressionStatement", "src": "17483:105:18" }] }, "name": "update_storage_value_t_uint256_to_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "slot", "nodeType": "YulTypedName", "src": "17378:4:18", "type": "" }, { "name": "offset", "nodeType": "YulTypedName", "src": "17384:6:18", "type": "" }, { "name": "value_0", "nodeType": "YulTypedName", "src": "17392:7:18", "type": "" }], "src": "17325:269:18" }, { "body": { "nodeType": "YulBlock", "src": "17649:24:18", "statements": [{ "nodeType": "YulAssignment", "src": "17659:8:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "17666:1:18", "type": "", "value": "0" }, "variableNames": [{ "name": "ret", "nodeType": "YulIdentifier", "src": "17659:3:18" }] }] }, "name": "zero_value_for_split_t_uint256", "nodeType": "YulFunctionDefinition", "returnVariables": [{ "name": "ret", "nodeType": "YulTypedName", "src": "17645:3:18", "type": "" }], "src": "17600:73:18" }, { "body": { "nodeType": "YulBlock", "src": "17732:136:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "17742:46:18", "value": { "arguments": [], "functionName": { "name": "zero_value_for_split_t_uint256", "nodeType": "YulIdentifier", "src": "17756:30:18" }, "nodeType": "YulFunctionCall", "src": "17756:32:18" }, "variables": [{ "name": "zero_0", "nodeType": "YulTypedName", "src": "17746:6:18", "type": "" }] }, { "expression": { "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "17841:4:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "17847:6:18" }, { "name": "zero_0", "nodeType": "YulIdentifier", "src": "17855:6:18" }], "functionName": { "name": "update_storage_value_t_uint256_to_t_uint256", "nodeType": "YulIdentifier", "src": "17797:43:18" }, "nodeType": "YulFunctionCall", "src": "17797:65:18" }, "nodeType": "YulExpressionStatement", "src": "17797:65:18" }] }, "name": "storage_set_to_zero_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "slot", "nodeType": "YulTypedName", "src": "17718:4:18", "type": "" }, { "name": "offset", "nodeType": "YulTypedName", "src": "17724:6:18", "type": "" }], "src": "17679:189:18" }, { "body": { "nodeType": "YulBlock", "src": "17924:136:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "17991:63:18", "statements": [{ "expression": { "arguments": [{ "name": "start", "nodeType": "YulIdentifier", "src": "18035:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "18042:1:18", "type": "", "value": "0" }], "functionName": { "name": "storage_set_to_zero_t_uint256", "nodeType": "YulIdentifier", "src": "18005:29:18" }, "nodeType": "YulFunctionCall", "src": "18005:39:18" }, "nodeType": "YulExpressionStatement", "src": "18005:39:18" }] }, "condition": { "arguments": [{ "name": "start", "nodeType": "YulIdentifier", "src": "17944:5:18" }, { "name": "end", "nodeType": "YulIdentifier", "src": "17951:3:18" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "17941:2:18" }, "nodeType": "YulFunctionCall", "src": "17941:14:18" }, "nodeType": "YulForLoop", "post": { "nodeType": "YulBlock", "src": "17956:26:18", "statements": [{ "nodeType": "YulAssignment", "src": "17958:22:18", "value": { "arguments": [{ "name": "start", "nodeType": "YulIdentifier", "src": "17971:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "17978:1:18", "type": "", "value": "1" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "17967:3:18" }, "nodeType": "YulFunctionCall", "src": "17967:13:18" }, "variableNames": [{ "name": "start", "nodeType": "YulIdentifier", "src": "17958:5:18" }] }] }, "pre": { "nodeType": "YulBlock", "src": "17938:2:18", "statements": [] }, "src": "17934:120:18" }] }, "name": "clear_storage_range_t_bytes1", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "start", "nodeType": "YulTypedName", "src": "17912:5:18", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "17919:3:18", "type": "" }], "src": "17874:186:18" }, { "body": { "nodeType": "YulBlock", "src": "18145:464:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "18171:431:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "18185:54:18", "value": { "arguments": [{ "name": "array", "nodeType": "YulIdentifier", "src": "18233:5:18" }], "functionName": { "name": "array_dataslot_t_string_storage", "nodeType": "YulIdentifier", "src": "18201:31:18" }, "nodeType": "YulFunctionCall", "src": "18201:38:18" }, "variables": [{ "name": "dataArea", "nodeType": "YulTypedName", "src": "18189:8:18", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "18252:63:18", "value": { "arguments": [{ "name": "dataArea", "nodeType": "YulIdentifier", "src": "18275:8:18" }, { "arguments": [{ "name": "startIndex", "nodeType": "YulIdentifier", "src": "18303:10:18" }], "functionName": { "name": "divide_by_32_ceil", "nodeType": "YulIdentifier", "src": "18285:17:18" }, "nodeType": "YulFunctionCall", "src": "18285:29:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "18271:3:18" }, "nodeType": "YulFunctionCall", "src": "18271:44:18" }, "variables": [{ "name": "deleteStart", "nodeType": "YulTypedName", "src": "18256:11:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "18472:27:18", "statements": [{ "nodeType": "YulAssignment", "src": "18474:23:18", "value": { "name": "dataArea", "nodeType": "YulIdentifier", "src": "18489:8:18" }, "variableNames": [{ "name": "deleteStart", "nodeType": "YulIdentifier", "src": "18474:11:18" }] }] }, "condition": { "arguments": [{ "name": "startIndex", "nodeType": "YulIdentifier", "src": "18456:10:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "18468:2:18", "type": "", "value": "32" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "18453:2:18" }, "nodeType": "YulFunctionCall", "src": "18453:18:18" }, "nodeType": "YulIf", "src": "18450:49:18" }, { "expression": { "arguments": [{ "name": "deleteStart", "nodeType": "YulIdentifier", "src": "18541:11:18" }, { "arguments": [{ "name": "dataArea", "nodeType": "YulIdentifier", "src": "18558:8:18" }, { "arguments": [{ "name": "len", "nodeType": "YulIdentifier", "src": "18586:3:18" }], "functionName": { "name": "divide_by_32_ceil", "nodeType": "YulIdentifier", "src": "18568:17:18" }, "nodeType": "YulFunctionCall", "src": "18568:22:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "18554:3:18" }, "nodeType": "YulFunctionCall", "src": "18554:37:18" }], "functionName": { "name": "clear_storage_range_t_bytes1", "nodeType": "YulIdentifier", "src": "18512:28:18" }, "nodeType": "YulFunctionCall", "src": "18512:80:18" }, "nodeType": "YulExpressionStatement", "src": "18512:80:18" }] }, "condition": { "arguments": [{ "name": "len", "nodeType": "YulIdentifier", "src": "18162:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "18167:2:18", "type": "", "value": "31" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "18159:2:18" }, "nodeType": "YulFunctionCall", "src": "18159:11:18" }, "nodeType": "YulIf", "src": "18156:446:18" }] }, "name": "clean_up_bytearray_end_slots_t_string_storage", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "array", "nodeType": "YulTypedName", "src": "18121:5:18", "type": "" }, { "name": "len", "nodeType": "YulTypedName", "src": "18128:3:18", "type": "" }, { "name": "startIndex", "nodeType": "YulTypedName", "src": "18133:10:18", "type": "" }], "src": "18066:543:18" }, { "body": { "nodeType": "YulBlock", "src": "18678:54:18", "statements": [{ "nodeType": "YulAssignment", "src": "18688:37:18", "value": { "arguments": [{ "name": "bits", "nodeType": "YulIdentifier", "src": "18713:4:18" }, { "name": "value", "nodeType": "YulIdentifier", "src": "18719:5:18" }], "functionName": { "name": "shr", "nodeType": "YulIdentifier", "src": "18709:3:18" }, "nodeType": "YulFunctionCall", "src": "18709:16:18" }, "variableNames": [{ "name": "newValue", "nodeType": "YulIdentifier", "src": "18688:8:18" }] }] }, "name": "shift_right_unsigned_dynamic", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "bits", "nodeType": "YulTypedName", "src": "18653:4:18", "type": "" }, { "name": "value", "nodeType": "YulTypedName", "src": "18659:5:18", "type": "" }], "returnVariables": [{ "name": "newValue", "nodeType": "YulTypedName", "src": "18669:8:18", "type": "" }], "src": "18615:117:18" }, { "body": { "nodeType": "YulBlock", "src": "18789:118:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "18799:68:18", "value": { "arguments": [{ "arguments": [{ "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "18848:1:18", "type": "", "value": "8" }, { "name": "bytes", "nodeType": "YulIdentifier", "src": "18851:5:18" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "18844:3:18" }, "nodeType": "YulFunctionCall", "src": "18844:13:18" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "18863:1:18", "type": "", "value": "0" }], "functionName": { "name": "not", "nodeType": "YulIdentifier", "src": "18859:3:18" }, "nodeType": "YulFunctionCall", "src": "18859:6:18" }], "functionName": { "name": "shift_right_unsigned_dynamic", "nodeType": "YulIdentifier", "src": "18815:28:18" }, "nodeType": "YulFunctionCall", "src": "18815:51:18" }], "functionName": { "name": "not", "nodeType": "YulIdentifier", "src": "18811:3:18" }, "nodeType": "YulFunctionCall", "src": "18811:56:18" }, "variables": [{ "name": "mask", "nodeType": "YulTypedName", "src": "18803:4:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "18876:25:18", "value": { "arguments": [{ "name": "data", "nodeType": "YulIdentifier", "src": "18890:4:18" }, { "name": "mask", "nodeType": "YulIdentifier", "src": "18896:4:18" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "18886:3:18" }, "nodeType": "YulFunctionCall", "src": "18886:15:18" }, "variableNames": [{ "name": "result", "nodeType": "YulIdentifier", "src": "18876:6:18" }] }] }, "name": "mask_bytes_dynamic", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "data", "nodeType": "YulTypedName", "src": "18766:4:18", "type": "" }, { "name": "bytes", "nodeType": "YulTypedName", "src": "18772:5:18", "type": "" }], "returnVariables": [{ "name": "result", "nodeType": "YulTypedName", "src": "18782:6:18", "type": "" }], "src": "18738:169:18" }, { "body": { "nodeType": "YulBlock", "src": "18993:214:18", "statements": [{ "nodeType": "YulAssignment", "src": "19126:37:18", "value": { "arguments": [{ "name": "data", "nodeType": "YulIdentifier", "src": "19153:4:18" }, { "name": "len", "nodeType": "YulIdentifier", "src": "19159:3:18" }], "functionName": { "name": "mask_bytes_dynamic", "nodeType": "YulIdentifier", "src": "19134:18:18" }, "nodeType": "YulFunctionCall", "src": "19134:29:18" }, "variableNames": [{ "name": "data", "nodeType": "YulIdentifier", "src": "19126:4:18" }] }, { "nodeType": "YulAssignment", "src": "19172:29:18", "value": { "arguments": [{ "name": "data", "nodeType": "YulIdentifier", "src": "19183:4:18" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "19193:1:18", "type": "", "value": "2" }, { "name": "len", "nodeType": "YulIdentifier", "src": "19196:3:18" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "19189:3:18" }, "nodeType": "YulFunctionCall", "src": "19189:11:18" }], "functionName": { "name": "or", "nodeType": "YulIdentifier", "src": "19180:2:18" }, "nodeType": "YulFunctionCall", "src": "19180:21:18" }, "variableNames": [{ "name": "used", "nodeType": "YulIdentifier", "src": "19172:4:18" }] }] }, "name": "extract_used_part_and_set_length_of_short_byte_array", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "data", "nodeType": "YulTypedName", "src": "18974:4:18", "type": "" }, { "name": "len", "nodeType": "YulTypedName", "src": "18980:3:18", "type": "" }], "returnVariables": [{ "name": "used", "nodeType": "YulTypedName", "src": "18988:4:18", "type": "" }], "src": "18912:295:18" }, { "body": { "nodeType": "YulBlock", "src": "19304:1303:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "19315:51:18", "value": { "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "19362:3:18" }], "functionName": { "name": "array_length_t_string_memory_ptr", "nodeType": "YulIdentifier", "src": "19329:32:18" }, "nodeType": "YulFunctionCall", "src": "19329:37:18" }, "variables": [{ "name": "newLen", "nodeType": "YulTypedName", "src": "19319:6:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "19451:22:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x41", "nodeType": "YulIdentifier", "src": "19453:16:18" }, "nodeType": "YulFunctionCall", "src": "19453:18:18" }, "nodeType": "YulExpressionStatement", "src": "19453:18:18" }] }, "condition": { "arguments": [{ "name": "newLen", "nodeType": "YulIdentifier", "src": "19423:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "19431:18:18", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "19420:2:18" }, "nodeType": "YulFunctionCall", "src": "19420:30:18" }, "nodeType": "YulIf", "src": "19417:56:18" }, { "nodeType": "YulVariableDeclaration", "src": "19483:52:18", "value": { "arguments": [{ "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "19529:4:18" }], "functionName": { "name": "sload", "nodeType": "YulIdentifier", "src": "19523:5:18" }, "nodeType": "YulFunctionCall", "src": "19523:11:18" }], "functionName": { "name": "extract_byte_array_length", "nodeType": "YulIdentifier", "src": "19497:25:18" }, "nodeType": "YulFunctionCall", "src": "19497:38:18" }, "variables": [{ "name": "oldLen", "nodeType": "YulTypedName", "src": "19487:6:18", "type": "" }] }, { "expression": { "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "19628:4:18" }, { "name": "oldLen", "nodeType": "YulIdentifier", "src": "19634:6:18" }, { "name": "newLen", "nodeType": "YulIdentifier", "src": "19642:6:18" }], "functionName": { "name": "clean_up_bytearray_end_slots_t_string_storage", "nodeType": "YulIdentifier", "src": "19582:45:18" }, "nodeType": "YulFunctionCall", "src": "19582:67:18" }, "nodeType": "YulExpressionStatement", "src": "19582:67:18" }, { "nodeType": "YulVariableDeclaration", "src": "19659:18:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "19676:1:18", "type": "", "value": "0" }, "variables": [{ "name": "srcOffset", "nodeType": "YulTypedName", "src": "19663:9:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "19687:17:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "19700:4:18", "type": "", "value": "0x20" }, "variableNames": [{ "name": "srcOffset", "nodeType": "YulIdentifier", "src": "19687:9:18" }] }, { "cases": [{ "body": { "nodeType": "YulBlock", "src": "19751:611:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "19765:37:18", "value": { "arguments": [{ "name": "newLen", "nodeType": "YulIdentifier", "src": "19784:6:18" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "19796:4:18", "type": "", "value": "0x1f" }], "functionName": { "name": "not", "nodeType": "YulIdentifier", "src": "19792:3:18" }, "nodeType": "YulFunctionCall", "src": "19792:9:18" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "19780:3:18" }, "nodeType": "YulFunctionCall", "src": "19780:22:18" }, "variables": [{ "name": "loopEnd", "nodeType": "YulTypedName", "src": "19769:7:18", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "19816:51:18", "value": { "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "19862:4:18" }], "functionName": { "name": "array_dataslot_t_string_storage", "nodeType": "YulIdentifier", "src": "19830:31:18" }, "nodeType": "YulFunctionCall", "src": "19830:37:18" }, "variables": [{ "name": "dstPtr", "nodeType": "YulTypedName", "src": "19820:6:18", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "19880:10:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "19889:1:18", "type": "", "value": "0" }, "variables": [{ "name": "i", "nodeType": "YulTypedName", "src": "19884:1:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "19948:163:18", "statements": [{ "expression": { "arguments": [{ "name": "dstPtr", "nodeType": "YulIdentifier", "src": "19973:6:18" }, { "arguments": [{ "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "19991:3:18" }, { "name": "srcOffset", "nodeType": "YulIdentifier", "src": "19996:9:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "19987:3:18" }, "nodeType": "YulFunctionCall", "src": "19987:19:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "19981:5:18" }, "nodeType": "YulFunctionCall", "src": "19981:26:18" }], "functionName": { "name": "sstore", "nodeType": "YulIdentifier", "src": "19966:6:18" }, "nodeType": "YulFunctionCall", "src": "19966:42:18" }, "nodeType": "YulExpressionStatement", "src": "19966:42:18" }, { "nodeType": "YulAssignment", "src": "20025:24:18", "value": { "arguments": [{ "name": "dstPtr", "nodeType": "YulIdentifier", "src": "20039:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "20047:1:18", "type": "", "value": "1" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "20035:3:18" }, "nodeType": "YulFunctionCall", "src": "20035:14:18" }, "variableNames": [{ "name": "dstPtr", "nodeType": "YulIdentifier", "src": "20025:6:18" }] }, { "nodeType": "YulAssignment", "src": "20066:31:18", "value": { "arguments": [{ "name": "srcOffset", "nodeType": "YulIdentifier", "src": "20083:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "20094:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "20079:3:18" }, "nodeType": "YulFunctionCall", "src": "20079:18:18" }, "variableNames": [{ "name": "srcOffset", "nodeType": "YulIdentifier", "src": "20066:9:18" }] }] }, "condition": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "19914:1:18" }, { "name": "loopEnd", "nodeType": "YulIdentifier", "src": "19917:7:18" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "19911:2:18" }, "nodeType": "YulFunctionCall", "src": "19911:14:18" }, "nodeType": "YulForLoop", "post": { "nodeType": "YulBlock", "src": "19926:21:18", "statements": [{ "nodeType": "YulAssignment", "src": "19928:17:18", "value": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "19937:1:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "19940:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "19933:3:18" }, "nodeType": "YulFunctionCall", "src": "19933:12:18" }, "variableNames": [{ "name": "i", "nodeType": "YulIdentifier", "src": "19928:1:18" }] }] }, "pre": { "nodeType": "YulBlock", "src": "19907:3:18", "statements": [] }, "src": "19903:208:18" }, { "body": { "nodeType": "YulBlock", "src": "20147:156:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "20165:43:18", "value": { "arguments": [{ "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "20192:3:18" }, { "name": "srcOffset", "nodeType": "YulIdentifier", "src": "20197:9:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "20188:3:18" }, "nodeType": "YulFunctionCall", "src": "20188:19:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "20182:5:18" }, "nodeType": "YulFunctionCall", "src": "20182:26:18" }, "variables": [{ "name": "lastValue", "nodeType": "YulTypedName", "src": "20169:9:18", "type": "" }] }, { "expression": { "arguments": [{ "name": "dstPtr", "nodeType": "YulIdentifier", "src": "20232:6:18" }, { "arguments": [{ "name": "lastValue", "nodeType": "YulIdentifier", "src": "20259:9:18" }, { "arguments": [{ "name": "newLen", "nodeType": "YulIdentifier", "src": "20274:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "20282:4:18", "type": "", "value": "0x1f" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "20270:3:18" }, "nodeType": "YulFunctionCall", "src": "20270:17:18" }], "functionName": { "name": "mask_bytes_dynamic", "nodeType": "YulIdentifier", "src": "20240:18:18" }, "nodeType": "YulFunctionCall", "src": "20240:48:18" }], "functionName": { "name": "sstore", "nodeType": "YulIdentifier", "src": "20225:6:18" }, "nodeType": "YulFunctionCall", "src": "20225:64:18" }, "nodeType": "YulExpressionStatement", "src": "20225:64:18" }] }, "condition": { "arguments": [{ "name": "loopEnd", "nodeType": "YulIdentifier", "src": "20130:7:18" }, { "name": "newLen", "nodeType": "YulIdentifier", "src": "20139:6:18" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "20127:2:18" }, "nodeType": "YulFunctionCall", "src": "20127:19:18" }, "nodeType": "YulIf", "src": "20124:179:18" }, { "expression": { "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "20323:4:18" }, { "arguments": [{ "arguments": [{ "name": "newLen", "nodeType": "YulIdentifier", "src": "20337:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "20345:1:18", "type": "", "value": "2" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "20333:3:18" }, "nodeType": "YulFunctionCall", "src": "20333:14:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "20349:1:18", "type": "", "value": "1" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "20329:3:18" }, "nodeType": "YulFunctionCall", "src": "20329:22:18" }], "functionName": { "name": "sstore", "nodeType": "YulIdentifier", "src": "20316:6:18" }, "nodeType": "YulFunctionCall", "src": "20316:36:18" }, "nodeType": "YulExpressionStatement", "src": "20316:36:18" }] }, "nodeType": "YulCase", "src": "19744:618:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "19749:1:18", "type": "", "value": "1" } }, { "body": { "nodeType": "YulBlock", "src": "20379:222:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "20393:14:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "20406:1:18", "type": "", "value": "0" }, "variables": [{ "name": "value", "nodeType": "YulTypedName", "src": "20397:5:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "20430:67:18", "statements": [{ "nodeType": "YulAssignment", "src": "20448:35:18", "value": { "arguments": [{ "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "20467:3:18" }, { "name": "srcOffset", "nodeType": "YulIdentifier", "src": "20472:9:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "20463:3:18" }, "nodeType": "YulFunctionCall", "src": "20463:19:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "20457:5:18" }, "nodeType": "YulFunctionCall", "src": "20457:26:18" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "20448:5:18" }] }] }, "condition": { "name": "newLen", "nodeType": "YulIdentifier", "src": "20423:6:18" }, "nodeType": "YulIf", "src": "20420:77:18" }, { "expression": { "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "20517:4:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "20576:5:18" }, { "name": "newLen", "nodeType": "YulIdentifier", "src": "20583:6:18" }], "functionName": { "name": "extract_used_part_and_set_length_of_short_byte_array", "nodeType": "YulIdentifier", "src": "20523:52:18" }, "nodeType": "YulFunctionCall", "src": "20523:67:18" }], "functionName": { "name": "sstore", "nodeType": "YulIdentifier", "src": "20510:6:18" }, "nodeType": "YulFunctionCall", "src": "20510:81:18" }, "nodeType": "YulExpressionStatement", "src": "20510:81:18" }] }, "nodeType": "YulCase", "src": "20371:230:18", "value": "default" }], "expression": { "arguments": [{ "name": "newLen", "nodeType": "YulIdentifier", "src": "19724:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "19732:2:18", "type": "", "value": "31" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "19721:2:18" }, "nodeType": "YulFunctionCall", "src": "19721:14:18" }, "nodeType": "YulSwitch", "src": "19714:887:18" }] }, "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "slot", "nodeType": "YulTypedName", "src": "19293:4:18", "type": "" }, { "name": "src", "nodeType": "YulTypedName", "src": "19299:3:18", "type": "" }], "src": "19212:1395:18" }, { "body": { "nodeType": "YulBlock", "src": "20739:206:18", "statements": [{ "nodeType": "YulAssignment", "src": "20749:26:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "20761:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "20772:2:18", "type": "", "value": "64" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "20757:3:18" }, "nodeType": "YulFunctionCall", "src": "20757:18:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "20749:4:18" }] }, { "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "20829:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "20842:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "20853:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "20838:3:18" }, "nodeType": "YulFunctionCall", "src": "20838:17:18" }], "functionName": { "name": "abi_encode_t_address_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "20785:43:18" }, "nodeType": "YulFunctionCall", "src": "20785:71:18" }, "nodeType": "YulExpressionStatement", "src": "20785:71:18" }, { "expression": { "arguments": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "20910:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "20923:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "20934:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "20919:3:18" }, "nodeType": "YulFunctionCall", "src": "20919:18:18" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "20866:43:18" }, "nodeType": "YulFunctionCall", "src": "20866:72:18" }, "nodeType": "YulExpressionStatement", "src": "20866:72:18" }] }, "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "20703:9:18", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "20715:6:18", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "20723:6:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "20734:4:18", "type": "" }], "src": "20613:332:18" }, { "body": { "nodeType": "YulBlock", "src": "20979:152:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "20996:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "20999:77:18", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "20989:6:18" }, "nodeType": "YulFunctionCall", "src": "20989:88:18" }, "nodeType": "YulExpressionStatement", "src": "20989:88:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "21093:1:18", "type": "", "value": "4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "21096:4:18", "type": "", "value": "0x12" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "21086:6:18" }, "nodeType": "YulFunctionCall", "src": "21086:15:18" }, "nodeType": "YulExpressionStatement", "src": "21086:15:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "21117:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "21120:4:18", "type": "", "value": "0x24" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "21110:6:18" }, "nodeType": "YulFunctionCall", "src": "21110:15:18" }, "nodeType": "YulExpressionStatement", "src": "21110:15:18" }] }, "name": "panic_error_0x12", "nodeType": "YulFunctionDefinition", "src": "20951:180:18" }] }, "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n", "id": 18, "language": "Yul", "name": "#utility.yul" }], "immutableReferences": {}, "linkReferences": {}, "object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063b88d4fde11610066578063b88d4fde1461025b578063c87b56dd14610277578063d85d3d27146102a7578063e985e9c5146102c3576100ea565b806370a08231146101f157806395d89b4114610221578063a22cb4651461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806323b872dd1461018957806342842e0e146101a55780636352211e146101c1576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b6101096004803603810190610104919061189b565b6102f3565b60405161011691906118e3565b60405180910390f35b610127610354565b604051610134919061198e565b60405180910390f35b610157600480360381019061015291906119e6565b6103e6565b6040516101649190611a54565b60405180910390f35b61018760048036038101906101829190611a9b565b610402565b005b6101a3600480360381019061019e9190611adb565b610418565b005b6101bf60048036038101906101ba9190611adb565b61051a565b005b6101db60048036038101906101d691906119e6565b61053a565b6040516101e89190611a54565b60405180910390f35b61020b60048036038101906102069190611b2e565b61054c565b6040516102189190611b6a565b60405180910390f35b610229610606565b604051610236919061198e565b60405180910390f35b61025960048036038101906102549190611bb1565b610698565b005b61027560048036038101906102709190611d26565b6106ae565b005b610291600480360381019061028c91906119e6565b6106cb565b60405161029e919061198e565b60405180910390f35b6102c160048036038101906102bc9190611e4a565b6107de565b005b6102dd60048036038101906102d89190611e93565b610879565b6040516102ea91906118e3565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061034d575061034c8261090d565b5b9050919050565b60606000805461036390611f02565b80601f016020809104026020016040519081016040528092919081815260200182805461038f90611f02565b80156103dc5780601f106103b1576101008083540402835291602001916103dc565b820191906000526020600020905b8154815290600101906020018083116103bf57829003601f168201915b5050505050905090565b60006103f1826109ef565b506103fb82610a77565b9050919050565b610414828261040f610ab4565b610abc565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361048a5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104819190611a54565b60405180910390fd5b600061049e8383610499610ab4565b610ace565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610514578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161050b93929190611f33565b60405180910390fd5b50505050565b610535838383604051806020016040528060008152506106ae565b505050565b6000610545826109ef565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105bf5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016105b69190611a54565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461061590611f02565b80601f016020809104026020016040519081016040528092919081815260200182805461064190611f02565b801561068e5780601f106106635761010080835404028352916020019161068e565b820191906000526020600020905b81548152906001019060200180831161067157829003601f168201915b5050505050905090565b6106aa6106a3610ab4565b8383610ce8565b5050565b6106b9848484610418565b6106c584848484610e57565b50505050565b60606106d6826109ef565b5060006006600084815260200190815260200160002080546106f790611f02565b80601f016020809104026020016040519081016040528092919081815260200182805461072390611f02565b80156107705780601f1061074557610100808354040283529160200191610770565b820191906000526020600020905b81548152906001019060200180831161075357829003601f168201915b50505050509050600061078161100e565b905060008151036107965781925050506107d9565b6000825111156107cb5780826040516020016107b3929190611fa6565b604051602081830303815290604052925050506107d9565b6107d484611025565b925050505b919050565b600760008154809291906107f190611ff9565b919050555060006007549050610807338261108e565b61081181836110ac565b61083e600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001610698565b7fd9dc24857f317ed9abbbb42e920ede0104231eb1d3d70236a74887ffaf1598688160405161086d9190611b6a565b60405180910390a15050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109d857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806109e857506109e782611108565b5b9050919050565b6000806109fb83611172565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a6e57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a659190611b6a565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610ac983838360016111af565b505050565b600080610ada84611172565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b1c57610b1b818486611374565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bad57610b5e6000856000806111af565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610c30576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d5957816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610d509190611a54565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e4a91906118e3565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611008578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610e9b610ab4565b8685856040518563ffffffff1660e01b8152600401610ebd9493929190612096565b6020604051808303816000875af1925050508015610ef957506040513d601f19601f82011682018060405250810190610ef691906120f7565b60015b610f7d573d8060008114610f29576040519150601f19603f3d011682016040523d82523d6000602084013e610f2e565b606091505b506000815103610f7557836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610f6c9190611a54565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461100657836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610ffd9190611a54565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b6060611030826109ef565b50600061103b61100e565b9050600081511161105b5760405180602001604052806000815250611086565b8061106584611438565b604051602001611076929190611fa6565b6040516020818303038152906040525b915050919050565b6110a8828260405180602001604052806000815250611506565b5050565b806006600084815260200190815260200160002090816110cc91906122d0565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516110fc9190611b6a565b60405180910390a15050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806111e85750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561131c5760006111f8846109ef565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561126357508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561127657506112748184610879565b155b156112b857826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016112af9190611a54565b60405180910390fd5b811561131a57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61137f838383611522565b61143357600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113f457806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016113eb9190611b6a565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161142a9291906123a2565b60405180910390fd5b505050565b606060006001611447846115e3565b01905060008167ffffffffffffffff81111561146657611465611bfb565b5b6040519080825280601f01601f1916602001820160405280156114985781602001600182028036833780820191505090505b509050600082602001820190505b6001156114fb578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816114ef576114ee6123cb565b5b049450600085036114a6575b819350505050919050565b6115108383611736565b61151d6000848484610e57565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115da57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061159b575061159a8484610879565b5b806115d957508273ffffffffffffffffffffffffffffffffffffffff166115c183610a77565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611641577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611637576116366123cb565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061167e576d04ee2d6d415b85acef81000000008381611674576116736123cb565b5b0492506020810190505b662386f26fc1000083106116ad57662386f26fc1000083816116a3576116a26123cb565b5b0492506010810190505b6305f5e10083106116d6576305f5e10083816116cc576116cb6123cb565b5b0492506008810190505b61271083106116fb5761271083816116f1576116f06123cb565b5b0492506004810190505b6064831061171e5760648381611714576117136123cb565b5b0492506002810190505b600a831061172d576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117a85760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161179f9190611a54565b60405180910390fd5b60006117b683836000610ace565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461182a5760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016118219190611a54565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61187881611843565b811461188357600080fd5b50565b6000813590506118958161186f565b92915050565b6000602082840312156118b1576118b0611839565b5b60006118bf84828501611886565b91505092915050565b60008115159050919050565b6118dd816118c8565b82525050565b60006020820190506118f860008301846118d4565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561193857808201518184015260208101905061191d565b60008484015250505050565b6000601f19601f8301169050919050565b6000611960826118fe565b61196a8185611909565b935061197a81856020860161191a565b61198381611944565b840191505092915050565b600060208201905081810360008301526119a88184611955565b905092915050565b6000819050919050565b6119c3816119b0565b81146119ce57600080fd5b50565b6000813590506119e0816119ba565b92915050565b6000602082840312156119fc576119fb611839565b5b6000611a0a848285016119d1565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a3e82611a13565b9050919050565b611a4e81611a33565b82525050565b6000602082019050611a696000830184611a45565b92915050565b611a7881611a33565b8114611a8357600080fd5b50565b600081359050611a9581611a6f565b92915050565b60008060408385031215611ab257611ab1611839565b5b6000611ac085828601611a86565b9250506020611ad1858286016119d1565b9150509250929050565b600080600060608486031215611af457611af3611839565b5b6000611b0286828701611a86565b9350506020611b1386828701611a86565b9250506040611b24868287016119d1565b9150509250925092565b600060208284031215611b4457611b43611839565b5b6000611b5284828501611a86565b91505092915050565b611b64816119b0565b82525050565b6000602082019050611b7f6000830184611b5b565b92915050565b611b8e816118c8565b8114611b9957600080fd5b50565b600081359050611bab81611b85565b92915050565b60008060408385031215611bc857611bc7611839565b5b6000611bd685828601611a86565b9250506020611be785828601611b9c565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c3382611944565b810181811067ffffffffffffffff82111715611c5257611c51611bfb565b5b80604052505050565b6000611c6561182f565b9050611c718282611c2a565b919050565b600067ffffffffffffffff821115611c9157611c90611bfb565b5b611c9a82611944565b9050602081019050919050565b82818337600083830152505050565b6000611cc9611cc484611c76565b611c5b565b905082815260208101848484011115611ce557611ce4611bf6565b5b611cf0848285611ca7565b509392505050565b600082601f830112611d0d57611d0c611bf1565b5b8135611d1d848260208601611cb6565b91505092915050565b60008060008060808587031215611d4057611d3f611839565b5b6000611d4e87828801611a86565b9450506020611d5f87828801611a86565b9350506040611d70878288016119d1565b925050606085013567ffffffffffffffff811115611d9157611d9061183e565b5b611d9d87828801611cf8565b91505092959194509250565b600067ffffffffffffffff821115611dc457611dc3611bfb565b5b611dcd82611944565b9050602081019050919050565b6000611ded611de884611da9565b611c5b565b905082815260208101848484011115611e0957611e08611bf6565b5b611e14848285611ca7565b509392505050565b600082601f830112611e3157611e30611bf1565b5b8135611e41848260208601611dda565b91505092915050565b600060208284031215611e6057611e5f611839565b5b600082013567ffffffffffffffff811115611e7e57611e7d61183e565b5b611e8a84828501611e1c565b91505092915050565b60008060408385031215611eaa57611ea9611839565b5b6000611eb885828601611a86565b9250506020611ec985828601611a86565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f1a57607f821691505b602082108103611f2d57611f2c611ed3565b5b50919050565b6000606082019050611f486000830186611a45565b611f556020830185611b5b565b611f626040830184611a45565b949350505050565b600081905092915050565b6000611f80826118fe565b611f8a8185611f6a565b9350611f9a81856020860161191a565b80840191505092915050565b6000611fb28285611f75565b9150611fbe8284611f75565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612004826119b0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361203657612035611fca565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b600061206882612041565b612072818561204c565b935061208281856020860161191a565b61208b81611944565b840191505092915050565b60006080820190506120ab6000830187611a45565b6120b86020830186611a45565b6120c56040830185611b5b565b81810360608301526120d7818461205d565b905095945050505050565b6000815190506120f18161186f565b92915050565b60006020828403121561210d5761210c611839565b5b600061211b848285016120e2565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026121867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612149565b6121908683612149565b95508019841693508086168417925050509392505050565b6000819050919050565b60006121cd6121c86121c3846119b0565b6121a8565b6119b0565b9050919050565b6000819050919050565b6121e7836121b2565b6121fb6121f3826121d4565b848454612156565b825550505050565b600090565b612210612203565b61221b8184846121de565b505050565b5b8181101561223f57612234600082612208565b600181019050612221565b5050565b601f8211156122845761225581612124565b61225e84612139565b8101602085101561226d578190505b61228161227985612139565b830182612220565b50505b505050565b600082821c905092915050565b60006122a760001984600802612289565b1980831691505092915050565b60006122c08383612296565b9150826002028217905092915050565b6122d9826118fe565b67ffffffffffffffff8111156122f2576122f1611bfb565b5b6122fc8254611f02565b612307828285612243565b600060209050601f83116001811461233a5760008415612328578287015190505b61233285826122b4565b86555061239a565b601f19841661234886612124565b60005b828110156123705784890151825560018201915060208501945060208101905061234b565b8683101561238d5784890151612389601f891682612296565b8355505b6001600288020188555050505b505050505050565b60006040820190506123b76000830185611a45565b6123c46020830184611b5b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122038f2bcd45226c56756d85279035b110105c2acbeaa65d14ae2c73646ea70826064736f6c63430008140033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xD85D3D27 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH2 0x51A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x1E93 JUMP JUMPDEST PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x34D JUMPI POP PUSH2 0x34C DUP3 PUSH2 0x90D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x363 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38F SWAP1 PUSH2 0x1F02 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F1 DUP3 PUSH2 0x9EF JUMP JUMPDEST POP PUSH2 0x3FB DUP3 PUSH2 0xA77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x414 DUP3 DUP3 PUSH2 0x40F PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0xABC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x48A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x49E DUP4 DUP4 PUSH2 0x499 PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0xACE JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x514 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x535 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545 DUP3 PUSH2 0x9EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5BF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B6 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x615 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x641 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x68E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x663 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x68E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x671 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6AA PUSH2 0x6A3 PUSH2 0xAB4 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xCE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6B9 DUP5 DUP5 DUP5 PUSH2 0x418 JUMP JUMPDEST PUSH2 0x6C5 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE57 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6D6 DUP3 PUSH2 0x9EF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x6F7 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x723 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x770 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x745 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x770 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x753 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x781 PUSH2 0x100E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x796 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x7CB JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B3 SWAP3 SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x7D4 DUP5 PUSH2 0x1025 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7F1 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x807 CALLER DUP3 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x811 DUP2 DUP4 PUSH2 0x10AC JUMP JUMPDEST PUSH2 0x83E PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH2 0x698 JUMP JUMPDEST PUSH32 0xD9DC24857F317ED9ABBBB42E920EDE0104231EB1D3D70236A74887FFAF159868 DUP2 PUSH1 0x40 MLOAD PUSH2 0x86D SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x9D8 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x9E8 JUMPI POP PUSH2 0x9E7 DUP3 PUSH2 0x1108 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9FB DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAC9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xADA DUP5 PUSH2 0x1172 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB1C JUMPI PUSH2 0xB1B DUP2 DUP5 DUP7 PUSH2 0x1374 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAD JUMPI PUSH2 0xB5E PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC30 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD59 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE4A SWAP2 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1008 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xE9B PUSH2 0xAB4 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEF9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF6 SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF7D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xF75 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6C SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1006 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFD SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1030 DUP3 PUSH2 0x9EF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x103B PUSH2 0x100E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x105B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1086 JUMP JUMPDEST DUP1 PUSH2 0x1065 DUP5 PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1076 SWAP3 SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A8 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1506 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x10CC SWAP2 SWAP1 PUSH2 0x22D0 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10FC SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11E8 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x131C JUMPI PUSH1 0x0 PUSH2 0x11F8 DUP5 PUSH2 0x9EF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1263 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1276 JUMPI POP PUSH2 0x1274 DUP2 DUP5 PUSH2 0x879 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x12B8 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12AF SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x131A JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x137F DUP4 DUP4 DUP4 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x1433 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13F4 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EB SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142A SWAP3 SWAP2 SWAP1 PUSH2 0x23A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1447 DUP5 PUSH2 0x15E3 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1466 JUMPI PUSH2 0x1465 PUSH2 0x1BFB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1498 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x14FB JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x23CB JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x14A6 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1510 DUP4 DUP4 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x151D PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xE57 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15DA JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x159B JUMPI POP PUSH2 0x159A DUP5 DUP5 PUSH2 0x879 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x15D9 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15C1 DUP4 PUSH2 0xA77 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1641 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1637 JUMPI PUSH2 0x1636 PUSH2 0x23CB JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x167E JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1674 JUMPI PUSH2 0x1673 PUSH2 0x23CB JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x16AD JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x16A3 JUMPI PUSH2 0x16A2 PUSH2 0x23CB JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x16D6 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x16CC JUMPI PUSH2 0x16CB PUSH2 0x23CB JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x16FB JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x16F1 JUMPI PUSH2 0x16F0 PUSH2 0x23CB JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x171E JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1714 JUMPI PUSH2 0x1713 PUSH2 0x23CB JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x172D JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17A8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179F SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17B6 DUP4 DUP4 PUSH1 0x0 PUSH2 0xACE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x182A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1821 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1878 DUP2 PUSH2 0x1843 JUMP JUMPDEST DUP2 EQ PUSH2 0x1883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1895 DUP2 PUSH2 0x186F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B1 JUMPI PUSH2 0x18B0 PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18BF DUP5 DUP3 DUP6 ADD PUSH2 0x1886 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18DD DUP2 PUSH2 0x18C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1938 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x191D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1960 DUP3 PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x196A DUP2 DUP6 PUSH2 0x1909 JUMP JUMPDEST SWAP4 POP PUSH2 0x197A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x191A JUMP JUMPDEST PUSH2 0x1983 DUP2 PUSH2 0x1944 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19A8 DUP2 DUP5 PUSH2 0x1955 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C3 DUP2 PUSH2 0x19B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x19CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19E0 DUP2 PUSH2 0x19BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19FC JUMPI PUSH2 0x19FB PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A0A DUP5 DUP3 DUP6 ADD PUSH2 0x19D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3E DUP3 PUSH2 0x1A13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4E DUP2 PUSH2 0x1A33 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A69 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A78 DUP2 PUSH2 0x1A33 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A95 DUP2 PUSH2 0x1A6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB2 JUMPI PUSH2 0x1AB1 PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AC0 DUP6 DUP3 DUP7 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AD1 DUP6 DUP3 DUP7 ADD PUSH2 0x19D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AF4 JUMPI PUSH2 0x1AF3 PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B02 DUP7 DUP3 DUP8 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B13 DUP7 DUP3 DUP8 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B24 DUP7 DUP3 DUP8 ADD PUSH2 0x19D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B44 JUMPI PUSH2 0x1B43 PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B52 DUP5 DUP3 DUP6 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B64 DUP2 PUSH2 0x19B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B8E DUP2 PUSH2 0x18C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BAB DUP2 PUSH2 0x1B85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BC8 JUMPI PUSH2 0x1BC7 PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BD6 DUP6 DUP3 DUP7 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BE7 DUP6 DUP3 DUP7 ADD PUSH2 0x1B9C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1C33 DUP3 PUSH2 0x1944 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C52 JUMPI PUSH2 0x1C51 PUSH2 0x1BFB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C65 PUSH2 0x182F JUMP JUMPDEST SWAP1 POP PUSH2 0x1C71 DUP3 DUP3 PUSH2 0x1C2A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C91 JUMPI PUSH2 0x1C90 PUSH2 0x1BFB JUMP JUMPDEST JUMPDEST PUSH2 0x1C9A DUP3 PUSH2 0x1944 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC9 PUSH2 0x1CC4 DUP5 PUSH2 0x1C76 JUMP JUMPDEST PUSH2 0x1C5B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CE5 JUMPI PUSH2 0x1CE4 PUSH2 0x1BF6 JUMP JUMPDEST JUMPDEST PUSH2 0x1CF0 DUP5 DUP3 DUP6 PUSH2 0x1CA7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D0D JUMPI PUSH2 0x1D0C PUSH2 0x1BF1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D1D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D40 JUMPI PUSH2 0x1D3F PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D4E DUP8 DUP3 DUP9 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D5F DUP8 DUP3 DUP9 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D70 DUP8 DUP3 DUP9 ADD PUSH2 0x19D1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D91 JUMPI PUSH2 0x1D90 PUSH2 0x183E JUMP JUMPDEST JUMPDEST PUSH2 0x1D9D DUP8 DUP3 DUP9 ADD PUSH2 0x1CF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DC4 JUMPI PUSH2 0x1DC3 PUSH2 0x1BFB JUMP JUMPDEST JUMPDEST PUSH2 0x1DCD DUP3 PUSH2 0x1944 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DED PUSH2 0x1DE8 DUP5 PUSH2 0x1DA9 JUMP JUMPDEST PUSH2 0x1C5B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E09 JUMPI PUSH2 0x1E08 PUSH2 0x1BF6 JUMP JUMPDEST JUMPDEST PUSH2 0x1E14 DUP5 DUP3 DUP6 PUSH2 0x1CA7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E31 JUMPI PUSH2 0x1E30 PUSH2 0x1BF1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E41 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E60 JUMPI PUSH2 0x1E5F PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E7E JUMPI PUSH2 0x1E7D PUSH2 0x183E JUMP JUMPDEST JUMPDEST PUSH2 0x1E8A DUP5 DUP3 DUP6 ADD PUSH2 0x1E1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EAA JUMPI PUSH2 0x1EA9 PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EB8 DUP6 DUP3 DUP7 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EC9 DUP6 DUP3 DUP7 ADD PUSH2 0x1A86 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F1A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F2D JUMPI PUSH2 0x1F2C PUSH2 0x1ED3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F48 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x1F55 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B5B JUMP JUMPDEST PUSH2 0x1F62 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A45 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F80 DUP3 PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x1F8A DUP2 DUP6 PUSH2 0x1F6A JUMP JUMPDEST SWAP4 POP PUSH2 0x1F9A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x191A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB2 DUP3 DUP6 PUSH2 0x1F75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBE DUP3 DUP5 PUSH2 0x1F75 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2004 DUP3 PUSH2 0x19B0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2036 JUMPI PUSH2 0x2035 PUSH2 0x1FCA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2068 DUP3 PUSH2 0x2041 JUMP JUMPDEST PUSH2 0x2072 DUP2 DUP6 PUSH2 0x204C JUMP JUMPDEST SWAP4 POP PUSH2 0x2082 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x191A JUMP JUMPDEST PUSH2 0x208B DUP2 PUSH2 0x1944 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20AB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x20B8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x20C5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B5B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x20D7 DUP2 DUP5 PUSH2 0x205D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20F1 DUP2 PUSH2 0x186F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x210D JUMPI PUSH2 0x210C PUSH2 0x1839 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x211B DUP5 DUP3 DUP6 ADD PUSH2 0x20E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2186 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2149 JUMP JUMPDEST PUSH2 0x2190 DUP7 DUP4 PUSH2 0x2149 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CD PUSH2 0x21C8 PUSH2 0x21C3 DUP5 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x19B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21E7 DUP4 PUSH2 0x21B2 JUMP JUMPDEST PUSH2 0x21FB PUSH2 0x21F3 DUP3 PUSH2 0x21D4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2156 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2210 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x221B DUP2 DUP5 DUP5 PUSH2 0x21DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x223F JUMPI PUSH2 0x2234 PUSH1 0x0 DUP3 PUSH2 0x2208 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2221 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2284 JUMPI PUSH2 0x2255 DUP2 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x225E DUP5 PUSH2 0x2139 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x226D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2281 PUSH2 0x2279 DUP6 PUSH2 0x2139 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2220 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22A7 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2289 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C0 DUP4 DUP4 PUSH2 0x2296 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22D9 DUP3 PUSH2 0x18FE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22F2 JUMPI PUSH2 0x22F1 PUSH2 0x1BFB JUMP JUMPDEST JUMPDEST PUSH2 0x22FC DUP3 SLOAD PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x2307 DUP3 DUP3 DUP6 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x233A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2328 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2332 DUP6 DUP3 PUSH2 0x22B4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x239A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2348 DUP7 PUSH2 0x2124 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2370 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x234B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x238D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2389 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2296 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23B7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x23C4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B5B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE CALLCODE 0xBC 0xD4 MSTORE 0x26 0xC5 PUSH8 0x56D85279035B1101 SDIV 0xC2 0xAC 0xBE 0xAA PUSH6 0xD14AE2C73646 0xEA PUSH17 0x826064736F6C6343000814003300000000 ", "sourceMap": "202:561:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:207:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1210:593:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;487:273:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3928:153:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;937:207:7;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;2365:89:4:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2518:93::-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1210:593:7:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;;1341:23;1367:10;:19;1378:7;1367:19;;;;;;;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1522:1;1506:4;1500:18;:23;1496:70;;1546:9;1539:16;;;;;;1496:70;1691:1;1671:9;1665:23;:27;1661:95;;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;;;1661:95;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;;;;1210:593;;;;:::o;487:273:15:-;540:9;;:11;;;;;;;;;:::i;:::-;;;;;;558:18;579:9;;558:30;;595:33;605:10;617;595:9;:33::i;:::-;635:35;648:10;660:9;635:12;:35::i;:::-;677:44;695:19;;;;;;;;;;;716:4;677:17;:44::i;:::-;733:21;743:10;733:21;;;;;;:::i;:::-;;;;;;;;533:227;487:273;:::o;3928:153:4:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;1561:300::-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;16138:241::-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;14418:120:4:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;10633:100::-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;1922:167:7:-;2035:9;2013:10;:19;2024:7;2013:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2059:23;2074:7;2059:23;;;;;;:::i;:::-;;;;;;;;1922:167;;:::o;762:146:11:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;5707:115:4:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;637:698:10:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;10954:182:4:-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;6376:272::-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;12214:916:13:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;9955:327:4:-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;7:75:18:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:308::-;10053:4;10143:18;10135:6;10132:30;10129:56;;;10165:18;;:::i;:::-;10129:56;10203:29;10225:6;10203:29;:::i;:::-;10195:37;;10287:4;10281;10277:15;10269:23;;9991:308;;;:::o;10305:425::-;10383:5;10408:66;10424:49;10466:6;10424:49;:::i;:::-;10408:66;:::i;:::-;10399:75;;10497:6;10490:5;10483:21;10535:4;10528:5;10524:16;10573:3;10564:6;10559:3;10555:16;10552:25;10549:112;;;10580:79;;:::i;:::-;10549:112;10670:54;10717:6;10712:3;10707;10670:54;:::i;:::-;10389:341;10305:425;;;;;:::o;10750:340::-;10806:5;10855:3;10848:4;10840:6;10836:17;10832:27;10822:122;;10863:79;;:::i;:::-;10822:122;10980:6;10967:20;11005:79;11080:3;11072:6;11065:4;11057:6;11053:17;11005:79;:::i;:::-;10996:88;;10812:278;10750:340;;;;:::o;11096:509::-;11165:6;11214:2;11202:9;11193:7;11189:23;11185:32;11182:119;;;11220:79;;:::i;:::-;11182:119;11368:1;11357:9;11353:17;11340:31;11398:18;11390:6;11387:30;11384:117;;;11420:79;;:::i;:::-;11384:117;11525:63;11580:7;11571:6;11560:9;11556:22;11525:63;:::i;:::-;11515:73;;11311:287;11096:509;;;;:::o;11611:474::-;11679:6;11687;11736:2;11724:9;11715:7;11711:23;11707:32;11704:119;;;11742:79;;:::i;:::-;11704:119;11862:1;11887:53;11932:7;11923:6;11912:9;11908:22;11887:53;:::i;:::-;11877:63;;11833:117;11989:2;12015:53;12060:7;12051:6;12040:9;12036:22;12015:53;:::i;:::-;12005:63;;11960:118;11611:474;;;;;:::o;12091:180::-;12139:77;12136:1;12129:88;12236:4;12233:1;12226:15;12260:4;12257:1;12250:15;12277:320;12321:6;12358:1;12352:4;12348:12;12338:22;;12405:1;12399:4;12395:12;12426:18;12416:81;;12482:4;12474:6;12470:17;12460:27;;12416:81;12544:2;12536:6;12533:14;12513:18;12510:38;12507:84;;12563:18;;:::i;:::-;12507:84;12328:269;12277:320;;;:::o;12603:442::-;12752:4;12790:2;12779:9;12775:18;12767:26;;12803:71;12871:1;12860:9;12856:17;12847:6;12803:71;:::i;:::-;12884:72;12952:2;12941:9;12937:18;12928:6;12884:72;:::i;:::-;12966;13034:2;13023:9;13019:18;13010:6;12966:72;:::i;:::-;12603:442;;;;;;:::o;13051:148::-;13153:11;13190:3;13175:18;;13051:148;;;;:::o;13205:390::-;13311:3;13339:39;13372:5;13339:39;:::i;:::-;13394:89;13476:6;13471:3;13394:89;:::i;:::-;13387:96;;13492:65;13550:6;13545:3;13538:4;13531:5;13527:16;13492:65;:::i;:::-;13582:6;13577:3;13573:16;13566:23;;13315:280;13205:390;;;;:::o;13601:435::-;13781:3;13803:95;13894:3;13885:6;13803:95;:::i;:::-;13796:102;;13915:95;14006:3;13997:6;13915:95;:::i;:::-;13908:102;;14027:3;14020:10;;13601:435;;;;;:::o;14042:180::-;14090:77;14087:1;14080:88;14187:4;14184:1;14177:15;14211:4;14208:1;14201:15;14228:233;14267:3;14290:24;14308:5;14290:24;:::i;:::-;14281:33;;14336:66;14329:5;14326:77;14323:103;;14406:18;;:::i;:::-;14323:103;14453:1;14446:5;14442:13;14435:20;;14228:233;;;:::o;14467:98::-;14518:6;14552:5;14546:12;14536:22;;14467:98;;;:::o;14571:168::-;14654:11;14688:6;14683:3;14676:19;14728:4;14723:3;14719:14;14704:29;;14571:168;;;;:::o;14745:373::-;14831:3;14859:38;14891:5;14859:38;:::i;:::-;14913:70;14976:6;14971:3;14913:70;:::i;:::-;14906:77;;14992:65;15050:6;15045:3;15038:4;15031:5;15027:16;14992:65;:::i;:::-;15082:29;15104:6;15082:29;:::i;:::-;15077:3;15073:39;15066:46;;14835:283;14745:373;;;;:::o;15124:640::-;15319:4;15357:3;15346:9;15342:19;15334:27;;15371:71;15439:1;15428:9;15424:17;15415:6;15371:71;:::i;:::-;15452:72;15520:2;15509:9;15505:18;15496:6;15452:72;:::i;:::-;15534;15602:2;15591:9;15587:18;15578:6;15534:72;:::i;:::-;15653:9;15647:4;15643:20;15638:2;15627:9;15623:18;15616:48;15681:76;15752:4;15743:6;15681:76;:::i;:::-;15673:84;;15124:640;;;;;;;:::o;15770:141::-;15826:5;15857:6;15851:13;15842:22;;15873:32;15899:5;15873:32;:::i;:::-;15770:141;;;;:::o;15917:349::-;15986:6;16035:2;16023:9;16014:7;16010:23;16006:32;16003:119;;;16041:79;;:::i;:::-;16003:119;16161:1;16186:63;16241:7;16232:6;16221:9;16217:22;16186:63;:::i;:::-;16176:73;;16132:127;15917:349;;;;:::o;16272:141::-;16321:4;16344:3;16336:11;;16367:3;16364:1;16357:14;16401:4;16398:1;16388:18;16380:26;;16272:141;;;:::o;16419:93::-;16456:6;16503:2;16498;16491:5;16487:14;16483:23;16473:33;;16419:93;;;:::o;16518:107::-;16562:8;16612:5;16606:4;16602:16;16581:37;;16518:107;;;;:::o;16631:393::-;16700:6;16750:1;16738:10;16734:18;16773:97;16803:66;16792:9;16773:97;:::i;:::-;16891:39;16921:8;16910:9;16891:39;:::i;:::-;16879:51;;16963:4;16959:9;16952:5;16948:21;16939:30;;17012:4;17002:8;16998:19;16991:5;16988:30;16978:40;;16707:317;;16631:393;;;;;:::o;17030:60::-;17058:3;17079:5;17072:12;;17030:60;;;:::o;17096:142::-;17146:9;17179:53;17197:34;17206:24;17224:5;17206:24;:::i;:::-;17197:34;:::i;:::-;17179:53;:::i;:::-;17166:66;;17096:142;;;:::o;17244:75::-;17287:3;17308:5;17301:12;;17244:75;;;:::o;17325:269::-;17435:39;17466:7;17435:39;:::i;:::-;17496:91;17545:41;17569:16;17545:41;:::i;:::-;17537:6;17530:4;17524:11;17496:91;:::i;:::-;17490:4;17483:105;17401:193;17325:269;;;:::o;17600:73::-;17645:3;17600:73;:::o;17679:189::-;17756:32;;:::i;:::-;17797:65;17855:6;17847;17841:4;17797:65;:::i;:::-;17732:136;17679:189;;:::o;17874:186::-;17934:120;17951:3;17944:5;17941:14;17934:120;;;18005:39;18042:1;18035:5;18005:39;:::i;:::-;17978:1;17971:5;17967:13;17958:22;;17934:120;;;17874:186;;:::o;18066:543::-;18167:2;18162:3;18159:11;18156:446;;;18201:38;18233:5;18201:38;:::i;:::-;18285:29;18303:10;18285:29;:::i;:::-;18275:8;18271:44;18468:2;18456:10;18453:18;18450:49;;;18489:8;18474:23;;18450:49;18512:80;18568:22;18586:3;18568:22;:::i;:::-;18558:8;18554:37;18541:11;18512:80;:::i;:::-;18171:431;;18156:446;18066:543;;;:::o;18615:117::-;18669:8;18719:5;18713:4;18709:16;18688:37;;18615:117;;;;:::o;18738:169::-;18782:6;18815:51;18863:1;18859:6;18851:5;18848:1;18844:13;18815:51;:::i;:::-;18811:56;18896:4;18890;18886:15;18876:25;;18789:118;18738:169;;;;:::o;18912:295::-;18988:4;19134:29;19159:3;19153:4;19134:29;:::i;:::-;19126:37;;19196:3;19193:1;19189:11;19183:4;19180:21;19172:29;;18912:295;;;;:::o;19212:1395::-;19329:37;19362:3;19329:37;:::i;:::-;19431:18;19423:6;19420:30;19417:56;;;19453:18;;:::i;:::-;19417:56;19497:38;19529:4;19523:11;19497:38;:::i;:::-;19582:67;19642:6;19634;19628:4;19582:67;:::i;:::-;19676:1;19700:4;19687:17;;19732:2;19724:6;19721:14;19749:1;19744:618;;;;20406:1;20423:6;20420:77;;;20472:9;20467:3;20463:19;20457:26;20448:35;;20420:77;20523:67;20583:6;20576:5;20523:67;:::i;:::-;20517:4;20510:81;20379:222;19714:887;;19744:618;19796:4;19792:9;19784:6;19780:22;19830:37;19862:4;19830:37;:::i;:::-;19889:1;19903:208;19917:7;19914:1;19911:14;19903:208;;;19996:9;19991:3;19987:19;19981:26;19973:6;19966:42;20047:1;20039:6;20035:14;20025:24;;20094:2;20083:9;20079:18;20066:31;;19940:4;19937:1;19933:12;19928:17;;19903:208;;;20139:6;20130:7;20127:19;20124:179;;;20197:9;20192:3;20188:19;20182:26;20240:48;20282:4;20274:6;20270:17;20259:9;20240:48;:::i;:::-;20232:6;20225:64;20147:156;20124:179;20349:1;20345;20337:6;20333:14;20329:22;20323:4;20316:36;19751:611;;;19714:887;;19304:1303;;;19212:1395;;:::o;20613:332::-;20734:4;20772:2;20761:9;20757:18;20749:26;;20785:71;20853:1;20842:9;20838:17;20829:6;20785:71;:::i;:::-;20866:72;20934:2;20923:9;20919:18;20910:6;20866:72;:::i;:::-;20613:332;;;;;:::o;20951:180::-;20999:77;20996:1;20989:88;21096:4;21093:1;21086:15;21120:4;21117:1;21110:15" }, "methodIdentifiers": { "approve(address,uint256)": "095ea7b3", "balanceOf(address)": "70a08231", "getApproved(uint256)": "081812fc", "isApprovedForAll(address,address)": "e985e9c5", "mint(string)": "d85d3d27", "name()": "06fdde03", "ownerOf(uint256)": "6352211e", "safeTransferFrom(address,address,uint256)": "42842e0e", "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde", "setApprovalForAll(address,bool)": "a22cb465", "supportsInterface(bytes4)": "01ffc9a7", "symbol()": "95d89b41", "tokenURI(uint256)": "c87b56dd", "transferFrom(address,address,uint256)": "23b872dd" } }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketplaceContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"NFTMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IndividualNFTs.sol\":\"IndividualNFTs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/IndividualNFTs.sol\":{\"keccak256\":\"0xde8c8a0ab949e009f26abe5a7b8522b5e8befbd10509e98673390570a4b37df4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61730738f9961dcc92dc69773201a2dde2b9e24be3921026b6791b977fe6ea2b\",\"dweb:/ipfs/QmecebmX55xP1roF1jnprjkdWBRtvML9nRErbc9dKF4kEa\"]}},\"version\":1}" } }, "contracts/NFTMarketplace.sol": { "NFTMarketplace": { "abi": [{ "inputs": [], "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "nftContract", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "indexed": false, "internalType": "address", "name": "seller", "type": "address" }, { "indexed": false, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "price", "type": "uint256" }], "name": "NFTListed", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "nftContract", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "indexed": false, "internalType": "address", "name": "seller", "type": "address" }, { "indexed": false, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "price", "type": "uint256" }], "name": "NFTSold", "type": "event" }, { "inputs": [], "name": "LISTING_FEE", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "_nftContract", "type": "address" }, { "internalType": "uint256", "name": "_tokenId", "type": "uint256" }], "name": "buyNFT", "outputs": [], "stateMutability": "payable", "type": "function" }, { "inputs": [], "name": "getListedNFTs", "outputs": [{ "components": [{ "internalType": "address", "name": "nftContract", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "address payable", "name": "seller", "type": "address" }, { "internalType": "address payable", "name": "owner", "type": "address" }, { "internalType": "uint256", "name": "price", "type": "uint256" }, { "internalType": "bool", "name": "listed", "type": "bool" }], "internalType": "struct NFTMarketplace.NFT[]", "name": "", "type": "tuple[]" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "getMyListNFTs", "outputs": [{ "components": [{ "internalType": "address", "name": "nftContract", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "address payable", "name": "seller", "type": "address" }, { "internalType": "address payable", "name": "owner", "type": "address" }, { "internalType": "uint256", "name": "price", "type": "uint256" }, { "internalType": "bool", "name": "listed", "type": "bool" }], "internalType": "struct NFTMarketplace.NFT[]", "name": "", "type": "tuple[]" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "getMyNFTs", "outputs": [{ "components": [{ "internalType": "address", "name": "nftContract", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "address payable", "name": "seller", "type": "address" }, { "internalType": "address payable", "name": "owner", "type": "address" }, { "internalType": "uint256", "name": "price", "type": "uint256" }, { "internalType": "bool", "name": "listed", "type": "bool" }], "internalType": "struct NFTMarketplace.NFT[]", "name": "", "type": "tuple[]" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "_nftContract", "type": "address" }, { "internalType": "uint256", "name": "_tokenId", "type": "uint256" }, { "internalType": "uint256", "name": "_price", "type": "uint256" }], "name": "listNFT", "outputs": [], "stateMutability": "payable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "_nftContract", "type": "address" }, { "internalType": "uint256", "name": "_tokenId", "type": "uint256" }, { "internalType": "uint256", "name": "_price", "type": "uint256" }], "name": "resellNft", "outputs": [], "stateMutability": "payable", "type": "function" }], "evm": { "bytecode": { "functionDebugData": { "@_3069": { "entryPoint": null, "id": 3069, "parameterSlots": 0, "returnSlots": 0 }, "@_3622": { "entryPoint": null, "id": 3622, "parameterSlots": 0, "returnSlots": 0 } }, "generatedSources": [], "linkReferences": {}, "object": "6080604052655af3107a400060035534801561001a57600080fd5b50600160008190555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ae2806100736000396000f3fe6080604052600436106100705760003560e01c806334f5b6241161004e57806334f5b624146100f6578063629cb2e414610112578063a82ba76f1461013d578063ad05f1b41461015957610070565b8063012386f0146100755780631a7a922e146100a05780632b86ae38146100cb575b600080fd5b34801561008157600080fd5b5061008a610175565b604051610097919061150d565b60405180910390f35b3480156100ac57600080fd5b506100b56103cf565b6040516100c2919061150d565b60405180910390f35b3480156100d757600080fd5b506100e061076d565b6040516100ed919061153e565b60405180910390f35b610110600480360381019061010b91906115b6565b610773565b005b34801561011e57600080fd5b506101276109b7565b604051610134919061150d565b60405180910390f35b61015760048036038101906101529190611609565b610ce3565b005b610173600480360381019061016e91906115b6565b610f57565b005b60606000600254905060006001548261018e9190611678565b905060008167ffffffffffffffff8111156101ac576101ab6116ac565b5b6040519080825280602002602001820160405280156101e557816020015b6101d26112d3565b8152602001906001900390816101ca5790505b5090506000805b848110156103c4576005600060018361020591906116db565b815260200190815260200160002060050160009054906101000a900460ff16156103b1576005600060018361023a91906116db565b81526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff1615151515815250508383815181106103975761039661170f565b5b602002602001018190525081806103ad9061173e565b9250505b80806103bc9061173e565b9150506101ec565b508194505050505090565b6060600060025490506000805b828110156104b4573373ffffffffffffffffffffffffffffffffffffffff166005600060018461040c91906116db565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561048d57506005600060018361046d91906116db565b815260200190815260200160002060050160009054906101000a900460ff165b156104a157818061049d9061173e565b9250505b80806104ac9061173e565b9150506103dc565b5060008167ffffffffffffffff8111156104d1576104d06116ac565b5b60405190808252806020026020018201604052801561050a57816020015b6104f76112d3565b8152602001906001900390816104ef5790505b5090506000805b84811015610762573373ffffffffffffffffffffffffffffffffffffffff166005600060018461054191906116db565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156105c25750600560006001836105a291906116db565b815260200190815260200160002060050160009054906101000a900460ff165b1561074f57600560006001836105d891906116db565b81526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff1615151515815250508383815181106107355761073461170f565b5b6020026020010181905250818061074b9061173e565b9250505b808061075a9061173e565b915050610511565b508194505050505090565b60035481565b600160008082825461078591906116db565b92505081905550600080549050600082116107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc906117e3565b60405180910390fd5b6003543414610819576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108109061184f565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016108569392919061187e565b600060405180830381600087803b15801561087057600080fd5b505af1158015610884573d6000803e3d6000fd5b505050506000600560008581526020019081526020016000209050338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550308160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160050160006101000a81548160ff0219169083151502179055508281600401819055506001600081548092919061095e906118b5565b91905055507fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d19858533308760405161099a9594939291906118de565b60405180910390a15060005481146109b157600080fd5b50505050565b6060600060025490506000805b82811015610a63573373ffffffffffffffffffffffffffffffffffffffff16600560006001846109f491906116db565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610a50578180610a4c9061173e565b9250505b8080610a5b9061173e565b9150506109c4565b5060008167ffffffffffffffff811115610a8057610a7f6116ac565b5b604051908082528060200260200182016040528015610ab957816020015b610aa66112d3565b815260200190600190039081610a9e5790505b5090506000805b84811015610cd8573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610af091906116db565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610cc55760056000600183610b4e91906116db565b81526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff161515151581525050838381518110610cab57610caa61170f565b5b60200260200101819052508180610cc19061173e565b9250505b8080610cd09061173e565b915050610ac0565b508194505050505090565b6001600080828254610cf591906116db565b9250508190555060008054905060006005600084815260200190815260200160002090508060040154341015610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d57906119a3565b60405180910390fd5b60003390508160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610dcf573d6000803e3d6000fd5b508473ffffffffffffffffffffffffffffffffffffffff166323b872dd308385600101546040518463ffffffff1660e01b8152600401610e1193929190611a22565b600060405180830381600087803b158015610e2b57600080fd5b505af1158015610e3f573d6000803e3d6000fd5b50505050808260030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008260050160006101000a81548160ff02191690831515021790555060016000815480929190610eb69061173e565b91905055507f16f1dbd97e6bf646d429ed186cce832f1f7fd9907814293b83181e9970ab7bd285858460020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634604051610f3a959493929190611a59565b60405180910390a150506000548114610f5257600080fd5b505050565b6001600080828254610f6991906116db565b9250508190555060008054905060008211610fb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb0906117e3565b60405180910390fd5b6003543414610ffd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff49061184f565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161103a9392919061187e565b600060405180830381600087803b15801561105457600080fd5b505af1158015611068573d6000803e3d6000fd5b50505050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f193505050501580156110d6573d6000803e3d6000fd5b50600260008154809291906110ea9061173e565b91905055506040518060c001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600115158152506005600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050507fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d1984843330866040516112b79594939291906118de565b60405180910390a160005481146112cd57600080fd5b50505050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113a482611379565b9050919050565b6113b481611399565b82525050565b6000819050919050565b6113cd816113ba565b82525050565b60006113de82611379565b9050919050565b6113ee816113d3565b82525050565b60008115159050919050565b611409816113f4565b82525050565b60c08201600082015161142560008501826113ab565b50602082015161143860208501826113c4565b50604082015161144b60408501826113e5565b50606082015161145e60608501826113e5565b50608082015161147160808501826113c4565b5060a082015161148460a0850182611400565b50505050565b6000611496838361140f565b60c08301905092915050565b6000602082019050919050565b60006114ba8261134d565b6114c48185611358565b93506114cf83611369565b8060005b838110156115005781516114e7888261148a565b97506114f2836114a2565b9250506001810190506114d3565b5085935050505092915050565b6000602082019050818103600083015261152781846114af565b905092915050565b611538816113ba565b82525050565b6000602082019050611553600083018461152f565b92915050565b600080fd5b61156781611399565b811461157257600080fd5b50565b6000813590506115848161155e565b92915050565b611593816113ba565b811461159e57600080fd5b50565b6000813590506115b08161158a565b92915050565b6000806000606084860312156115cf576115ce611559565b5b60006115dd86828701611575565b93505060206115ee868287016115a1565b92505060406115ff868287016115a1565b9150509250925092565b600080604083850312156116205761161f611559565b5b600061162e85828601611575565b925050602061163f858286016115a1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611683826113ba565b915061168e836113ba565b92508282039050818111156116a6576116a5611649565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006116e6826113ba565b91506116f1836113ba565b925082820190508082111561170957611708611649565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611749826113ba565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361177b5761177a611649565b5b600182019050919050565b600082825260208201905092915050565b7f5072696365206d757374206265206174206c6561737420312077656900000000600082015250565b60006117cd601c83611786565b91506117d882611797565b602082019050919050565b600060208201905081810360008301526117fc816117c0565b9050919050565b7f4e6f7420656e6f75676820657468657220666f72206c697374696e6720666565600082015250565b6000611839602083611786565b915061184482611803565b602082019050919050565b600060208201905081810360008301526118688161182c565b9050919050565b61187881611399565b82525050565b6000606082019050611893600083018661186f565b6118a0602083018561186f565b6118ad604083018461152f565b949350505050565b60006118c0826113ba565b9150600082036118d3576118d2611649565b5b600182039050919050565b600060a0820190506118f3600083018861186f565b611900602083018761152f565b61190d604083018661186f565b61191a606083018561186f565b611927608083018461152f565b9695505050505050565b7f4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e6760008201527f2070726963650000000000000000000000000000000000000000000000000000602082015250565b600061198d602683611786565b915061199882611931565b604082019050919050565b600060208201905081810360008301526119bc81611980565b9050919050565b6000819050919050565b60006119e86119e36119de84611379565b6119c3565b611379565b9050919050565b60006119fa826119cd565b9050919050565b6000611a0c826119ef565b9050919050565b611a1c81611a01565b82525050565b6000606082019050611a37600083018661186f565b611a446020830185611a13565b611a51604083018461152f565b949350505050565b600060a082019050611a6e600083018861186f565b611a7b602083018761152f565b611a886040830186611a13565b611a956060830185611a13565b611aa2608083018461152f565b969550505050505056fea2646970667358221220fd17c80760609b03c1c6dc28ab6b8a9a3e75934edac19b8550d22f65b31faf6d64736f6c63430008140033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH6 0x5AF3107A4000 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1AE2 DUP1 PUSH2 0x73 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x34F5B624 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x34F5B624 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x629CB2E4 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0xA82BA76F EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xAD05F1B4 EQ PUSH2 0x159 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x12386F0 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x1A7A922E EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x2B86AE38 EQ PUSH2 0xCB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB5 PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE0 PUSH2 0x76D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0xCE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH2 0xF57 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1678 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AC JUMPI PUSH2 0x1AB PUSH2 0x16AC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1D2 PUSH2 0x12D3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1CA JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x397 JUMPI PUSH2 0x396 PUSH2 0x170F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x3AD SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x3BC SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EC JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4B4 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x48D JUMPI POP PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x4A1 JUMPI DUP2 DUP1 PUSH2 0x49D SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x4AC SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3DC JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x50A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x4F7 PUSH2 0x12D3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x4EF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x762 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x5C2 JUMPI POP PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x74F JUMPI PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x735 JUMPI PUSH2 0x734 PUSH2 0x170F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x74B SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x75A SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x511 JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x785 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x810 SWAP1 PUSH2 0x184F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x856 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x187E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x884 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP ADDRESS DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x95E SWAP1 PUSH2 0x18B5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0xA0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19 DUP6 DUP6 CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD PUSH2 0x99A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x9B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA63 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x9F4 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA50 JUMPI DUP2 DUP1 PUSH2 0xA4C SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xA5B SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9C4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA80 JUMPI PUSH2 0xA7F PUSH2 0x16AC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAB9 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xAA6 PUSH2 0x12D3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA9E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCD8 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xAF0 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCC5 JUMPI PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCAB JUMPI PUSH2 0xCAA PUSH2 0x170F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xCC1 SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xCD0 SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAC0 JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xCF5 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD57 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP4 DUP6 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE11 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A22 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xEB6 SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x16F1DBD97E6BF646D429ED186CCE832F1F7FD9907814293B83181E9970AB7BD2 DUP6 DUP6 DUP5 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xF3A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0xF52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xF69 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0xFB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB0 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0xFFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF4 SWAP1 PUSH2 0x184F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x187E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1054 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1068 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x10EA SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0xA0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19 DUP5 DUP5 CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD PUSH2 0x12B7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x12CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A4 DUP3 PUSH2 0x1379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B4 DUP2 PUSH2 0x1399 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CD DUP2 PUSH2 0x13BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13DE DUP3 PUSH2 0x1379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13EE DUP2 PUSH2 0x13D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1409 DUP2 PUSH2 0x13F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1425 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x13AB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1438 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x13C4 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x144B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x13E5 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x145E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x13E5 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1471 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x13C4 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1484 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1400 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1496 DUP4 DUP4 PUSH2 0x140F JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BA DUP3 PUSH2 0x134D JUMP JUMPDEST PUSH2 0x14C4 DUP2 DUP6 PUSH2 0x1358 JUMP JUMPDEST SWAP4 POP PUSH2 0x14CF DUP4 PUSH2 0x1369 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1500 JUMPI DUP2 MLOAD PUSH2 0x14E7 DUP9 DUP3 PUSH2 0x148A JUMP JUMPDEST SWAP8 POP PUSH2 0x14F2 DUP4 PUSH2 0x14A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x14D3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1527 DUP2 DUP5 PUSH2 0x14AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1538 DUP2 PUSH2 0x13BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1553 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1567 DUP2 PUSH2 0x1399 JUMP JUMPDEST DUP2 EQ PUSH2 0x1572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1584 DUP2 PUSH2 0x155E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1593 DUP2 PUSH2 0x13BA JUMP JUMPDEST DUP2 EQ PUSH2 0x159E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15B0 DUP2 PUSH2 0x158A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15CF JUMPI PUSH2 0x15CE PUSH2 0x1559 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15DD DUP7 DUP3 DUP8 ADD PUSH2 0x1575 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15EE DUP7 DUP3 DUP8 ADD PUSH2 0x15A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x15FF DUP7 DUP3 DUP8 ADD PUSH2 0x15A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1620 JUMPI PUSH2 0x161F PUSH2 0x1559 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x162E DUP6 DUP3 DUP7 ADD PUSH2 0x1575 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x163F DUP6 DUP3 DUP7 ADD PUSH2 0x15A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1683 DUP3 PUSH2 0x13BA JUMP JUMPDEST SWAP2 POP PUSH2 0x168E DUP4 PUSH2 0x13BA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x16A6 JUMPI PUSH2 0x16A5 PUSH2 0x1649 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16E6 DUP3 PUSH2 0x13BA JUMP JUMPDEST SWAP2 POP PUSH2 0x16F1 DUP4 PUSH2 0x13BA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1709 JUMPI PUSH2 0x1708 PUSH2 0x1649 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1749 DUP3 PUSH2 0x13BA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x177B JUMPI PUSH2 0x177A PUSH2 0x1649 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5072696365206D757374206265206174206C6561737420312077656900000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CD PUSH1 0x1C DUP4 PUSH2 0x1786 JUMP JUMPDEST SWAP2 POP PUSH2 0x17D8 DUP3 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17FC DUP2 PUSH2 0x17C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820657468657220666F72206C697374696E6720666565 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1839 PUSH1 0x20 DUP4 PUSH2 0x1786 JUMP JUMPDEST SWAP2 POP PUSH2 0x1844 DUP3 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1868 DUP2 PUSH2 0x182C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1878 DUP2 PUSH2 0x1399 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1893 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x18A0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x18AD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x152F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C0 DUP3 PUSH2 0x13BA JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x1649 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x18F3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x1900 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x190D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x191A PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x1927 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x152F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820657468657220746F20636F7665722061736B696E67 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2070726963650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198D PUSH1 0x26 DUP4 PUSH2 0x1786 JUMP JUMPDEST SWAP2 POP PUSH2 0x1998 DUP3 PUSH2 0x1931 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19BC DUP2 PUSH2 0x1980 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E8 PUSH2 0x19E3 PUSH2 0x19DE DUP5 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x1379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FA DUP3 PUSH2 0x19CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0C DUP3 PUSH2 0x19EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1C DUP2 PUSH2 0x1A01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1A37 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x1A44 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x1A51 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x152F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1A6E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x1A7B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x1A88 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x1A95 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x1AA2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x152F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT OR 0xC8 SMOD PUSH1 0x60 SWAP12 SUB 0xC1 0xC6 0xDC 0x28 0xAB PUSH12 0x8A9A3E75934EDAC19B8550D2 0x2F PUSH6 0xB31FAF6D6473 PUSH16 0x6C634300081400330000000000000000 ", "sourceMap": "163:4637:16:-:0;;;306:12;277:41;;928:67;;;;;;;;;;616:1:17;600:13;:17;;;;976:10:16;953:12;;:34;;;;;;;;;;;;;;;;;;163:4637;;;;;;" }, "deployedBytecode": { "functionDebugData": { "@LISTING_FEE_3013": { "entryPoint": 1901, "id": 3013, "parameterSlots": 0, "returnSlots": 0 }, "@buyNFT_3236": { "entryPoint": 3299, "id": 3236, "parameterSlots": 2, "returnSlots": 0 }, "@getListedNFTs_3401": { "entryPoint": 373, "id": 3401, "parameterSlots": 0, "returnSlots": 1 }, "@getMyListNFTs_3607": { "entryPoint": 975, "id": 3607, "parameterSlots": 0, "returnSlots": 1 }, "@getMyNFTs_3497": { "entryPoint": 2487, "id": 3497, "parameterSlots": 0, "returnSlots": 1 }, "@listNFT_3153": { "entryPoint": 3927, "id": 3153, "parameterSlots": 3, "returnSlots": 0 }, "@resellNft_3332": { "entryPoint": 1907, "id": 3332, "parameterSlots": 3, "returnSlots": 0 }, "abi_decode_t_address": { "entryPoint": 5493, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_t_uint256": { "entryPoint": 5537, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_tuple_t_addresst_uint256": { "entryPoint": 5641, "id": null, "parameterSlots": 2, "returnSlots": 2 }, "abi_decode_tuple_t_addresst_uint256t_uint256": { "entryPoint": 5558, "id": null, "parameterSlots": 2, "returnSlots": 3 }, "abi_encodeUpdatedPos_t_struct$_NFT_$3033_memory_ptr_to_t_struct$_NFT_$3033_memory_ptr": { "entryPoint": 5258, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_address_payable_to_t_address_fromStack": { "entryPoint": 6675, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_t_address_payable_to_t_address_payable": { "entryPoint": 5093, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_t_address_to_t_address": { "entryPoint": 5035, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_t_address_to_t_address_fromStack": { "entryPoint": 6255, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_fromStack": { "entryPoint": 5295, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_bool_to_t_bool": { "entryPoint": 5120, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e_to_t_string_memory_ptr_fromStack": { "entryPoint": 6528, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "abi_encode_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f_to_t_string_memory_ptr_fromStack": { "entryPoint": 6188, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack": { "entryPoint": 6080, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "abi_encode_t_struct$_NFT_$3033_memory_ptr_to_t_struct$_NFT_$3033_memory_ptr": { "entryPoint": 5135, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_t_uint256_to_t_uint256": { "entryPoint": 5060, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_t_uint256_to_t_uint256_fromStack": { "entryPoint": 5423, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": { "entryPoint": 6690, "id": null, "parameterSlots": 4, "returnSlots": 1 }, "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": { "entryPoint": 6270, "id": null, "parameterSlots": 4, "returnSlots": 1 }, "abi_encode_tuple_t_address_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed": { "entryPoint": 6745, "id": null, "parameterSlots": 6, "returnSlots": 1 }, "abi_encode_tuple_t_address_t_uint256_t_address_t_address_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed": { "entryPoint": 6366, "id": null, "parameterSlots": 6, "returnSlots": 1 }, "abi_encode_tuple_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr__fromStack_reversed": { "entryPoint": 5389, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_tuple_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e__to_t_string_memory_ptr__fromStack_reversed": { "entryPoint": 6563, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "abi_encode_tuple_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f__to_t_string_memory_ptr__fromStack_reversed": { "entryPoint": 6223, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed": { "entryPoint": 6115, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": { "entryPoint": 5438, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "allocate_unbounded": { "entryPoint": null, "id": null, "parameterSlots": 0, "returnSlots": 1 }, "array_dataslot_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr": { "entryPoint": 4969, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_length_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr": { "entryPoint": 4941, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_nextElement_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr": { "entryPoint": 5282, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_storeLengthForEncoding_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_fromStack": { "entryPoint": 4952, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": { "entryPoint": 6022, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "checked_add_t_uint256": { "entryPoint": 5851, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "checked_sub_t_uint256": { "entryPoint": 5752, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "cleanup_t_address": { "entryPoint": 5017, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_address_payable": { "entryPoint": 5075, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_bool": { "entryPoint": 5108, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_uint160": { "entryPoint": 4985, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_uint256": { "entryPoint": 5050, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "convert_t_address_payable_to_t_address": { "entryPoint": 6657, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "convert_t_uint160_to_t_address": { "entryPoint": 6639, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "convert_t_uint160_to_t_uint160": { "entryPoint": 6605, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "decrement_t_uint256": { "entryPoint": 6325, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "identity": { "entryPoint": 6595, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "increment_t_uint256": { "entryPoint": 5950, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "panic_error_0x11": { "entryPoint": 5705, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "panic_error_0x32": { "entryPoint": 5903, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "panic_error_0x41": { "entryPoint": 5804, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": { "entryPoint": null, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": { "entryPoint": 5465, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "store_literal_in_memory_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e": { "entryPoint": 6449, "id": null, "parameterSlots": 1, "returnSlots": 0 }, "store_literal_in_memory_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f": { "entryPoint": 6147, "id": null, "parameterSlots": 1, "returnSlots": 0 }, "store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9": { "entryPoint": 6039, "id": null, "parameterSlots": 1, "returnSlots": 0 }, "validator_revert_t_address": { "entryPoint": 5470, "id": null, "parameterSlots": 1, "returnSlots": 0 }, "validator_revert_t_uint256": { "entryPoint": 5514, "id": null, "parameterSlots": 1, "returnSlots": 0 } }, "generatedSources": [{ "ast": { "nodeType": "YulBlock", "src": "0:14565:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "102:40:18", "statements": [{ "nodeType": "YulAssignment", "src": "113:22:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "129:5:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "123:5:18" }, "nodeType": "YulFunctionCall", "src": "123:12:18" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "113:6:18" }] }] }, "name": "array_length_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "85:5:18", "type": "" }], "returnVariables": [{ "name": "length", "nodeType": "YulTypedName", "src": "95:6:18", "type": "" }], "src": "7:135:18" }, { "body": { "nodeType": "YulBlock", "src": "280:73:18", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "297:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "302:6:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "290:6:18" }, "nodeType": "YulFunctionCall", "src": "290:19:18" }, "nodeType": "YulExpressionStatement", "src": "290:19:18" }, { "nodeType": "YulAssignment", "src": "318:29:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "337:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "342:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "333:3:18" }, "nodeType": "YulFunctionCall", "src": "333:14:18" }, "variableNames": [{ "name": "updated_pos", "nodeType": "YulIdentifier", "src": "318:11:18" }] }] }, "name": "array_storeLengthForEncoding_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "252:3:18", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "257:6:18", "type": "" }], "returnVariables": [{ "name": "updated_pos", "nodeType": "YulTypedName", "src": "268:11:18", "type": "" }], "src": "148:205:18" }, { "body": { "nodeType": "YulBlock", "src": "452:60:18", "statements": [{ "nodeType": "YulAssignment", "src": "462:11:18", "value": { "name": "ptr", "nodeType": "YulIdentifier", "src": "470:3:18" }, "variableNames": [{ "name": "data", "nodeType": "YulIdentifier", "src": "462:4:18" }] }, { "nodeType": "YulAssignment", "src": "483:22:18", "value": { "arguments": [{ "name": "ptr", "nodeType": "YulIdentifier", "src": "495:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "500:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "491:3:18" }, "nodeType": "YulFunctionCall", "src": "491:14:18" }, "variableNames": [{ "name": "data", "nodeType": "YulIdentifier", "src": "483:4:18" }] }] }, "name": "array_dataslot_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "ptr", "nodeType": "YulTypedName", "src": "439:3:18", "type": "" }], "returnVariables": [{ "name": "data", "nodeType": "YulTypedName", "src": "447:4:18", "type": "" }], "src": "359:153:18" }, { "body": { "nodeType": "YulBlock", "src": "563:81:18", "statements": [{ "nodeType": "YulAssignment", "src": "573:65:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "588:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "595:42:18", "type": "", "value": "0xffffffffffffffffffffffffffffffffffffffff" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "584:3:18" }, "nodeType": "YulFunctionCall", "src": "584:54:18" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "573:7:18" }] }] }, "name": "cleanup_t_uint160", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "545:5:18", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "555:7:18", "type": "" }], "src": "518:126:18" }, { "body": { "nodeType": "YulBlock", "src": "695:51:18", "statements": [{ "nodeType": "YulAssignment", "src": "705:35:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "734:5:18" }], "functionName": { "name": "cleanup_t_uint160", "nodeType": "YulIdentifier", "src": "716:17:18" }, "nodeType": "YulFunctionCall", "src": "716:24:18" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "705:7:18" }] }] }, "name": "cleanup_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "677:5:18", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "687:7:18", "type": "" }], "src": "650:96:18" }, { "body": { "nodeType": "YulBlock", "src": "807:53:18", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "824:3:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "847:5:18" }], "functionName": { "name": "cleanup_t_address", "nodeType": "YulIdentifier", "src": "829:17:18" }, "nodeType": "YulFunctionCall", "src": "829:24:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "817:6:18" }, "nodeType": "YulFunctionCall", "src": "817:37:18" }, "nodeType": "YulExpressionStatement", "src": "817:37:18" }] }, "name": "abi_encode_t_address_to_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "795:5:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "802:3:18", "type": "" }], "src": "752:108:18" }, { "body": { "nodeType": "YulBlock", "src": "911:32:18", "statements": [{ "nodeType": "YulAssignment", "src": "921:16:18", "value": { "name": "value", "nodeType": "YulIdentifier", "src": "932:5:18" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "921:7:18" }] }] }, "name": "cleanup_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "893:5:18", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "903:7:18", "type": "" }], "src": "866:77:18" }, { "body": { "nodeType": "YulBlock", "src": "1004:53:18", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "1021:3:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1044:5:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "1026:17:18" }, "nodeType": "YulFunctionCall", "src": "1026:24:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1014:6:18" }, "nodeType": "YulFunctionCall", "src": "1014:37:18" }, "nodeType": "YulExpressionStatement", "src": "1014:37:18" }] }, "name": "abi_encode_t_uint256_to_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "992:5:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "999:3:18", "type": "" }], "src": "949:108:18" }, { "body": { "nodeType": "YulBlock", "src": "1116:51:18", "statements": [{ "nodeType": "YulAssignment", "src": "1126:35:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1155:5:18" }], "functionName": { "name": "cleanup_t_uint160", "nodeType": "YulIdentifier", "src": "1137:17:18" }, "nodeType": "YulFunctionCall", "src": "1137:24:18" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "1126:7:18" }] }] }, "name": "cleanup_t_address_payable", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "1098:5:18", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "1108:7:18", "type": "" }], "src": "1063:104:18" }, { "body": { "nodeType": "YulBlock", "src": "1244:61:18", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "1261:3:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1292:5:18" }], "functionName": { "name": "cleanup_t_address_payable", "nodeType": "YulIdentifier", "src": "1266:25:18" }, "nodeType": "YulFunctionCall", "src": "1266:32:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1254:6:18" }, "nodeType": "YulFunctionCall", "src": "1254:45:18" }, "nodeType": "YulExpressionStatement", "src": "1254:45:18" }] }, "name": "abi_encode_t_address_payable_to_t_address_payable", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "1232:5:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "1239:3:18", "type": "" }], "src": "1173:132:18" }, { "body": { "nodeType": "YulBlock", "src": "1353:48:18", "statements": [{ "nodeType": "YulAssignment", "src": "1363:32:18", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1388:5:18" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "1381:6:18" }, "nodeType": "YulFunctionCall", "src": "1381:13:18" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "1374:6:18" }, "nodeType": "YulFunctionCall", "src": "1374:21:18" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "1363:7:18" }] }] }, "name": "cleanup_t_bool", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "1335:5:18", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "1345:7:18", "type": "" }], "src": "1311:90:18" }, { "body": { "nodeType": "YulBlock", "src": "1456:50:18", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "1473:3:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1493:5:18" }], "functionName": { "name": "cleanup_t_bool", "nodeType": "YulIdentifier", "src": "1478:14:18" }, "nodeType": "YulFunctionCall", "src": "1478:21:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1466:6:18" }, "nodeType": "YulFunctionCall", "src": "1466:34:18" }, "nodeType": "YulExpressionStatement", "src": "1466:34:18" }] }, "name": "abi_encode_t_bool_to_t_bool", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "1444:5:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "1451:3:18", "type": "" }], "src": "1407:99:18" }, { "body": { "nodeType": "YulBlock", "src": "1672:1129:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "1682:26:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "1698:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1703:4:18", "type": "", "value": "0xc0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1694:3:18" }, "nodeType": "YulFunctionCall", "src": "1694:14:18" }, "variables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "1686:4:18", "type": "" }] }, { "nodeType": "YulBlock", "src": "1718:171:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "1760:43:18", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1790:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1797:4:18", "type": "", "value": "0x00" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1786:3:18" }, "nodeType": "YulFunctionCall", "src": "1786:16:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "1780:5:18" }, "nodeType": "YulFunctionCall", "src": "1780:23:18" }, "variables": [{ "name": "memberValue0", "nodeType": "YulTypedName", "src": "1764:12:18", "type": "" }] }, { "expression": { "arguments": [{ "name": "memberValue0", "nodeType": "YulIdentifier", "src": "1850:12:18" }, { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "1868:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1873:4:18", "type": "", "value": "0x00" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1864:3:18" }, "nodeType": "YulFunctionCall", "src": "1864:14:18" }], "functionName": { "name": "abi_encode_t_address_to_t_address", "nodeType": "YulIdentifier", "src": "1816:33:18" }, "nodeType": "YulFunctionCall", "src": "1816:63:18" }, "nodeType": "YulExpressionStatement", "src": "1816:63:18" }] }, { "nodeType": "YulBlock", "src": "1899:167:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "1937:43:18", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1967:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1974:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1963:3:18" }, "nodeType": "YulFunctionCall", "src": "1963:16:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "1957:5:18" }, "nodeType": "YulFunctionCall", "src": "1957:23:18" }, "variables": [{ "name": "memberValue0", "nodeType": "YulTypedName", "src": "1941:12:18", "type": "" }] }, { "expression": { "arguments": [{ "name": "memberValue0", "nodeType": "YulIdentifier", "src": "2027:12:18" }, { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2045:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2050:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2041:3:18" }, "nodeType": "YulFunctionCall", "src": "2041:14:18" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256", "nodeType": "YulIdentifier", "src": "1993:33:18" }, "nodeType": "YulFunctionCall", "src": "1993:63:18" }, "nodeType": "YulExpressionStatement", "src": "1993:63:18" }] }, { "nodeType": "YulBlock", "src": "2076:182:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "2113:43:18", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2143:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2150:4:18", "type": "", "value": "0x40" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2139:3:18" }, "nodeType": "YulFunctionCall", "src": "2139:16:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "2133:5:18" }, "nodeType": "YulFunctionCall", "src": "2133:23:18" }, "variables": [{ "name": "memberValue0", "nodeType": "YulTypedName", "src": "2117:12:18", "type": "" }] }, { "expression": { "arguments": [{ "name": "memberValue0", "nodeType": "YulIdentifier", "src": "2219:12:18" }, { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2237:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2242:4:18", "type": "", "value": "0x40" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2233:3:18" }, "nodeType": "YulFunctionCall", "src": "2233:14:18" }], "functionName": { "name": "abi_encode_t_address_payable_to_t_address_payable", "nodeType": "YulIdentifier", "src": "2169:49:18" }, "nodeType": "YulFunctionCall", "src": "2169:79:18" }, "nodeType": "YulExpressionStatement", "src": "2169:79:18" }] }, { "nodeType": "YulBlock", "src": "2268:181:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "2304:43:18", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2334:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2341:4:18", "type": "", "value": "0x60" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2330:3:18" }, "nodeType": "YulFunctionCall", "src": "2330:16:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "2324:5:18" }, "nodeType": "YulFunctionCall", "src": "2324:23:18" }, "variables": [{ "name": "memberValue0", "nodeType": "YulTypedName", "src": "2308:12:18", "type": "" }] }, { "expression": { "arguments": [{ "name": "memberValue0", "nodeType": "YulIdentifier", "src": "2410:12:18" }, { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2428:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2433:4:18", "type": "", "value": "0x60" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2424:3:18" }, "nodeType": "YulFunctionCall", "src": "2424:14:18" }], "functionName": { "name": "abi_encode_t_address_payable_to_t_address_payable", "nodeType": "YulIdentifier", "src": "2360:49:18" }, "nodeType": "YulFunctionCall", "src": "2360:79:18" }, "nodeType": "YulExpressionStatement", "src": "2360:79:18" }] }, { "nodeType": "YulBlock", "src": "2459:165:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "2495:43:18", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2525:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2532:4:18", "type": "", "value": "0x80" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2521:3:18" }, "nodeType": "YulFunctionCall", "src": "2521:16:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "2515:5:18" }, "nodeType": "YulFunctionCall", "src": "2515:23:18" }, "variables": [{ "name": "memberValue0", "nodeType": "YulTypedName", "src": "2499:12:18", "type": "" }] }, { "expression": { "arguments": [{ "name": "memberValue0", "nodeType": "YulIdentifier", "src": "2585:12:18" }, { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2603:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2608:4:18", "type": "", "value": "0x80" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2599:3:18" }, "nodeType": "YulFunctionCall", "src": "2599:14:18" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256", "nodeType": "YulIdentifier", "src": "2551:33:18" }, "nodeType": "YulFunctionCall", "src": "2551:63:18" }, "nodeType": "YulExpressionStatement", "src": "2551:63:18" }] }, { "nodeType": "YulBlock", "src": "2634:160:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "2671:43:18", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2701:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2708:4:18", "type": "", "value": "0xa0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2697:3:18" }, "nodeType": "YulFunctionCall", "src": "2697:16:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "2691:5:18" }, "nodeType": "YulFunctionCall", "src": "2691:23:18" }, "variables": [{ "name": "memberValue0", "nodeType": "YulTypedName", "src": "2675:12:18", "type": "" }] }, { "expression": { "arguments": [{ "name": "memberValue0", "nodeType": "YulIdentifier", "src": "2755:12:18" }, { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2773:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2778:4:18", "type": "", "value": "0xa0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2769:3:18" }, "nodeType": "YulFunctionCall", "src": "2769:14:18" }], "functionName": { "name": "abi_encode_t_bool_to_t_bool", "nodeType": "YulIdentifier", "src": "2727:27:18" }, "nodeType": "YulFunctionCall", "src": "2727:57:18" }, "nodeType": "YulExpressionStatement", "src": "2727:57:18" }] }] }, "name": "abi_encode_t_struct$_NFT_$3033_memory_ptr_to_t_struct$_NFT_$3033_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "1659:5:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "1666:3:18", "type": "" }], "src": "1574:1227:18" }, { "body": { "nodeType": "YulBlock", "src": "2929:141:18", "statements": [{ "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "3015:6:18" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "3023:3:18" }], "functionName": { "name": "abi_encode_t_struct$_NFT_$3033_memory_ptr_to_t_struct$_NFT_$3033_memory_ptr", "nodeType": "YulIdentifier", "src": "2939:75:18" }, "nodeType": "YulFunctionCall", "src": "2939:88:18" }, "nodeType": "YulExpressionStatement", "src": "2939:88:18" }, { "nodeType": "YulAssignment", "src": "3036:28:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "3054:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3059:4:18", "type": "", "value": "0xc0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3050:3:18" }, "nodeType": "YulFunctionCall", "src": "3050:14:18" }, "variableNames": [{ "name": "updatedPos", "nodeType": "YulIdentifier", "src": "3036:10:18" }] }] }, "name": "abi_encodeUpdatedPos_t_struct$_NFT_$3033_memory_ptr_to_t_struct$_NFT_$3033_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value0", "nodeType": "YulTypedName", "src": "2902:6:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "2910:3:18", "type": "" }], "returnVariables": [{ "name": "updatedPos", "nodeType": "YulTypedName", "src": "2918:10:18", "type": "" }], "src": "2807:263:18" }, { "body": { "nodeType": "YulBlock", "src": "3172:38:18", "statements": [{ "nodeType": "YulAssignment", "src": "3182:22:18", "value": { "arguments": [{ "name": "ptr", "nodeType": "YulIdentifier", "src": "3194:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3199:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3190:3:18" }, "nodeType": "YulFunctionCall", "src": "3190:14:18" }, "variableNames": [{ "name": "next", "nodeType": "YulIdentifier", "src": "3182:4:18" }] }] }, "name": "array_nextElement_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "ptr", "nodeType": "YulTypedName", "src": "3159:3:18", "type": "" }], "returnVariables": [{ "name": "next", "nodeType": "YulTypedName", "src": "3167:4:18", "type": "" }], "src": "3076:134:18" }, { "body": { "nodeType": "YulBlock", "src": "3448:734:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "3458:89:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3541:5:18" }], "functionName": { "name": "array_length_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "nodeType": "YulIdentifier", "src": "3472:68:18" }, "nodeType": "YulFunctionCall", "src": "3472:75:18" }, "variables": [{ "name": "length", "nodeType": "YulTypedName", "src": "3462:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "3556:114:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "3658:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "3663:6:18" }], "functionName": { "name": "array_storeLengthForEncoding_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "3563:94:18" }, "nodeType": "YulFunctionCall", "src": "3563:107:18" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "3556:3:18" }] }, { "nodeType": "YulVariableDeclaration", "src": "3679:92:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3765:5:18" }], "functionName": { "name": "array_dataslot_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "nodeType": "YulIdentifier", "src": "3694:70:18" }, "nodeType": "YulFunctionCall", "src": "3694:77:18" }, "variables": [{ "name": "baseRef", "nodeType": "YulTypedName", "src": "3683:7:18", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "3780:21:18", "value": { "name": "baseRef", "nodeType": "YulIdentifier", "src": "3794:7:18" }, "variables": [{ "name": "srcPtr", "nodeType": "YulTypedName", "src": "3784:6:18", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "3870:287:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "3884:34:18", "value": { "arguments": [{ "name": "srcPtr", "nodeType": "YulIdentifier", "src": "3911:6:18" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "3905:5:18" }, "nodeType": "YulFunctionCall", "src": "3905:13:18" }, "variables": [{ "name": "elementValue0", "nodeType": "YulTypedName", "src": "3888:13:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "3931:112:18", "value": { "arguments": [{ "name": "elementValue0", "nodeType": "YulIdentifier", "src": "4024:13:18" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "4039:3:18" }], "functionName": { "name": "abi_encodeUpdatedPos_t_struct$_NFT_$3033_memory_ptr_to_t_struct$_NFT_$3033_memory_ptr", "nodeType": "YulIdentifier", "src": "3938:85:18" }, "nodeType": "YulFunctionCall", "src": "3938:105:18" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "3931:3:18" }] }, { "nodeType": "YulAssignment", "src": "4056:91:18", "value": { "arguments": [{ "name": "srcPtr", "nodeType": "YulIdentifier", "src": "4140:6:18" }], "functionName": { "name": "array_nextElement_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr", "nodeType": "YulIdentifier", "src": "4066:73:18" }, "nodeType": "YulFunctionCall", "src": "4066:81:18" }, "variableNames": [{ "name": "srcPtr", "nodeType": "YulIdentifier", "src": "4056:6:18" }] }] }, "condition": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "3832:1:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "3835:6:18" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "3829:2:18" }, "nodeType": "YulFunctionCall", "src": "3829:13:18" }, "nodeType": "YulForLoop", "post": { "nodeType": "YulBlock", "src": "3843:18:18", "statements": [{ "nodeType": "YulAssignment", "src": "3845:14:18", "value": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "3854:1:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3857:1:18", "type": "", "value": "1" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3850:3:18" }, "nodeType": "YulFunctionCall", "src": "3850:9:18" }, "variableNames": [{ "name": "i", "nodeType": "YulIdentifier", "src": "3845:1:18" }] }] }, "pre": { "nodeType": "YulBlock", "src": "3814:14:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "3816:10:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "3825:1:18", "type": "", "value": "0" }, "variables": [{ "name": "i", "nodeType": "YulTypedName", "src": "3820:1:18", "type": "" }] }] }, "src": "3810:347:18" }, { "nodeType": "YulAssignment", "src": "4166:10:18", "value": { "name": "pos", "nodeType": "YulIdentifier", "src": "4173:3:18" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "4166:3:18" }] }] }, "name": "abi_encode_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "3427:5:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "3434:3:18", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "3443:3:18", "type": "" }], "src": "3282:900:18" }, { "body": { "nodeType": "YulBlock", "src": "4378:267:18", "statements": [{ "nodeType": "YulAssignment", "src": "4388:26:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "4400:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4411:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4396:3:18" }, "nodeType": "YulFunctionCall", "src": "4396:18:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "4388:4:18" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "4435:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4446:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4431:3:18" }, "nodeType": "YulFunctionCall", "src": "4431:17:18" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "4454:4:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "4460:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "4450:3:18" }, "nodeType": "YulFunctionCall", "src": "4450:20:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "4424:6:18" }, "nodeType": "YulFunctionCall", "src": "4424:47:18" }, "nodeType": "YulExpressionStatement", "src": "4424:47:18" }, { "nodeType": "YulAssignment", "src": "4480:158:18", "value": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "4624:6:18" }, { "name": "tail", "nodeType": "YulIdentifier", "src": "4633:4:18" }], "functionName": { "name": "abi_encode_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "4488:135:18" }, "nodeType": "YulFunctionCall", "src": "4488:150:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "4480:4:18" }] }] }, "name": "abi_encode_tuple_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "4350:9:18", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "4362:6:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "4373:4:18", "type": "" }], "src": "4188:457:18" }, { "body": { "nodeType": "YulBlock", "src": "4716:53:18", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "4733:3:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "4756:5:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "4738:17:18" }, "nodeType": "YulFunctionCall", "src": "4738:24:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "4726:6:18" }, "nodeType": "YulFunctionCall", "src": "4726:37:18" }, "nodeType": "YulExpressionStatement", "src": "4726:37:18" }] }, "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "4704:5:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "4711:3:18", "type": "" }], "src": "4651:118:18" }, { "body": { "nodeType": "YulBlock", "src": "4873:124:18", "statements": [{ "nodeType": "YulAssignment", "src": "4883:26:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "4895:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4906:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4891:3:18" }, "nodeType": "YulFunctionCall", "src": "4891:18:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "4883:4:18" }] }, { "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "4963:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "4976:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4987:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4972:3:18" }, "nodeType": "YulFunctionCall", "src": "4972:17:18" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "4919:43:18" }, "nodeType": "YulFunctionCall", "src": "4919:71:18" }, "nodeType": "YulExpressionStatement", "src": "4919:71:18" }] }, "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "4845:9:18", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "4857:6:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "4868:4:18", "type": "" }], "src": "4775:222:18" }, { "body": { "nodeType": "YulBlock", "src": "5043:35:18", "statements": [{ "nodeType": "YulAssignment", "src": "5053:19:18", "value": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "5069:2:18", "type": "", "value": "64" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "5063:5:18" }, "nodeType": "YulFunctionCall", "src": "5063:9:18" }, "variableNames": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "5053:6:18" }] }] }, "name": "allocate_unbounded", "nodeType": "YulFunctionDefinition", "returnVariables": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "5036:6:18", "type": "" }], "src": "5003:75:18" }, { "body": { "nodeType": "YulBlock", "src": "5173:28:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "5190:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "5193:1:18", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "5183:6:18" }, "nodeType": "YulFunctionCall", "src": "5183:12:18" }, "nodeType": "YulExpressionStatement", "src": "5183:12:18" }] }, "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulFunctionDefinition", "src": "5084:117:18" }, { "body": { "nodeType": "YulBlock", "src": "5296:28:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "5313:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "5316:1:18", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "5306:6:18" }, "nodeType": "YulFunctionCall", "src": "5306:12:18" }, "nodeType": "YulExpressionStatement", "src": "5306:12:18" }] }, "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db", "nodeType": "YulFunctionDefinition", "src": "5207:117:18" }, { "body": { "nodeType": "YulBlock", "src": "5373:79:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "5430:16:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "5439:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "5442:1:18", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "5432:6:18" }, "nodeType": "YulFunctionCall", "src": "5432:12:18" }, "nodeType": "YulExpressionStatement", "src": "5432:12:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "5396:5:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "5421:5:18" }], "functionName": { "name": "cleanup_t_address", "nodeType": "YulIdentifier", "src": "5403:17:18" }, "nodeType": "YulFunctionCall", "src": "5403:24:18" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "5393:2:18" }, "nodeType": "YulFunctionCall", "src": "5393:35:18" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "5386:6:18" }, "nodeType": "YulFunctionCall", "src": "5386:43:18" }, "nodeType": "YulIf", "src": "5383:63:18" }] }, "name": "validator_revert_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "5366:5:18", "type": "" }], "src": "5330:122:18" }, { "body": { "nodeType": "YulBlock", "src": "5510:87:18", "statements": [{ "nodeType": "YulAssignment", "src": "5520:29:18", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "5542:6:18" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "5529:12:18" }, "nodeType": "YulFunctionCall", "src": "5529:20:18" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "5520:5:18" }] }, { "expression": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "5585:5:18" }], "functionName": { "name": "validator_revert_t_address", "nodeType": "YulIdentifier", "src": "5558:26:18" }, "nodeType": "YulFunctionCall", "src": "5558:33:18" }, "nodeType": "YulExpressionStatement", "src": "5558:33:18" }] }, "name": "abi_decode_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "5488:6:18", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "5496:3:18", "type": "" }], "returnVariables": [{ "name": "value", "nodeType": "YulTypedName", "src": "5504:5:18", "type": "" }], "src": "5458:139:18" }, { "body": { "nodeType": "YulBlock", "src": "5646:79:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "5703:16:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "5712:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "5715:1:18", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "5705:6:18" }, "nodeType": "YulFunctionCall", "src": "5705:12:18" }, "nodeType": "YulExpressionStatement", "src": "5705:12:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "5669:5:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "5694:5:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "5676:17:18" }, "nodeType": "YulFunctionCall", "src": "5676:24:18" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "5666:2:18" }, "nodeType": "YulFunctionCall", "src": "5666:35:18" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "5659:6:18" }, "nodeType": "YulFunctionCall", "src": "5659:43:18" }, "nodeType": "YulIf", "src": "5656:63:18" }] }, "name": "validator_revert_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "5639:5:18", "type": "" }], "src": "5603:122:18" }, { "body": { "nodeType": "YulBlock", "src": "5783:87:18", "statements": [{ "nodeType": "YulAssignment", "src": "5793:29:18", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "5815:6:18" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "5802:12:18" }, "nodeType": "YulFunctionCall", "src": "5802:20:18" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "5793:5:18" }] }, { "expression": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "5858:5:18" }], "functionName": { "name": "validator_revert_t_uint256", "nodeType": "YulIdentifier", "src": "5831:26:18" }, "nodeType": "YulFunctionCall", "src": "5831:33:18" }, "nodeType": "YulExpressionStatement", "src": "5831:33:18" }] }, "name": "abi_decode_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "5761:6:18", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "5769:3:18", "type": "" }], "returnVariables": [{ "name": "value", "nodeType": "YulTypedName", "src": "5777:5:18", "type": "" }], "src": "5731:139:18" }, { "body": { "nodeType": "YulBlock", "src": "5976:519:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "6022:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "6024:77:18" }, "nodeType": "YulFunctionCall", "src": "6024:79:18" }, "nodeType": "YulExpressionStatement", "src": "6024:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "5997:7:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "6006:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "5993:3:18" }, "nodeType": "YulFunctionCall", "src": "5993:23:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6018:2:18", "type": "", "value": "96" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "5989:3:18" }, "nodeType": "YulFunctionCall", "src": "5989:32:18" }, "nodeType": "YulIf", "src": "5986:119:18" }, { "nodeType": "YulBlock", "src": "6115:117:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "6130:15:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "6144:1:18", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "6134:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "6159:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "6194:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "6205:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6190:3:18" }, "nodeType": "YulFunctionCall", "src": "6190:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "6214:7:18" }], "functionName": { "name": "abi_decode_t_address", "nodeType": "YulIdentifier", "src": "6169:20:18" }, "nodeType": "YulFunctionCall", "src": "6169:53:18" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "6159:6:18" }] }] }, { "nodeType": "YulBlock", "src": "6242:118:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "6257:16:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "6271:2:18", "type": "", "value": "32" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "6261:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "6287:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "6322:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "6333:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6318:3:18" }, "nodeType": "YulFunctionCall", "src": "6318:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "6342:7:18" }], "functionName": { "name": "abi_decode_t_uint256", "nodeType": "YulIdentifier", "src": "6297:20:18" }, "nodeType": "YulFunctionCall", "src": "6297:53:18" }, "variableNames": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "6287:6:18" }] }] }, { "nodeType": "YulBlock", "src": "6370:118:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "6385:16:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "6399:2:18", "type": "", "value": "64" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "6389:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "6415:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "6450:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "6461:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6446:3:18" }, "nodeType": "YulFunctionCall", "src": "6446:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "6470:7:18" }], "functionName": { "name": "abi_decode_t_uint256", "nodeType": "YulIdentifier", "src": "6425:20:18" }, "nodeType": "YulFunctionCall", "src": "6425:53:18" }, "variableNames": [{ "name": "value2", "nodeType": "YulIdentifier", "src": "6415:6:18" }] }] }] }, "name": "abi_decode_tuple_t_addresst_uint256t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "5930:9:18", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "5941:7:18", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "5953:6:18", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "5961:6:18", "type": "" }, { "name": "value2", "nodeType": "YulTypedName", "src": "5969:6:18", "type": "" }], "src": "5876:619:18" }, { "body": { "nodeType": "YulBlock", "src": "6584:391:18", "statements": [{ "body": { "nodeType": "YulBlock", "src": "6630:83:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "6632:77:18" }, "nodeType": "YulFunctionCall", "src": "6632:79:18" }, "nodeType": "YulExpressionStatement", "src": "6632:79:18" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "6605:7:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "6614:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "6601:3:18" }, "nodeType": "YulFunctionCall", "src": "6601:23:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6626:2:18", "type": "", "value": "64" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "6597:3:18" }, "nodeType": "YulFunctionCall", "src": "6597:32:18" }, "nodeType": "YulIf", "src": "6594:119:18" }, { "nodeType": "YulBlock", "src": "6723:117:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "6738:15:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "6752:1:18", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "6742:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "6767:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "6802:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "6813:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6798:3:18" }, "nodeType": "YulFunctionCall", "src": "6798:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "6822:7:18" }], "functionName": { "name": "abi_decode_t_address", "nodeType": "YulIdentifier", "src": "6777:20:18" }, "nodeType": "YulFunctionCall", "src": "6777:53:18" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "6767:6:18" }] }] }, { "nodeType": "YulBlock", "src": "6850:118:18", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "6865:16:18", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "6879:2:18", "type": "", "value": "32" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "6869:6:18", "type": "" }] }, { "nodeType": "YulAssignment", "src": "6895:63:18", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "6930:9:18" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "6941:6:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6926:3:18" }, "nodeType": "YulFunctionCall", "src": "6926:22:18" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "6950:7:18" }], "functionName": { "name": "abi_decode_t_uint256", "nodeType": "YulIdentifier", "src": "6905:20:18" }, "nodeType": "YulFunctionCall", "src": "6905:53:18" }, "variableNames": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "6895:6:18" }] }] }] }, "name": "abi_decode_tuple_t_addresst_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "6546:9:18", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "6557:7:18", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "6569:6:18", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "6577:6:18", "type": "" }], "src": "6501:474:18" }, { "body": { "nodeType": "YulBlock", "src": "7009:152:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7026:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7029:77:18", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "7019:6:18" }, "nodeType": "YulFunctionCall", "src": "7019:88:18" }, "nodeType": "YulExpressionStatement", "src": "7019:88:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7123:1:18", "type": "", "value": "4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7126:4:18", "type": "", "value": "0x11" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "7116:6:18" }, "nodeType": "YulFunctionCall", "src": "7116:15:18" }, "nodeType": "YulExpressionStatement", "src": "7116:15:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7147:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7150:4:18", "type": "", "value": "0x24" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "7140:6:18" }, "nodeType": "YulFunctionCall", "src": "7140:15:18" }, "nodeType": "YulExpressionStatement", "src": "7140:15:18" }] }, "name": "panic_error_0x11", "nodeType": "YulFunctionDefinition", "src": "6981:180:18" }, { "body": { "nodeType": "YulBlock", "src": "7212:149:18", "statements": [{ "nodeType": "YulAssignment", "src": "7222:25:18", "value": { "arguments": [{ "name": "x", "nodeType": "YulIdentifier", "src": "7245:1:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "7227:17:18" }, "nodeType": "YulFunctionCall", "src": "7227:20:18" }, "variableNames": [{ "name": "x", "nodeType": "YulIdentifier", "src": "7222:1:18" }] }, { "nodeType": "YulAssignment", "src": "7256:25:18", "value": { "arguments": [{ "name": "y", "nodeType": "YulIdentifier", "src": "7279:1:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "7261:17:18" }, "nodeType": "YulFunctionCall", "src": "7261:20:18" }, "variableNames": [{ "name": "y", "nodeType": "YulIdentifier", "src": "7256:1:18" }] }, { "nodeType": "YulAssignment", "src": "7290:17:18", "value": { "arguments": [{ "name": "x", "nodeType": "YulIdentifier", "src": "7302:1:18" }, { "name": "y", "nodeType": "YulIdentifier", "src": "7305:1:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "7298:3:18" }, "nodeType": "YulFunctionCall", "src": "7298:9:18" }, "variableNames": [{ "name": "diff", "nodeType": "YulIdentifier", "src": "7290:4:18" }] }, { "body": { "nodeType": "YulBlock", "src": "7332:22:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x11", "nodeType": "YulIdentifier", "src": "7334:16:18" }, "nodeType": "YulFunctionCall", "src": "7334:18:18" }, "nodeType": "YulExpressionStatement", "src": "7334:18:18" }] }, "condition": { "arguments": [{ "name": "diff", "nodeType": "YulIdentifier", "src": "7323:4:18" }, { "name": "x", "nodeType": "YulIdentifier", "src": "7329:1:18" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "7320:2:18" }, "nodeType": "YulFunctionCall", "src": "7320:11:18" }, "nodeType": "YulIf", "src": "7317:37:18" }] }, "name": "checked_sub_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "x", "nodeType": "YulTypedName", "src": "7198:1:18", "type": "" }, { "name": "y", "nodeType": "YulTypedName", "src": "7201:1:18", "type": "" }], "returnVariables": [{ "name": "diff", "nodeType": "YulTypedName", "src": "7207:4:18", "type": "" }], "src": "7167:194:18" }, { "body": { "nodeType": "YulBlock", "src": "7395:152:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7412:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7415:77:18", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "7405:6:18" }, "nodeType": "YulFunctionCall", "src": "7405:88:18" }, "nodeType": "YulExpressionStatement", "src": "7405:88:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7509:1:18", "type": "", "value": "4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7512:4:18", "type": "", "value": "0x41" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "7502:6:18" }, "nodeType": "YulFunctionCall", "src": "7502:15:18" }, "nodeType": "YulExpressionStatement", "src": "7502:15:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7533:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7536:4:18", "type": "", "value": "0x24" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "7526:6:18" }, "nodeType": "YulFunctionCall", "src": "7526:15:18" }, "nodeType": "YulExpressionStatement", "src": "7526:15:18" }] }, "name": "panic_error_0x41", "nodeType": "YulFunctionDefinition", "src": "7367:180:18" }, { "body": { "nodeType": "YulBlock", "src": "7597:147:18", "statements": [{ "nodeType": "YulAssignment", "src": "7607:25:18", "value": { "arguments": [{ "name": "x", "nodeType": "YulIdentifier", "src": "7630:1:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "7612:17:18" }, "nodeType": "YulFunctionCall", "src": "7612:20:18" }, "variableNames": [{ "name": "x", "nodeType": "YulIdentifier", "src": "7607:1:18" }] }, { "nodeType": "YulAssignment", "src": "7641:25:18", "value": { "arguments": [{ "name": "y", "nodeType": "YulIdentifier", "src": "7664:1:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "7646:17:18" }, "nodeType": "YulFunctionCall", "src": "7646:20:18" }, "variableNames": [{ "name": "y", "nodeType": "YulIdentifier", "src": "7641:1:18" }] }, { "nodeType": "YulAssignment", "src": "7675:16:18", "value": { "arguments": [{ "name": "x", "nodeType": "YulIdentifier", "src": "7686:1:18" }, { "name": "y", "nodeType": "YulIdentifier", "src": "7689:1:18" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "7682:3:18" }, "nodeType": "YulFunctionCall", "src": "7682:9:18" }, "variableNames": [{ "name": "sum", "nodeType": "YulIdentifier", "src": "7675:3:18" }] }, { "body": { "nodeType": "YulBlock", "src": "7715:22:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x11", "nodeType": "YulIdentifier", "src": "7717:16:18" }, "nodeType": "YulFunctionCall", "src": "7717:18:18" }, "nodeType": "YulExpressionStatement", "src": "7717:18:18" }] }, "condition": { "arguments": [{ "name": "x", "nodeType": "YulIdentifier", "src": "7707:1:18" }, { "name": "sum", "nodeType": "YulIdentifier", "src": "7710:3:18" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "7704:2:18" }, "nodeType": "YulFunctionCall", "src": "7704:10:18" }, "nodeType": "YulIf", "src": "7701:36:18" }] }, "name": "checked_add_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "x", "nodeType": "YulTypedName", "src": "7584:1:18", "type": "" }, { "name": "y", "nodeType": "YulTypedName", "src": "7587:1:18", "type": "" }], "returnVariables": [{ "name": "sum", "nodeType": "YulTypedName", "src": "7593:3:18", "type": "" }], "src": "7553:191:18" }, { "body": { "nodeType": "YulBlock", "src": "7778:152:18", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7795:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7798:77:18", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "7788:6:18" }, "nodeType": "YulFunctionCall", "src": "7788:88:18" }, "nodeType": "YulExpressionStatement", "src": "7788:88:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7892:1:18", "type": "", "value": "4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7895:4:18", "type": "", "value": "0x32" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "7885:6:18" }, "nodeType": "YulFunctionCall", "src": "7885:15:18" }, "nodeType": "YulExpressionStatement", "src": "7885:15:18" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7916:1:18", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7919:4:18", "type": "", "value": "0x24" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "7909:6:18" }, "nodeType": "YulFunctionCall", "src": "7909:15:18" }, "nodeType": "YulExpressionStatement", "src": "7909:15:18" }] }, "name": "panic_error_0x32", "nodeType": "YulFunctionDefinition", "src": "7750:180:18" }, { "body": { "nodeType": "YulBlock", "src": "7979:190:18", "statements": [{ "nodeType": "YulAssignment", "src": "7989:33:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "8016:5:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "7998:17:18" }, "nodeType": "YulFunctionCall", "src": "7998:24:18" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "7989:5:18" }] }, { "body": { "nodeType": "YulBlock", "src": "8112:22:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x11", "nodeType": "YulIdentifier", "src": "8114:16:18" }, "nodeType": "YulFunctionCall", "src": "8114:18:18" }, "nodeType": "YulExpressionStatement", "src": "8114:18:18" }] }, "condition": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "8037:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8044:66:18", "type": "", "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "8034:2:18" }, "nodeType": "YulFunctionCall", "src": "8034:77:18" }, "nodeType": "YulIf", "src": "8031:103:18" }, { "nodeType": "YulAssignment", "src": "8143:20:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "8154:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8161:1:18", "type": "", "value": "1" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8150:3:18" }, "nodeType": "YulFunctionCall", "src": "8150:13:18" }, "variableNames": [{ "name": "ret", "nodeType": "YulIdentifier", "src": "8143:3:18" }] }] }, "name": "increment_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "7965:5:18", "type": "" }], "returnVariables": [{ "name": "ret", "nodeType": "YulTypedName", "src": "7975:3:18", "type": "" }], "src": "7936:233:18" }, { "body": { "nodeType": "YulBlock", "src": "8271:73:18", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "8288:3:18" }, { "name": "length", "nodeType": "YulIdentifier", "src": "8293:6:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "8281:6:18" }, "nodeType": "YulFunctionCall", "src": "8281:19:18" }, "nodeType": "YulExpressionStatement", "src": "8281:19:18" }, { "nodeType": "YulAssignment", "src": "8309:29:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "8328:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8333:4:18", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8324:3:18" }, "nodeType": "YulFunctionCall", "src": "8324:14:18" }, "variableNames": [{ "name": "updated_pos", "nodeType": "YulIdentifier", "src": "8309:11:18" }] }] }, "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "8243:3:18", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "8248:6:18", "type": "" }], "returnVariables": [{ "name": "updated_pos", "nodeType": "YulTypedName", "src": "8259:11:18", "type": "" }], "src": "8175:169:18" }, { "body": { "nodeType": "YulBlock", "src": "8456:72:18", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "8478:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8486:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8474:3:18" }, "nodeType": "YulFunctionCall", "src": "8474:14:18" }, { "hexValue": "5072696365206d757374206265206174206c65617374203120776569", "kind": "string", "nodeType": "YulLiteral", "src": "8490:30:18", "type": "", "value": "Price must be at least 1 wei" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "8467:6:18" }, "nodeType": "YulFunctionCall", "src": "8467:54:18" }, "nodeType": "YulExpressionStatement", "src": "8467:54:18" }] }, "name": "store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "8448:6:18", "type": "" }], "src": "8350:178:18" }, { "body": { "nodeType": "YulBlock", "src": "8680:220:18", "statements": [{ "nodeType": "YulAssignment", "src": "8690:74:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "8756:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8761:2:18", "type": "", "value": "28" }], "functionName": { "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "8697:58:18" }, "nodeType": "YulFunctionCall", "src": "8697:67:18" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "8690:3:18" }] }, { "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "8862:3:18" }], "functionName": { "name": "store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9", "nodeType": "YulIdentifier", "src": "8773:88:18" }, "nodeType": "YulFunctionCall", "src": "8773:93:18" }, "nodeType": "YulExpressionStatement", "src": "8773:93:18" }, { "nodeType": "YulAssignment", "src": "8875:19:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "8886:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8891:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8882:3:18" }, "nodeType": "YulFunctionCall", "src": "8882:12:18" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "8875:3:18" }] }] }, "name": "abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "8668:3:18", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "8676:3:18", "type": "" }], "src": "8534:366:18" }, { "body": { "nodeType": "YulBlock", "src": "9077:248:18", "statements": [{ "nodeType": "YulAssignment", "src": "9087:26:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "9099:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9110:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "9095:3:18" }, "nodeType": "YulFunctionCall", "src": "9095:18:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "9087:4:18" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "9134:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9145:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "9130:3:18" }, "nodeType": "YulFunctionCall", "src": "9130:17:18" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "9153:4:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "9159:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "9149:3:18" }, "nodeType": "YulFunctionCall", "src": "9149:20:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "9123:6:18" }, "nodeType": "YulFunctionCall", "src": "9123:47:18" }, "nodeType": "YulExpressionStatement", "src": "9123:47:18" }, { "nodeType": "YulAssignment", "src": "9179:139:18", "value": { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "9313:4:18" }], "functionName": { "name": "abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "9187:124:18" }, "nodeType": "YulFunctionCall", "src": "9187:131:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "9179:4:18" }] }] }, "name": "abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "9057:9:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "9072:4:18", "type": "" }], "src": "8906:419:18" }, { "body": { "nodeType": "YulBlock", "src": "9437:76:18", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "9459:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9467:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "9455:3:18" }, "nodeType": "YulFunctionCall", "src": "9455:14:18" }, { "hexValue": "4e6f7420656e6f75676820657468657220666f72206c697374696e6720666565", "kind": "string", "nodeType": "YulLiteral", "src": "9471:34:18", "type": "", "value": "Not enough ether for listing fee" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "9448:6:18" }, "nodeType": "YulFunctionCall", "src": "9448:58:18" }, "nodeType": "YulExpressionStatement", "src": "9448:58:18" }] }, "name": "store_literal_in_memory_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "9429:6:18", "type": "" }], "src": "9331:182:18" }, { "body": { "nodeType": "YulBlock", "src": "9665:220:18", "statements": [{ "nodeType": "YulAssignment", "src": "9675:74:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "9741:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9746:2:18", "type": "", "value": "32" }], "functionName": { "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "9682:58:18" }, "nodeType": "YulFunctionCall", "src": "9682:67:18" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "9675:3:18" }] }, { "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "9847:3:18" }], "functionName": { "name": "store_literal_in_memory_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f", "nodeType": "YulIdentifier", "src": "9758:88:18" }, "nodeType": "YulFunctionCall", "src": "9758:93:18" }, "nodeType": "YulExpressionStatement", "src": "9758:93:18" }, { "nodeType": "YulAssignment", "src": "9860:19:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "9871:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9876:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "9867:3:18" }, "nodeType": "YulFunctionCall", "src": "9867:12:18" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "9860:3:18" }] }] }, "name": "abi_encode_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f_to_t_string_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "9653:3:18", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "9661:3:18", "type": "" }], "src": "9519:366:18" }, { "body": { "nodeType": "YulBlock", "src": "10062:248:18", "statements": [{ "nodeType": "YulAssignment", "src": "10072:26:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "10084:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10095:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "10080:3:18" }, "nodeType": "YulFunctionCall", "src": "10080:18:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "10072:4:18" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "10119:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10130:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "10115:3:18" }, "nodeType": "YulFunctionCall", "src": "10115:17:18" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "10138:4:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "10144:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "10134:3:18" }, "nodeType": "YulFunctionCall", "src": "10134:20:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "10108:6:18" }, "nodeType": "YulFunctionCall", "src": "10108:47:18" }, "nodeType": "YulExpressionStatement", "src": "10108:47:18" }, { "nodeType": "YulAssignment", "src": "10164:139:18", "value": { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "10298:4:18" }], "functionName": { "name": "abi_encode_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f_to_t_string_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "10172:124:18" }, "nodeType": "YulFunctionCall", "src": "10172:131:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "10164:4:18" }] }] }, "name": "abi_encode_tuple_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f__to_t_string_memory_ptr__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "10042:9:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "10057:4:18", "type": "" }], "src": "9891:419:18" }, { "body": { "nodeType": "YulBlock", "src": "10381:53:18", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "10398:3:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "10421:5:18" }], "functionName": { "name": "cleanup_t_address", "nodeType": "YulIdentifier", "src": "10403:17:18" }, "nodeType": "YulFunctionCall", "src": "10403:24:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "10391:6:18" }, "nodeType": "YulFunctionCall", "src": "10391:37:18" }, "nodeType": "YulExpressionStatement", "src": "10391:37:18" }] }, "name": "abi_encode_t_address_to_t_address_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "10369:5:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "10376:3:18", "type": "" }], "src": "10316:118:18" }, { "body": { "nodeType": "YulBlock", "src": "10594:288:18", "statements": [{ "nodeType": "YulAssignment", "src": "10604:26:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "10616:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10627:2:18", "type": "", "value": "96" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "10612:3:18" }, "nodeType": "YulFunctionCall", "src": "10612:18:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "10604:4:18" }] }, { "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "10684:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "10697:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10708:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "10693:3:18" }, "nodeType": "YulFunctionCall", "src": "10693:17:18" }], "functionName": { "name": "abi_encode_t_address_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "10640:43:18" }, "nodeType": "YulFunctionCall", "src": "10640:71:18" }, "nodeType": "YulExpressionStatement", "src": "10640:71:18" }, { "expression": { "arguments": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "10765:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "10778:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10789:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "10774:3:18" }, "nodeType": "YulFunctionCall", "src": "10774:18:18" }], "functionName": { "name": "abi_encode_t_address_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "10721:43:18" }, "nodeType": "YulFunctionCall", "src": "10721:72:18" }, "nodeType": "YulExpressionStatement", "src": "10721:72:18" }, { "expression": { "arguments": [{ "name": "value2", "nodeType": "YulIdentifier", "src": "10847:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "10860:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10871:2:18", "type": "", "value": "64" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "10856:3:18" }, "nodeType": "YulFunctionCall", "src": "10856:18:18" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "10803:43:18" }, "nodeType": "YulFunctionCall", "src": "10803:72:18" }, "nodeType": "YulExpressionStatement", "src": "10803:72:18" }] }, "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "10550:9:18", "type": "" }, { "name": "value2", "nodeType": "YulTypedName", "src": "10562:6:18", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "10570:6:18", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "10578:6:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "10589:4:18", "type": "" }], "src": "10440:442:18" }, { "body": { "nodeType": "YulBlock", "src": "10931:128:18", "statements": [{ "nodeType": "YulAssignment", "src": "10941:33:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "10968:5:18" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "10950:17:18" }, "nodeType": "YulFunctionCall", "src": "10950:24:18" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "10941:5:18" }] }, { "body": { "nodeType": "YulBlock", "src": "11002:22:18", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x11", "nodeType": "YulIdentifier", "src": "11004:16:18" }, "nodeType": "YulFunctionCall", "src": "11004:18:18" }, "nodeType": "YulExpressionStatement", "src": "11004:18:18" }] }, "condition": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "10989:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10996:4:18", "type": "", "value": "0x00" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "10986:2:18" }, "nodeType": "YulFunctionCall", "src": "10986:15:18" }, "nodeType": "YulIf", "src": "10983:41:18" }, { "nodeType": "YulAssignment", "src": "11033:20:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "11044:5:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11051:1:18", "type": "", "value": "1" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "11040:3:18" }, "nodeType": "YulFunctionCall", "src": "11040:13:18" }, "variableNames": [{ "name": "ret", "nodeType": "YulIdentifier", "src": "11033:3:18" }] }] }, "name": "decrement_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "10917:5:18", "type": "" }], "returnVariables": [{ "name": "ret", "nodeType": "YulTypedName", "src": "10927:3:18", "type": "" }], "src": "10888:171:18" }, { "body": { "nodeType": "YulBlock", "src": "11275:454:18", "statements": [{ "nodeType": "YulAssignment", "src": "11285:27:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "11297:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11308:3:18", "type": "", "value": "160" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "11293:3:18" }, "nodeType": "YulFunctionCall", "src": "11293:19:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "11285:4:18" }] }, { "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "11366:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "11379:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11390:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "11375:3:18" }, "nodeType": "YulFunctionCall", "src": "11375:17:18" }], "functionName": { "name": "abi_encode_t_address_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "11322:43:18" }, "nodeType": "YulFunctionCall", "src": "11322:71:18" }, "nodeType": "YulExpressionStatement", "src": "11322:71:18" }, { "expression": { "arguments": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "11447:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "11460:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11471:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "11456:3:18" }, "nodeType": "YulFunctionCall", "src": "11456:18:18" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "11403:43:18" }, "nodeType": "YulFunctionCall", "src": "11403:72:18" }, "nodeType": "YulExpressionStatement", "src": "11403:72:18" }, { "expression": { "arguments": [{ "name": "value2", "nodeType": "YulIdentifier", "src": "11529:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "11542:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11553:2:18", "type": "", "value": "64" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "11538:3:18" }, "nodeType": "YulFunctionCall", "src": "11538:18:18" }], "functionName": { "name": "abi_encode_t_address_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "11485:43:18" }, "nodeType": "YulFunctionCall", "src": "11485:72:18" }, "nodeType": "YulExpressionStatement", "src": "11485:72:18" }, { "expression": { "arguments": [{ "name": "value3", "nodeType": "YulIdentifier", "src": "11611:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "11624:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11635:2:18", "type": "", "value": "96" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "11620:3:18" }, "nodeType": "YulFunctionCall", "src": "11620:18:18" }], "functionName": { "name": "abi_encode_t_address_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "11567:43:18" }, "nodeType": "YulFunctionCall", "src": "11567:72:18" }, "nodeType": "YulExpressionStatement", "src": "11567:72:18" }, { "expression": { "arguments": [{ "name": "value4", "nodeType": "YulIdentifier", "src": "11693:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "11706:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11717:3:18", "type": "", "value": "128" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "11702:3:18" }, "nodeType": "YulFunctionCall", "src": "11702:19:18" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "11649:43:18" }, "nodeType": "YulFunctionCall", "src": "11649:73:18" }, "nodeType": "YulExpressionStatement", "src": "11649:73:18" }] }, "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_address_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "11215:9:18", "type": "" }, { "name": "value4", "nodeType": "YulTypedName", "src": "11227:6:18", "type": "" }, { "name": "value3", "nodeType": "YulTypedName", "src": "11235:6:18", "type": "" }, { "name": "value2", "nodeType": "YulTypedName", "src": "11243:6:18", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "11251:6:18", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "11259:6:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "11270:4:18", "type": "" }], "src": "11065:664:18" }, { "body": { "nodeType": "YulBlock", "src": "11841:119:18", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "11863:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11871:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "11859:3:18" }, "nodeType": "YulFunctionCall", "src": "11859:14:18" }, { "hexValue": "4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e67", "kind": "string", "nodeType": "YulLiteral", "src": "11875:34:18", "type": "", "value": "Not enough ether to cover asking" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "11852:6:18" }, "nodeType": "YulFunctionCall", "src": "11852:58:18" }, "nodeType": "YulExpressionStatement", "src": "11852:58:18" }, { "expression": { "arguments": [{ "arguments": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "11931:6:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11939:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "11927:3:18" }, "nodeType": "YulFunctionCall", "src": "11927:15:18" }, { "hexValue": "207072696365", "kind": "string", "nodeType": "YulLiteral", "src": "11944:8:18", "type": "", "value": " price" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "11920:6:18" }, "nodeType": "YulFunctionCall", "src": "11920:33:18" }, "nodeType": "YulExpressionStatement", "src": "11920:33:18" }] }, "name": "store_literal_in_memory_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "11833:6:18", "type": "" }], "src": "11735:225:18" }, { "body": { "nodeType": "YulBlock", "src": "12112:220:18", "statements": [{ "nodeType": "YulAssignment", "src": "12122:74:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "12188:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12193:2:18", "type": "", "value": "38" }], "functionName": { "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "12129:58:18" }, "nodeType": "YulFunctionCall", "src": "12129:67:18" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "12122:3:18" }] }, { "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "12294:3:18" }], "functionName": { "name": "store_literal_in_memory_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e", "nodeType": "YulIdentifier", "src": "12205:88:18" }, "nodeType": "YulFunctionCall", "src": "12205:93:18" }, "nodeType": "YulExpressionStatement", "src": "12205:93:18" }, { "nodeType": "YulAssignment", "src": "12307:19:18", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "12318:3:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12323:2:18", "type": "", "value": "64" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "12314:3:18" }, "nodeType": "YulFunctionCall", "src": "12314:12:18" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "12307:3:18" }] }] }, "name": "abi_encode_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e_to_t_string_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "12100:3:18", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "12108:3:18", "type": "" }], "src": "11966:366:18" }, { "body": { "nodeType": "YulBlock", "src": "12509:248:18", "statements": [{ "nodeType": "YulAssignment", "src": "12519:26:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "12531:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12542:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "12527:3:18" }, "nodeType": "YulFunctionCall", "src": "12527:18:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "12519:4:18" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "12566:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12577:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "12562:3:18" }, "nodeType": "YulFunctionCall", "src": "12562:17:18" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "12585:4:18" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "12591:9:18" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "12581:3:18" }, "nodeType": "YulFunctionCall", "src": "12581:20:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "12555:6:18" }, "nodeType": "YulFunctionCall", "src": "12555:47:18" }, "nodeType": "YulExpressionStatement", "src": "12555:47:18" }, { "nodeType": "YulAssignment", "src": "12611:139:18", "value": { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "12745:4:18" }], "functionName": { "name": "abi_encode_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e_to_t_string_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "12619:124:18" }, "nodeType": "YulFunctionCall", "src": "12619:131:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "12611:4:18" }] }] }, "name": "abi_encode_tuple_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e__to_t_string_memory_ptr__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "12489:9:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "12504:4:18", "type": "" }], "src": "12338:419:18" }, { "body": { "nodeType": "YulBlock", "src": "12795:28:18", "statements": [{ "nodeType": "YulAssignment", "src": "12805:12:18", "value": { "name": "value", "nodeType": "YulIdentifier", "src": "12812:5:18" }, "variableNames": [{ "name": "ret", "nodeType": "YulIdentifier", "src": "12805:3:18" }] }] }, "name": "identity", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "12781:5:18", "type": "" }], "returnVariables": [{ "name": "ret", "nodeType": "YulTypedName", "src": "12791:3:18", "type": "" }], "src": "12763:60:18" }, { "body": { "nodeType": "YulBlock", "src": "12889:82:18", "statements": [{ "nodeType": "YulAssignment", "src": "12899:66:18", "value": { "arguments": [{ "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "12957:5:18" }], "functionName": { "name": "cleanup_t_uint160", "nodeType": "YulIdentifier", "src": "12939:17:18" }, "nodeType": "YulFunctionCall", "src": "12939:24:18" }], "functionName": { "name": "identity", "nodeType": "YulIdentifier", "src": "12930:8:18" }, "nodeType": "YulFunctionCall", "src": "12930:34:18" }], "functionName": { "name": "cleanup_t_uint160", "nodeType": "YulIdentifier", "src": "12912:17:18" }, "nodeType": "YulFunctionCall", "src": "12912:53:18" }, "variableNames": [{ "name": "converted", "nodeType": "YulIdentifier", "src": "12899:9:18" }] }] }, "name": "convert_t_uint160_to_t_uint160", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "12869:5:18", "type": "" }], "returnVariables": [{ "name": "converted", "nodeType": "YulTypedName", "src": "12879:9:18", "type": "" }], "src": "12829:142:18" }, { "body": { "nodeType": "YulBlock", "src": "13037:66:18", "statements": [{ "nodeType": "YulAssignment", "src": "13047:50:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "13091:5:18" }], "functionName": { "name": "convert_t_uint160_to_t_uint160", "nodeType": "YulIdentifier", "src": "13060:30:18" }, "nodeType": "YulFunctionCall", "src": "13060:37:18" }, "variableNames": [{ "name": "converted", "nodeType": "YulIdentifier", "src": "13047:9:18" }] }] }, "name": "convert_t_uint160_to_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "13017:5:18", "type": "" }], "returnVariables": [{ "name": "converted", "nodeType": "YulTypedName", "src": "13027:9:18", "type": "" }], "src": "12977:126:18" }, { "body": { "nodeType": "YulBlock", "src": "13177:66:18", "statements": [{ "nodeType": "YulAssignment", "src": "13187:50:18", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "13231:5:18" }], "functionName": { "name": "convert_t_uint160_to_t_address", "nodeType": "YulIdentifier", "src": "13200:30:18" }, "nodeType": "YulFunctionCall", "src": "13200:37:18" }, "variableNames": [{ "name": "converted", "nodeType": "YulIdentifier", "src": "13187:9:18" }] }] }, "name": "convert_t_address_payable_to_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "13157:5:18", "type": "" }], "returnVariables": [{ "name": "converted", "nodeType": "YulTypedName", "src": "13167:9:18", "type": "" }], "src": "13109:134:18" }, { "body": { "nodeType": "YulBlock", "src": "13322:74:18", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "13339:3:18" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "13383:5:18" }], "functionName": { "name": "convert_t_address_payable_to_t_address", "nodeType": "YulIdentifier", "src": "13344:38:18" }, "nodeType": "YulFunctionCall", "src": "13344:45:18" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "13332:6:18" }, "nodeType": "YulFunctionCall", "src": "13332:58:18" }, "nodeType": "YulExpressionStatement", "src": "13332:58:18" }] }, "name": "abi_encode_t_address_payable_to_t_address_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "13310:5:18", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "13317:3:18", "type": "" }], "src": "13249:147:18" }, { "body": { "nodeType": "YulBlock", "src": "13564:296:18", "statements": [{ "nodeType": "YulAssignment", "src": "13574:26:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "13586:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "13597:2:18", "type": "", "value": "96" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "13582:3:18" }, "nodeType": "YulFunctionCall", "src": "13582:18:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "13574:4:18" }] }, { "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "13654:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "13667:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "13678:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "13663:3:18" }, "nodeType": "YulFunctionCall", "src": "13663:17:18" }], "functionName": { "name": "abi_encode_t_address_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "13610:43:18" }, "nodeType": "YulFunctionCall", "src": "13610:71:18" }, "nodeType": "YulExpressionStatement", "src": "13610:71:18" }, { "expression": { "arguments": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "13743:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "13756:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "13767:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "13752:3:18" }, "nodeType": "YulFunctionCall", "src": "13752:18:18" }], "functionName": { "name": "abi_encode_t_address_payable_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "13691:51:18" }, "nodeType": "YulFunctionCall", "src": "13691:80:18" }, "nodeType": "YulExpressionStatement", "src": "13691:80:18" }, { "expression": { "arguments": [{ "name": "value2", "nodeType": "YulIdentifier", "src": "13825:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "13838:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "13849:2:18", "type": "", "value": "64" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "13834:3:18" }, "nodeType": "YulFunctionCall", "src": "13834:18:18" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "13781:43:18" }, "nodeType": "YulFunctionCall", "src": "13781:72:18" }, "nodeType": "YulExpressionStatement", "src": "13781:72:18" }] }, "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "13520:9:18", "type": "" }, { "name": "value2", "nodeType": "YulTypedName", "src": "13532:6:18", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "13540:6:18", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "13548:6:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "13559:4:18", "type": "" }], "src": "13402:458:18" }, { "body": { "nodeType": "YulBlock", "src": "14092:470:18", "statements": [{ "nodeType": "YulAssignment", "src": "14102:27:18", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "14114:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14125:3:18", "type": "", "value": "160" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "14110:3:18" }, "nodeType": "YulFunctionCall", "src": "14110:19:18" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "14102:4:18" }] }, { "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "14183:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "14196:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14207:1:18", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "14192:3:18" }, "nodeType": "YulFunctionCall", "src": "14192:17:18" }], "functionName": { "name": "abi_encode_t_address_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "14139:43:18" }, "nodeType": "YulFunctionCall", "src": "14139:71:18" }, "nodeType": "YulExpressionStatement", "src": "14139:71:18" }, { "expression": { "arguments": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "14264:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "14277:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14288:2:18", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "14273:3:18" }, "nodeType": "YulFunctionCall", "src": "14273:18:18" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "14220:43:18" }, "nodeType": "YulFunctionCall", "src": "14220:72:18" }, "nodeType": "YulExpressionStatement", "src": "14220:72:18" }, { "expression": { "arguments": [{ "name": "value2", "nodeType": "YulIdentifier", "src": "14354:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "14367:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14378:2:18", "type": "", "value": "64" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "14363:3:18" }, "nodeType": "YulFunctionCall", "src": "14363:18:18" }], "functionName": { "name": "abi_encode_t_address_payable_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "14302:51:18" }, "nodeType": "YulFunctionCall", "src": "14302:80:18" }, "nodeType": "YulExpressionStatement", "src": "14302:80:18" }, { "expression": { "arguments": [{ "name": "value3", "nodeType": "YulIdentifier", "src": "14444:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "14457:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14468:2:18", "type": "", "value": "96" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "14453:3:18" }, "nodeType": "YulFunctionCall", "src": "14453:18:18" }], "functionName": { "name": "abi_encode_t_address_payable_to_t_address_fromStack", "nodeType": "YulIdentifier", "src": "14392:51:18" }, "nodeType": "YulFunctionCall", "src": "14392:80:18" }, "nodeType": "YulExpressionStatement", "src": "14392:80:18" }, { "expression": { "arguments": [{ "name": "value4", "nodeType": "YulIdentifier", "src": "14526:6:18" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "14539:9:18" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14550:3:18", "type": "", "value": "128" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "14535:3:18" }, "nodeType": "YulFunctionCall", "src": "14535:19:18" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "14482:43:18" }, "nodeType": "YulFunctionCall", "src": "14482:73:18" }, "nodeType": "YulExpressionStatement", "src": "14482:73:18" }] }, "name": "abi_encode_tuple_t_address_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "14032:9:18", "type": "" }, { "name": "value4", "nodeType": "YulTypedName", "src": "14044:6:18", "type": "" }, { "name": "value3", "nodeType": "YulTypedName", "src": "14052:6:18", "type": "" }, { "name": "value2", "nodeType": "YulTypedName", "src": "14060:6:18", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "14068:6:18", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "14076:6:18", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "14087:4:18", "type": "" }], "src": "13866:696:18" }] }, "contents": "{\n\n    function array_length_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct NFTMarketplace.NFT -> struct NFTMarketplace.NFT\n    function abi_encode_t_struct$_NFT_$3033_memory_ptr_to_t_struct$_NFT_$3033_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // nftContract\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // seller\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // listed\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_NFT_$3033_memory_ptr_to_t_struct$_NFT_$3033_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_NFT_$3033_memory_ptr_to_t_struct$_NFT_$3033_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct NFTMarketplace.NFT[] -> struct NFTMarketplace.NFT[]\n    function abi_encode_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_NFT_$3033_memory_ptr_to_t_struct$_NFT_$3033_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$3033_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price must be at least 1 wei\")\n\n    }\n\n    function abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough ether for listing fee\")\n\n    }\n\n    function abi_encode_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_address_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough ether to cover asking\")\n\n        mstore(add(memPtr, 32), \" price\")\n\n    }\n\n    function abi_encode_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n}\n", "id": 18, "language": "Yul", "name": "#utility.yul" }], "immutableReferences": {}, "linkReferences": {}, "object": "6080604052600436106100705760003560e01c806334f5b6241161004e57806334f5b624146100f6578063629cb2e414610112578063a82ba76f1461013d578063ad05f1b41461015957610070565b8063012386f0146100755780631a7a922e146100a05780632b86ae38146100cb575b600080fd5b34801561008157600080fd5b5061008a610175565b604051610097919061150d565b60405180910390f35b3480156100ac57600080fd5b506100b56103cf565b6040516100c2919061150d565b60405180910390f35b3480156100d757600080fd5b506100e061076d565b6040516100ed919061153e565b60405180910390f35b610110600480360381019061010b91906115b6565b610773565b005b34801561011e57600080fd5b506101276109b7565b604051610134919061150d565b60405180910390f35b61015760048036038101906101529190611609565b610ce3565b005b610173600480360381019061016e91906115b6565b610f57565b005b60606000600254905060006001548261018e9190611678565b905060008167ffffffffffffffff8111156101ac576101ab6116ac565b5b6040519080825280602002602001820160405280156101e557816020015b6101d26112d3565b8152602001906001900390816101ca5790505b5090506000805b848110156103c4576005600060018361020591906116db565b815260200190815260200160002060050160009054906101000a900460ff16156103b1576005600060018361023a91906116db565b81526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff1615151515815250508383815181106103975761039661170f565b5b602002602001018190525081806103ad9061173e565b9250505b80806103bc9061173e565b9150506101ec565b508194505050505090565b6060600060025490506000805b828110156104b4573373ffffffffffffffffffffffffffffffffffffffff166005600060018461040c91906116db565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561048d57506005600060018361046d91906116db565b815260200190815260200160002060050160009054906101000a900460ff165b156104a157818061049d9061173e565b9250505b80806104ac9061173e565b9150506103dc565b5060008167ffffffffffffffff8111156104d1576104d06116ac565b5b60405190808252806020026020018201604052801561050a57816020015b6104f76112d3565b8152602001906001900390816104ef5790505b5090506000805b84811015610762573373ffffffffffffffffffffffffffffffffffffffff166005600060018461054191906116db565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156105c25750600560006001836105a291906116db565b815260200190815260200160002060050160009054906101000a900460ff165b1561074f57600560006001836105d891906116db565b81526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff1615151515815250508383815181106107355761073461170f565b5b6020026020010181905250818061074b9061173e565b9250505b808061075a9061173e565b915050610511565b508194505050505090565b60035481565b600160008082825461078591906116db565b92505081905550600080549050600082116107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc906117e3565b60405180910390fd5b6003543414610819576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108109061184f565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016108569392919061187e565b600060405180830381600087803b15801561087057600080fd5b505af1158015610884573d6000803e3d6000fd5b505050506000600560008581526020019081526020016000209050338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550308160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160050160006101000a81548160ff0219169083151502179055508281600401819055506001600081548092919061095e906118b5565b91905055507fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d19858533308760405161099a9594939291906118de565b60405180910390a15060005481146109b157600080fd5b50505050565b6060600060025490506000805b82811015610a63573373ffffffffffffffffffffffffffffffffffffffff16600560006001846109f491906116db565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610a50578180610a4c9061173e565b9250505b8080610a5b9061173e565b9150506109c4565b5060008167ffffffffffffffff811115610a8057610a7f6116ac565b5b604051908082528060200260200182016040528015610ab957816020015b610aa66112d3565b815260200190600190039081610a9e5790505b5090506000805b84811015610cd8573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610af091906116db565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610cc55760056000600183610b4e91906116db565b81526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff161515151581525050838381518110610cab57610caa61170f565b5b60200260200101819052508180610cc19061173e565b9250505b8080610cd09061173e565b915050610ac0565b508194505050505090565b6001600080828254610cf591906116db565b9250508190555060008054905060006005600084815260200190815260200160002090508060040154341015610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d57906119a3565b60405180910390fd5b60003390508160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610dcf573d6000803e3d6000fd5b508473ffffffffffffffffffffffffffffffffffffffff166323b872dd308385600101546040518463ffffffff1660e01b8152600401610e1193929190611a22565b600060405180830381600087803b158015610e2b57600080fd5b505af1158015610e3f573d6000803e3d6000fd5b50505050808260030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008260050160006101000a81548160ff02191690831515021790555060016000815480929190610eb69061173e565b91905055507f16f1dbd97e6bf646d429ed186cce832f1f7fd9907814293b83181e9970ab7bd285858460020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634604051610f3a959493929190611a59565b60405180910390a150506000548114610f5257600080fd5b505050565b6001600080828254610f6991906116db565b9250508190555060008054905060008211610fb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb0906117e3565b60405180910390fd5b6003543414610ffd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff49061184f565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161103a9392919061187e565b600060405180830381600087803b15801561105457600080fd5b505af1158015611068573d6000803e3d6000fd5b50505050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f193505050501580156110d6573d6000803e3d6000fd5b50600260008154809291906110ea9061173e565b91905055506040518060c001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600115158152506005600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050507fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d1984843330866040516112b79594939291906118de565b60405180910390a160005481146112cd57600080fd5b50505050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113a482611379565b9050919050565b6113b481611399565b82525050565b6000819050919050565b6113cd816113ba565b82525050565b60006113de82611379565b9050919050565b6113ee816113d3565b82525050565b60008115159050919050565b611409816113f4565b82525050565b60c08201600082015161142560008501826113ab565b50602082015161143860208501826113c4565b50604082015161144b60408501826113e5565b50606082015161145e60608501826113e5565b50608082015161147160808501826113c4565b5060a082015161148460a0850182611400565b50505050565b6000611496838361140f565b60c08301905092915050565b6000602082019050919050565b60006114ba8261134d565b6114c48185611358565b93506114cf83611369565b8060005b838110156115005781516114e7888261148a565b97506114f2836114a2565b9250506001810190506114d3565b5085935050505092915050565b6000602082019050818103600083015261152781846114af565b905092915050565b611538816113ba565b82525050565b6000602082019050611553600083018461152f565b92915050565b600080fd5b61156781611399565b811461157257600080fd5b50565b6000813590506115848161155e565b92915050565b611593816113ba565b811461159e57600080fd5b50565b6000813590506115b08161158a565b92915050565b6000806000606084860312156115cf576115ce611559565b5b60006115dd86828701611575565b93505060206115ee868287016115a1565b92505060406115ff868287016115a1565b9150509250925092565b600080604083850312156116205761161f611559565b5b600061162e85828601611575565b925050602061163f858286016115a1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611683826113ba565b915061168e836113ba565b92508282039050818111156116a6576116a5611649565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006116e6826113ba565b91506116f1836113ba565b925082820190508082111561170957611708611649565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611749826113ba565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361177b5761177a611649565b5b600182019050919050565b600082825260208201905092915050565b7f5072696365206d757374206265206174206c6561737420312077656900000000600082015250565b60006117cd601c83611786565b91506117d882611797565b602082019050919050565b600060208201905081810360008301526117fc816117c0565b9050919050565b7f4e6f7420656e6f75676820657468657220666f72206c697374696e6720666565600082015250565b6000611839602083611786565b915061184482611803565b602082019050919050565b600060208201905081810360008301526118688161182c565b9050919050565b61187881611399565b82525050565b6000606082019050611893600083018661186f565b6118a0602083018561186f565b6118ad604083018461152f565b949350505050565b60006118c0826113ba565b9150600082036118d3576118d2611649565b5b600182039050919050565b600060a0820190506118f3600083018861186f565b611900602083018761152f565b61190d604083018661186f565b61191a606083018561186f565b611927608083018461152f565b9695505050505050565b7f4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e6760008201527f2070726963650000000000000000000000000000000000000000000000000000602082015250565b600061198d602683611786565b915061199882611931565b604082019050919050565b600060208201905081810360008301526119bc81611980565b9050919050565b6000819050919050565b60006119e86119e36119de84611379565b6119c3565b611379565b9050919050565b60006119fa826119cd565b9050919050565b6000611a0c826119ef565b9050919050565b611a1c81611a01565b82525050565b6000606082019050611a37600083018661186f565b611a446020830185611a13565b611a51604083018461152f565b949350505050565b600060a082019050611a6e600083018861186f565b611a7b602083018761152f565b611a886040830186611a13565b611a956060830185611a13565b611aa2608083018461152f565b969550505050505056fea2646970667358221220fd17c80760609b03c1c6dc28ab6b8a9a3e75934edac19b8550d22f65b31faf6d64736f6c63430008140033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x34F5B624 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x34F5B624 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x629CB2E4 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0xA82BA76F EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xAD05F1B4 EQ PUSH2 0x159 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x12386F0 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x1A7A922E EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x2B86AE38 EQ PUSH2 0xCB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB5 PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE0 PUSH2 0x76D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0xCE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH2 0xF57 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1678 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AC JUMPI PUSH2 0x1AB PUSH2 0x16AC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1D2 PUSH2 0x12D3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1CA JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x397 JUMPI PUSH2 0x396 PUSH2 0x170F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x3AD SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x3BC SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EC JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4B4 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x48D JUMPI POP PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x4A1 JUMPI DUP2 DUP1 PUSH2 0x49D SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x4AC SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3DC JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x50A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x4F7 PUSH2 0x12D3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x4EF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x762 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x5C2 JUMPI POP PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x74F JUMPI PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x735 JUMPI PUSH2 0x734 PUSH2 0x170F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x74B SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x75A SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x511 JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x785 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x810 SWAP1 PUSH2 0x184F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x856 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x187E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x884 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP ADDRESS DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x95E SWAP1 PUSH2 0x18B5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0xA0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19 DUP6 DUP6 CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD PUSH2 0x99A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x9B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA63 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x9F4 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA50 JUMPI DUP2 DUP1 PUSH2 0xA4C SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xA5B SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9C4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA80 JUMPI PUSH2 0xA7F PUSH2 0x16AC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAB9 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xAA6 PUSH2 0x12D3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA9E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCD8 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xAF0 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCC5 JUMPI PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCAB JUMPI PUSH2 0xCAA PUSH2 0x170F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xCC1 SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xCD0 SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAC0 JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xCF5 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD57 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP4 DUP6 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE11 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A22 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xEB6 SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x16F1DBD97E6BF646D429ED186CCE832F1F7FD9907814293B83181E9970AB7BD2 DUP6 DUP6 DUP5 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xF3A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0xF52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xF69 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0xFB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB0 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0xFFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF4 SWAP1 PUSH2 0x184F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x187E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1054 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1068 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x10EA SWAP1 PUSH2 0x173E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0xA0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19 DUP5 DUP5 CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD PUSH2 0x12B7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x12CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A4 DUP3 PUSH2 0x1379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B4 DUP2 PUSH2 0x1399 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CD DUP2 PUSH2 0x13BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13DE DUP3 PUSH2 0x1379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13EE DUP2 PUSH2 0x13D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1409 DUP2 PUSH2 0x13F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1425 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x13AB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1438 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x13C4 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x144B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x13E5 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x145E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x13E5 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1471 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x13C4 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1484 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1400 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1496 DUP4 DUP4 PUSH2 0x140F JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BA DUP3 PUSH2 0x134D JUMP JUMPDEST PUSH2 0x14C4 DUP2 DUP6 PUSH2 0x1358 JUMP JUMPDEST SWAP4 POP PUSH2 0x14CF DUP4 PUSH2 0x1369 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1500 JUMPI DUP2 MLOAD PUSH2 0x14E7 DUP9 DUP3 PUSH2 0x148A JUMP JUMPDEST SWAP8 POP PUSH2 0x14F2 DUP4 PUSH2 0x14A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x14D3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1527 DUP2 DUP5 PUSH2 0x14AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1538 DUP2 PUSH2 0x13BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1553 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1567 DUP2 PUSH2 0x1399 JUMP JUMPDEST DUP2 EQ PUSH2 0x1572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1584 DUP2 PUSH2 0x155E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1593 DUP2 PUSH2 0x13BA JUMP JUMPDEST DUP2 EQ PUSH2 0x159E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15B0 DUP2 PUSH2 0x158A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15CF JUMPI PUSH2 0x15CE PUSH2 0x1559 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15DD DUP7 DUP3 DUP8 ADD PUSH2 0x1575 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15EE DUP7 DUP3 DUP8 ADD PUSH2 0x15A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x15FF DUP7 DUP3 DUP8 ADD PUSH2 0x15A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1620 JUMPI PUSH2 0x161F PUSH2 0x1559 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x162E DUP6 DUP3 DUP7 ADD PUSH2 0x1575 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x163F DUP6 DUP3 DUP7 ADD PUSH2 0x15A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1683 DUP3 PUSH2 0x13BA JUMP JUMPDEST SWAP2 POP PUSH2 0x168E DUP4 PUSH2 0x13BA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x16A6 JUMPI PUSH2 0x16A5 PUSH2 0x1649 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16E6 DUP3 PUSH2 0x13BA JUMP JUMPDEST SWAP2 POP PUSH2 0x16F1 DUP4 PUSH2 0x13BA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1709 JUMPI PUSH2 0x1708 PUSH2 0x1649 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1749 DUP3 PUSH2 0x13BA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x177B JUMPI PUSH2 0x177A PUSH2 0x1649 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5072696365206D757374206265206174206C6561737420312077656900000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CD PUSH1 0x1C DUP4 PUSH2 0x1786 JUMP JUMPDEST SWAP2 POP PUSH2 0x17D8 DUP3 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17FC DUP2 PUSH2 0x17C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820657468657220666F72206C697374696E6720666565 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1839 PUSH1 0x20 DUP4 PUSH2 0x1786 JUMP JUMPDEST SWAP2 POP PUSH2 0x1844 DUP3 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1868 DUP2 PUSH2 0x182C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1878 DUP2 PUSH2 0x1399 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1893 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x18A0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x18AD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x152F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C0 DUP3 PUSH2 0x13BA JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x1649 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x18F3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x1900 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x190D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x191A PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x1927 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x152F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820657468657220746F20636F7665722061736B696E67 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2070726963650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198D PUSH1 0x26 DUP4 PUSH2 0x1786 JUMP JUMPDEST SWAP2 POP PUSH2 0x1998 DUP3 PUSH2 0x1931 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19BC DUP2 PUSH2 0x1980 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E8 PUSH2 0x19E3 PUSH2 0x19DE DUP5 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x1379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FA DUP3 PUSH2 0x19CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0C DUP3 PUSH2 0x19EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1C DUP2 PUSH2 0x1A01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1A37 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x1A44 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x1A51 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x152F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1A6E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x1A7B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x1A88 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x1A95 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x1AA2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x152F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT OR 0xC8 SMOD PUSH1 0x60 SWAP12 SUB 0xC1 0xC6 0xDC 0x28 0xAB PUSH12 0x8A9A3E75934EDAC19B8550D2 0x2F PUSH6 0xB31FAF6D6473 PUSH16 0x6C634300081400330000000000000000 ", "sourceMap": "163:4637:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3043:470;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4134:663;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;277:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2396:639;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3521:605;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1764:571;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1043:697;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3043:470;3089:12;3114:16;3133:9;;3114:28;;3153:22;3189:9;;3178:8;:20;;;;:::i;:::-;3153:45;;3209:17;3239:14;3229:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3209:45;;3265:14;3299:6;3294:188;3315:8;3311:1;:12;3294:188;;;3349:8;:15;3362:1;3358;:5;;;;:::i;:::-;3349:15;;;;;;;;;;;:22;;;;;;;;;;;;3345:126;;;3410:8;:15;3423:1;3419;:5;;;;:::i;:::-;3410:15;;;;;;;;;;;3392:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:4;3397:9;3392:15;;;;;;;;:::i;:::-;;;;;;;:33;;;;3444:11;;;;;:::i;:::-;;;;3345:126;3325:3;;;;;:::i;:::-;;;;3294:188;;;;3501:4;3494:11;;;;;;3043:470;:::o;4134:663::-;4179:12;4204:13;4220:9;;4204:25;;4240:15;4275:6;4270:177;4291:8;4287:1;:12;4270:177;;;4351:10;4325:36;;:8;:15;4338:1;4334;:5;;;;:::i;:::-;4325:15;;;;;;;;;;;:22;;;;;;;;;;;;:36;;;:62;;;;;4365:8;:15;4378:1;4374;:5;;;;:::i;:::-;4365:15;;;;;;;;;;;:22;;;;;;;;;;;;4325:62;4321:115;;;4408:12;;;;;:::i;:::-;;;;4321:115;4301:3;;;;;:::i;:::-;;;;4270:177;;;;4459:17;4489:10;4479:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4459:41;;4511:14;4545:6;4540:228;4561:8;4557:1;:12;4540:228;;;4621:10;4595:36;;:8;:15;4608:1;4604;:5;;;;:::i;:::-;4595:15;;;;;;;;;;;:22;;;;;;;;;;;;:36;;;:62;;;;;4635:8;:15;4648:1;4644;:5;;;;:::i;:::-;4635:15;;;;;;;;;;;:22;;;;;;;;;;;;4595:62;4591:166;;;4696:8;:15;4709:1;4705;:5;;;;:::i;:::-;4696:15;;;;;;;;;;;4678:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:4;4683:9;4678:15;;;;;;;;:::i;:::-;;;;;;;:33;;;;4730:11;;;;;:::i;:::-;;;;4591:166;4571:3;;;;;:::i;:::-;;;;4540:228;;;;4785:4;4778:11;;;;;;4134:663;:::o;277:41::-;;;;:::o;2396:639::-;1061:1:17;1044:13;;:18;;;;;;;:::i;:::-;;;;;;;;1073:20;1096:13;;1073:36;;2527:1:16::1;2518:6;:10;2510:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;2593:11;;2580:9;:24;2572:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2662:12;2654:34;;;2689:10;2709:4;2716:8;2654:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2738:15;2756:8;:18;2765:8;2756:18;;;;;;;;;;;2738:36;;2806:10;2785:3;:10;;;:32;;;;;;;;;;;;;;;;;;2856:4;2828:3;:9;;;:34;;;;;;;;;;;;;;;;;;2886:4;2873:3;:10;;;:17;;;;;;;;;;;;;;;;;;2913:6;2901:3;:9;;:18;;;;2932:9;;:11;;;;;;;;;:::i;:::-;;;;;;2959:68;2969:12;2983:8;2993:10;3013:4;3020:6;2959:68;;;;;;;;;;:::i;:::-;;;;;;;;2499:536;1156:13:17::0;;1140:12;:29;1132:38;;;;;;1033:145;2396:639:16;;;:::o;3521:605::-;3562:12;3587:13;3603:9;;3587:25;;3623:15;3658:6;3653:150;3674:8;3670:1;:12;3653:150;;;3733:10;3708:35;;:8;:15;3721:1;3717;:5;;;;:::i;:::-;3708:15;;;;;;;;;;;:21;;;;;;;;;;;;:35;;;3704:88;;3764:12;;;;;:::i;:::-;;;;3704:88;3684:3;;;;;:::i;:::-;;;;3653:150;;;;3815:17;3845:10;3835:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3815:41;;3867:14;3901:6;3896:201;3917:8;3913:1;:12;3896:201;;;3976:10;3951:35;;:8;:15;3964:1;3960;:5;;;;:::i;:::-;3951:15;;;;;;;;;;;:21;;;;;;;;;;;;:35;;;3947:139;;4025:8;:15;4038:1;4034;:5;;;;:::i;:::-;4025:15;;;;;;;;;;;4007:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:4;4012:9;4007:15;;;;;;;;:::i;:::-;;;;;;;:33;;;;4059:11;;;;;:::i;:::-;;;;3947:139;3927:3;;;;;:::i;:::-;;;;3896:201;;;;4114:4;4107:11;;;;;;3521:605;:::o;1764:571::-;1061:1:17;1044:13;;:18;;;;;;;:::i;:::-;;;;;;;;1073:20;1096:13;;1073:36;;1859:15:16::1;1877:8;:18;1886:8;1877:18;;;;;;;;;;;1859:36;;1927:3;:9;;;1914;:22;;1906:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1992:21;2024:10;1992:43;;2054:3;:10;;;;;;;;;;;;2046:28;;:39;2075:9;2046:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2104:12;2096:34;;;2139:4;2146:5;2153:3;:11;;;2096:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2188:5;2176:3;:9;;;:17;;;;;;;;;;;;;;;;;;2217:5;2204:3;:10;;;:18;;;;;;;;;;;;;;;;;;2235:9;;:11;;;;;;;;;:::i;:::-;;;;;;2262:65;2270:12;2284:8;2294:3;:10;;;;;;;;;;;;2306:3;:9;;;;;;;;;;;;2317;2262:65;;;;;;;;;;:::i;:::-;;;;;;;;1848:487;;1156:13:17::0;;1140:12;:29;1132:38;;;;;;1033:145;1764:571:16;;:::o;1043:697::-;1061:1:17;1044:13;;:18;;;;;;;:::i;:::-;;;;;;;;1073:20;1096:13;;1073:36;;1172:1:16::1;1163:6;:10;1155:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1238:11;;1225:9;:24;1217:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1307:12;1299:34;;;1334:10;1354:4;1361:8;1299:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1381:12;;;;;;;;;;;:21;;:34;1403:11;;1381:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1426:9;;:11;;;;;;;;;:::i;:::-;;;;;;1471:175;;;;;;;;1489:12;1471:175;;;;;;1516:8;1471:175;;;;1547:10;1471:175;;;;;;1589:4;1471:175;;;;;;1610:6;1471:175;;;;1631:4;1471:175;;;;::::0;1450:8:::1;:18;1459:8;1450:18;;;;;;;;;;;:196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1664:68;1674:12;1688:8;1698:10;1718:4;1725:6;1664:68;;;;;;;;;;:::i;:::-;;;;;;;;1156:13:17::0;;1140:12;:29;1132:38;;;;;;1033:145;1043:697:16;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:135:18:-;95:6;129:5;123:12;113:22;;7:135;;;:::o;148:205::-;268:11;302:6;297:3;290:19;342:4;337:3;333:14;318:29;;148:205;;;;:::o;359:153::-;447:4;470:3;462:11;;500:4;495:3;491:14;483:22;;359:153;;;:::o;518:126::-;555:7;595:42;588:5;584:54;573:65;;518:126;;;:::o;650:96::-;687:7;716:24;734:5;716:24;:::i;:::-;705:35;;650:96;;;:::o;752:108::-;829:24;847:5;829:24;:::i;:::-;824:3;817:37;752:108;;:::o;866:77::-;903:7;932:5;921:16;;866:77;;;:::o;949:108::-;1026:24;1044:5;1026:24;:::i;:::-;1021:3;1014:37;949:108;;:::o;1063:104::-;1108:7;1137:24;1155:5;1137:24;:::i;:::-;1126:35;;1063:104;;;:::o;1173:132::-;1266:32;1292:5;1266:32;:::i;:::-;1261:3;1254:45;1173:132;;:::o;1311:90::-;1345:7;1388:5;1381:13;1374:21;1363:32;;1311:90;;;:::o;1407:99::-;1478:21;1493:5;1478:21;:::i;:::-;1473:3;1466:34;1407:99;;:::o;1574:1227::-;1703:4;1698:3;1694:14;1797:4;1790:5;1786:16;1780:23;1816:63;1873:4;1868:3;1864:14;1850:12;1816:63;:::i;:::-;1718:171;1974:4;1967:5;1963:16;1957:23;1993:63;2050:4;2045:3;2041:14;2027:12;1993:63;:::i;:::-;1899:167;2150:4;2143:5;2139:16;2133:23;2169:79;2242:4;2237:3;2233:14;2219:12;2169:79;:::i;:::-;2076:182;2341:4;2334:5;2330:16;2324:23;2360:79;2433:4;2428:3;2424:14;2410:12;2360:79;:::i;:::-;2268:181;2532:4;2525:5;2521:16;2515:23;2551:63;2608:4;2603:3;2599:14;2585:12;2551:63;:::i;:::-;2459:165;2708:4;2701:5;2697:16;2691:23;2727:57;2778:4;2773:3;2769:14;2755:12;2727:57;:::i;:::-;2634:160;1672:1129;1574:1227;;:::o;2807:263::-;2918:10;2939:88;3023:3;3015:6;2939:88;:::i;:::-;3059:4;3054:3;3050:14;3036:28;;2807:263;;;;:::o;3076:134::-;3167:4;3199;3194:3;3190:14;3182:22;;3076:134;;;:::o;3282:900::-;3443:3;3472:75;3541:5;3472:75;:::i;:::-;3563:107;3663:6;3658:3;3563:107;:::i;:::-;3556:114;;3694:77;3765:5;3694:77;:::i;:::-;3794:7;3825:1;3810:347;3835:6;3832:1;3829:13;3810:347;;;3911:6;3905:13;3938:105;4039:3;4024:13;3938:105;:::i;:::-;3931:112;;4066:81;4140:6;4066:81;:::i;:::-;4056:91;;3870:287;3857:1;3854;3850:9;3845:14;;3810:347;;;3814:14;4173:3;4166:10;;3448:734;;;3282:900;;;;:::o;4188:457::-;4373:4;4411:2;4400:9;4396:18;4388:26;;4460:9;4454:4;4450:20;4446:1;4435:9;4431:17;4424:47;4488:150;4633:4;4624:6;4488:150;:::i;:::-;4480:158;;4188:457;;;;:::o;4651:118::-;4738:24;4756:5;4738:24;:::i;:::-;4733:3;4726:37;4651:118;;:::o;4775:222::-;4868:4;4906:2;4895:9;4891:18;4883:26;;4919:71;4987:1;4976:9;4972:17;4963:6;4919:71;:::i;:::-;4775:222;;;;:::o;5084:117::-;5193:1;5190;5183:12;5330:122;5403:24;5421:5;5403:24;:::i;:::-;5396:5;5393:35;5383:63;;5442:1;5439;5432:12;5383:63;5330:122;:::o;5458:139::-;5504:5;5542:6;5529:20;5520:29;;5558:33;5585:5;5558:33;:::i;:::-;5458:139;;;;:::o;5603:122::-;5676:24;5694:5;5676:24;:::i;:::-;5669:5;5666:35;5656:63;;5715:1;5712;5705:12;5656:63;5603:122;:::o;5731:139::-;5777:5;5815:6;5802:20;5793:29;;5831:33;5858:5;5831:33;:::i;:::-;5731:139;;;;:::o;5876:619::-;5953:6;5961;5969;6018:2;6006:9;5997:7;5993:23;5989:32;5986:119;;;6024:79;;:::i;:::-;5986:119;6144:1;6169:53;6214:7;6205:6;6194:9;6190:22;6169:53;:::i;:::-;6159:63;;6115:117;6271:2;6297:53;6342:7;6333:6;6322:9;6318:22;6297:53;:::i;:::-;6287:63;;6242:118;6399:2;6425:53;6470:7;6461:6;6450:9;6446:22;6425:53;:::i;:::-;6415:63;;6370:118;5876:619;;;;;:::o;6501:474::-;6569:6;6577;6626:2;6614:9;6605:7;6601:23;6597:32;6594:119;;;6632:79;;:::i;:::-;6594:119;6752:1;6777:53;6822:7;6813:6;6802:9;6798:22;6777:53;:::i;:::-;6767:63;;6723:117;6879:2;6905:53;6950:7;6941:6;6930:9;6926:22;6905:53;:::i;:::-;6895:63;;6850:118;6501:474;;;;;:::o;6981:180::-;7029:77;7026:1;7019:88;7126:4;7123:1;7116:15;7150:4;7147:1;7140:15;7167:194;7207:4;7227:20;7245:1;7227:20;:::i;:::-;7222:25;;7261:20;7279:1;7261:20;:::i;:::-;7256:25;;7305:1;7302;7298:9;7290:17;;7329:1;7323:4;7320:11;7317:37;;;7334:18;;:::i;:::-;7317:37;7167:194;;;;:::o;7367:180::-;7415:77;7412:1;7405:88;7512:4;7509:1;7502:15;7536:4;7533:1;7526:15;7553:191;7593:3;7612:20;7630:1;7612:20;:::i;:::-;7607:25;;7646:20;7664:1;7646:20;:::i;:::-;7641:25;;7689:1;7686;7682:9;7675:16;;7710:3;7707:1;7704:10;7701:36;;;7717:18;;:::i;:::-;7701:36;7553:191;;;;:::o;7750:180::-;7798:77;7795:1;7788:88;7895:4;7892:1;7885:15;7919:4;7916:1;7909:15;7936:233;7975:3;7998:24;8016:5;7998:24;:::i;:::-;7989:33;;8044:66;8037:5;8034:77;8031:103;;8114:18;;:::i;:::-;8031:103;8161:1;8154:5;8150:13;8143:20;;7936:233;;;:::o;8175:169::-;8259:11;8293:6;8288:3;8281:19;8333:4;8328:3;8324:14;8309:29;;8175:169;;;;:::o;8350:178::-;8490:30;8486:1;8478:6;8474:14;8467:54;8350:178;:::o;8534:366::-;8676:3;8697:67;8761:2;8756:3;8697:67;:::i;:::-;8690:74;;8773:93;8862:3;8773:93;:::i;:::-;8891:2;8886:3;8882:12;8875:19;;8534:366;;;:::o;8906:419::-;9072:4;9110:2;9099:9;9095:18;9087:26;;9159:9;9153:4;9149:20;9145:1;9134:9;9130:17;9123:47;9187:131;9313:4;9187:131;:::i;:::-;9179:139;;8906:419;;;:::o;9331:182::-;9471:34;9467:1;9459:6;9455:14;9448:58;9331:182;:::o;9519:366::-;9661:3;9682:67;9746:2;9741:3;9682:67;:::i;:::-;9675:74;;9758:93;9847:3;9758:93;:::i;:::-;9876:2;9871:3;9867:12;9860:19;;9519:366;;;:::o;9891:419::-;10057:4;10095:2;10084:9;10080:18;10072:26;;10144:9;10138:4;10134:20;10130:1;10119:9;10115:17;10108:47;10172:131;10298:4;10172:131;:::i;:::-;10164:139;;9891:419;;;:::o;10316:118::-;10403:24;10421:5;10403:24;:::i;:::-;10398:3;10391:37;10316:118;;:::o;10440:442::-;10589:4;10627:2;10616:9;10612:18;10604:26;;10640:71;10708:1;10697:9;10693:17;10684:6;10640:71;:::i;:::-;10721:72;10789:2;10778:9;10774:18;10765:6;10721:72;:::i;:::-;10803;10871:2;10860:9;10856:18;10847:6;10803:72;:::i;:::-;10440:442;;;;;;:::o;10888:171::-;10927:3;10950:24;10968:5;10950:24;:::i;:::-;10941:33;;10996:4;10989:5;10986:15;10983:41;;11004:18;;:::i;:::-;10983:41;11051:1;11044:5;11040:13;11033:20;;10888:171;;;:::o;11065:664::-;11270:4;11308:3;11297:9;11293:19;11285:27;;11322:71;11390:1;11379:9;11375:17;11366:6;11322:71;:::i;:::-;11403:72;11471:2;11460:9;11456:18;11447:6;11403:72;:::i;:::-;11485;11553:2;11542:9;11538:18;11529:6;11485:72;:::i;:::-;11567;11635:2;11624:9;11620:18;11611:6;11567:72;:::i;:::-;11649:73;11717:3;11706:9;11702:19;11693:6;11649:73;:::i;:::-;11065:664;;;;;;;;:::o;11735:225::-;11875:34;11871:1;11863:6;11859:14;11852:58;11944:8;11939:2;11931:6;11927:15;11920:33;11735:225;:::o;11966:366::-;12108:3;12129:67;12193:2;12188:3;12129:67;:::i;:::-;12122:74;;12205:93;12294:3;12205:93;:::i;:::-;12323:2;12318:3;12314:12;12307:19;;11966:366;;;:::o;12338:419::-;12504:4;12542:2;12531:9;12527:18;12519:26;;12591:9;12585:4;12581:20;12577:1;12566:9;12562:17;12555:47;12619:131;12745:4;12619:131;:::i;:::-;12611:139;;12338:419;;;:::o;12763:60::-;12791:3;12812:5;12805:12;;12763:60;;;:::o;12829:142::-;12879:9;12912:53;12930:34;12939:24;12957:5;12939:24;:::i;:::-;12930:34;:::i;:::-;12912:53;:::i;:::-;12899:66;;12829:142;;;:::o;12977:126::-;13027:9;13060:37;13091:5;13060:37;:::i;:::-;13047:50;;12977:126;;;:::o;13109:134::-;13167:9;13200:37;13231:5;13200:37;:::i;:::-;13187:50;;13109:134;;;:::o;13249:147::-;13344:45;13383:5;13344:45;:::i;:::-;13339:3;13332:58;13249:147;;:::o;13402:458::-;13559:4;13597:2;13586:9;13582:18;13574:26;;13610:71;13678:1;13667:9;13663:17;13654:6;13610:71;:::i;:::-;13691:80;13767:2;13756:9;13752:18;13743:6;13691:80;:::i;:::-;13781:72;13849:2;13838:9;13834:18;13825:6;13781:72;:::i;:::-;13402:458;;;;;;:::o;13866:696::-;14087:4;14125:3;14114:9;14110:19;14102:27;;14139:71;14207:1;14196:9;14192:17;14183:6;14139:71;:::i;:::-;14220:72;14288:2;14277:9;14273:18;14264:6;14220:72;:::i;:::-;14302:80;14378:2;14367:9;14363:18;14354:6;14302:80;:::i;:::-;14392;14468:2;14457:9;14453:18;14444:6;14392:80;:::i;:::-;14482:73;14550:3;14539:9;14535:19;14526:6;14482:73;:::i;:::-;13866:696;;;;;;;;:::o" }, "methodIdentifiers": { "LISTING_FEE()": "2b86ae38", "buyNFT(address,uint256)": "a82ba76f", "getListedNFTs()": "012386f0", "getMyListNFTs()": "1a7a922e", "getMyNFTs()": "629cb2e4", "listNFT(address,uint256,uint256)": "ad05f1b4", "resellNft(address,uint256,uint256)": "34f5b624" } }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTSold\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LISTING_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListedNFTs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct NFTMarketplace.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyListNFTs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct NFTMarketplace.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyNFTs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct NFTMarketplace.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"listNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"resellNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMarketplace.sol\":\"NFTMarketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/NFTMarketplace.sol\":{\"keccak256\":\"0x9d94c3e5abdc214120108c51cf7e21457e93af407dd9b2aeeab3e7ef6515ac4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35f835754c83b97965a09353fccb18ff8cb93f7a78ccc04f5d08020fffe4b803\",\"dweb:/ipfs/QmVEWqs6PXdRzEw3MUSSWQxSE4bZoCubcSoV7iTRcQpnC2\"]},\"contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x692016b581f9afca82a88b3e3459fb1248c4cbf58db093e96b9e445286309c53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://488fabe11bb62422d03b19b53c8299989c7b4e00f5bc936c28a968b78b080251\",\"dweb:/ipfs/QmSEoDmecozqywEJ1ThnPxLeiUvPoNuEdrBpmm12T9cAwz\"]}},\"version\":1}" } }, "contracts/ReentrancyGuard.sol": { "ReentrancyGuard": { "abi": [{ "inputs": [], "stateMutability": "nonpayable", "type": "constructor" }], "evm": { "bytecode": { "functionDebugData": { "@_3622": { "entryPoint": null, "id": 3622, "parameterSlots": 0, "returnSlots": 0 } }, "generatedSources": [], "linkReferences": {}, "object": "6080604052348015600f57600080fd5b506001600081905550603f8060256000396000f3fe6080604052600080fdfea264697066735822122066895883ccd95f64be4386b1d45945ba7383f2e347413ae1137d5a03227b6b0d64736f6c63430008140033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x3F DUP1 PUSH1 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x895883CCD95F64 0xBE NUMBER DUP7 0xB1 0xD4 MSIZE GASLIMIT 0xBA PUSH20 0x83F2E347413AE1137D5A03227B6B0D64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ", "sourceMap": "290:891:17:-:0;;;433:192;;;;;;;;;;616:1;600:13;:17;;;;290:891;;;;;;" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "6080604052600080fdfea264697066735822122066895883ccd95f64be4386b1d45945ba7383f2e347413ae1137d5a03227b6b0d64736f6c63430008140033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x895883CCD95F64 0xBE NUMBER DUP7 0xB1 0xD4 MSIZE GASLIMIT 0xBA PUSH20 0x83F2E347413AE1137D5A03227B6B0D64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ", "sourceMap": "290:891:17:-:0;;;;;" }, "methodIdentifiers": {} }, "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"author\":\"Remco Bloemen <remco@2\\u03c0.com>, Eenae <alexey@mixbytes.io>\",\"details\":\"If you mark a function `nonReentrant`, you should also mark it `external`.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_guardCounter\":{\"details\":\"counter to allow mutex lock with only one SSTORE operation\"}},\"title\":\"Helps contracts guard against reentrancy attacks.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x692016b581f9afca82a88b3e3459fb1248c4cbf58db093e96b9e445286309c53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://488fabe11bb62422d03b19b53c8299989c7b4e00f5bc936c28a968b78b080251\",\"dweb:/ipfs/QmSEoDmecozqywEJ1ThnPxLeiUvPoNuEdrBpmm12T9cAwz\"]}},\"version\":1}" } } } } }
